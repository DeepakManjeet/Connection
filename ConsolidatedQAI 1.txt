#########################################################################################################
Test Case Name : AF01ZeroAccrueFeeRateTransaction
Test Objective : Verify the ability to check if 0.00% Accruing fee rate can be allowed through Transaction processing in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the facility and enter the transaction code as 2790.
5. Enter the transaction details on new Transaction window with Transaction Rate as Zero.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Verify that the Zero Accrual Rate is successfully updated in Accruing Fee.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD01LoanPrincipalAndRateSummary
Test Objective : Capture screen prints for Loan Principal and Rate summary
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Select the Facility from explorer screen and then select Loan from the explorer screen. Take screenshot.
4. Right click to view loan. Take screenshot for Loan Basic Information screen
5. Navigate to Loan History window. Right click and select Special Action and then Loan History
6. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
7. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD01LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD02LoanAccrualSchedule
Test Objective : Capture screen prints for Loan Accrual Modifier under Accrual Schedule
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
4. Click on Accrual Modifier view and capture screenprint
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD02LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD03LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD01LoanPrincipalAndRateSummary
Test Objective : Capture screen prints for Loan Principal and Rate summary
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Select the Facility from explorer screen and then select Loan from the explorer screen. Take screenshot.
4. Right click to view loan. Take screenshot for Loan Basic Information screen
5. Navigate to Loan History window. Right click and select Special Action and then Loan History
6. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
7. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
8. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD04LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD05LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD06LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD07LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD08LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD09LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD10LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD11LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD12LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD13LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD14LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD15LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD16LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD17LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD18LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD19LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD20LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD21LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD22LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD23LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD24LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD25LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD26LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD27LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD28LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD29LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD30LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD31LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD32LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD33LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD34LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD35LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD36LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD37LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD38LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD39LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD40LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD41LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD42LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : AD43LoanPrincipalRateSummaryAccrualSchedule
Test Objective : Capture screen prints for Loan Principal, Rate summary and Accrual Modifier
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query to determine whether a loan is active or inactive
4. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
5. Select the Facility from explorer and then select Loan from the explorer screen. Take screenshot.
6. Right click to view loan. Take screenshot for Loan Basic Information screen
7. Navigate to Loan History window. Right click and select Special Action and then Loan History
8. Filter transaction based on nearest principal posting date and nearest rate change date
9. Navigate to Principal Summary information tab under views. Take screenshot of Principal Summary with respective effective date.
10. Navigate to Rate Summary information tab under views. Take screenshot of Rate Summary with respective effective date.
11. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
12. Click on Accrual Modifier view and capture screenprint
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS01LandscapeLoanAWMINTOnlyIncludeVSR
Test Objective : Verify the QR - BOS Regression Landscape Loan awm int Only - include a VSR.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS02LandscapeLoanAWMSingle
Test Objective : Verify the QR - BOS Regression Landscape Loan AWM Single
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS03LandscapeLoanAWMUnbillRebillOneCycle
Test Objective : Verify the QR - Landscape Loan AWM Unbill Rebill One Cycle.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query and fetch the due date of last invoice
4. Navigate to new Transaction window for a Loan.
5. Select the loan and enter the transaction code 3630.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Navigate to Loan Invoices window
9. Unbill the invoice for Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
10. Approve the repayment schedule
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS04LandscapeLoanAWMZeroBalanceOnMaturityDate
Test Objective : Verify the QR - BOS Regression Landscape Loan AWM Zero Balance On Maturity Date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter values for Repayment Schedule
4. Navigate to existing Repayment Primary window and open an existing record.
5. Select Billing Tab. Enter the Loan Repayment Schedule Billing information. Save the details.
6. Approve the repayment schedule
7. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS05PortraitFacilityAWMIncludePastDue
Test Objective : Verify the QR - BOS Regression Portrait Facility AWM Include Past Due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and confirm Fee has a past Due Amount:
4. Navigate to existing Fee-Accruing window for a Facility and open the existing record.Update Billing information and save the record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS06PortraitLoanAWMIntOnlyIncludeVSR
Test Objective : Verify the QR - BOS Regression Portrait Loan awm int Only- include a VSR.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS07PortraitLoanNonAWMIncludePastDue
Test Objective : BOS Regression Portrait Loan Non AWM Include Past Due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing loan.
4. Verify that no invoice is owed in Loan Invoices window.
5. Update the Repayment Primary Schedule information and save the record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS08PortraitLoanNonAWMOverpaid
Test Objective : BOS Regression Portrit Loan Non AWM overpaid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3200.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Enter the Repayment Primary Schedule information.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS09PortriatLoanNonAWMZeroBalAfterMaturityDate
Test Objective : BOS Regression Landscape Loan non AWM  zero balance after Maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Update the Repayment Primary Schedule information and save the record.
5. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS10ZeroBalanceStatementOnMaturityDate
Test Objective : Verify the QR - BOS Regression Zero Balance Statement On Maturity Date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
5. Update Lead Days value so that invoice generates on next EOD
6. Run SQL query to fetch a loan where principal has been paid but interest remians
7. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
8. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the second Loan.
9. Update Lead Days value so that invoice generates on next EOD
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS10ZeroBalanceStatementOnMaturityDate_DP1
Test Objective : Verify the QR - BOS Regression Zero Balance Statement On Maturity Date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
5. Run SQL query to fetch NextDueDate for Loan1 Repayment Secondary
6. Run SQL query to fetch NextDueDate for Loan2 Repayment Secondary
7. Navigate to existing Repayment Secondary window and open an existing record.
8. Update Lead Days value so that invoice generates on next EOD
9. Navigate to existing Repayment Secondary window and open an existing record.
10. Update Lead Days value so that invoice generates on next EOD
11. Approve the repayment schedule
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS11ZeroBalanceStatementBeforeMaturityDate
Test Objective : Verify the QR - BOS Regression Zero Balance Statement before Maturity Date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Navigate to existing Repayment Primary window and open an existing record.
5. Update Lead Days value so that invoice generates on next EOD
6. Approve the repayment schedule
7. Run SQL query to fetch a loan where principal has been paid but interest remians
8. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the second Loan.
9. Navigate to existing Repayment Primary window and open an existing record.
10. Update Lead Days value so that invoice generates on next EOD
11. Approve the repayment schedule
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS11ZeroBalanceStatementBeforeMaturityDate_DP1
Test Objective : Verify the QR - BOS Regression Zero Balance Statement before Maturity Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query to fetch NextDueDate for Loan1 Repayment Secondary
3. Run SQL query to fetch NextDueDate for Loan2 Repayment Secondary
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to existing Repayment Secondary window and open an existing record.
6. Update Lead Days value so that invoice generates on next EOD
7. Approve the repayment schedule
8. Navigate to existing Repayment Secondary window and open an existing record.
9. Update Lead Days value so that invoice generates on next EOD
10. Approve the repayment schedule
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS12C1ValidationDeletAddress1
Test Objective : C1 Validation Delet Reference Address From Customer Record Facility Statement Bill Address 1
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Accruing-Fee window for an existing facility and update the Billing Info.
4. Navigate to existing Customer Address window for an existing Customer.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS13C1ValidationDeletAddress2
Test Objective : C1 Validation Delet Reference Address From Customer Record Facility Statement Bill Address 2
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Accruing-Fee window for an existing facility and update the Billing Info.
4. Navigate to existing Customer Address window for an existing Customer.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS14C1ValidationDeleteReferencedAddress
Test Objective : C1 Validation Delete Reference Address from Customer Record Loan Statement Bill Address 1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update the Repayment Primary Schedule information and save the record.
4. Navigate to existing Customer Address window for an existing Customer.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS15C1ValidationDeleteReferencedAddress
Test Objective : C1 Validation Delete Reference Address from Customer Record Loan Statement Bill Address 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update the Repayment Primary Schedule information and save the record.
4. Navigate to existing Customer Address window for an existing Customer.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS16LandscapeFacilityAWMIncludePastDue
Test Objective : BOS Regression Landscape Facility AWM Include Past Due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and confirm Fee has a past Due Amount:
4. Create an ACH Transfer Payment Instruction for a Customer.
5. Logout from Servicing application.
6. Login into ACBS Servicing application with valid user credentials.
7. Update the existing Accruing-Fee of facility and approve the request in Two-Touch window.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS17LandscapeFacilityAWMBackDated
Test Objective : BOS Regression Landscape Facility AWM Backdated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility with Payment Instruction as CHARGE DDA and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS18LandscapeFacilityAWMUnbillRebillOneCycle
Test Objective : BOS Regression Landscape Facility AWM Unbill Rebill One Cycle.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and confirm Fee has a past Due Amount:
4. Create a new Bundle and navigate to new Transaction window for a Facility.
5. Select the Facility and enter the transaction code as 2300.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Select and Unbill the invoice for a Facility. Update the fee billing information with the date of the invoice that was unbilled.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS19LandscapeLoanAWMConsolidated
Test Objective : BOS Regression Landscape Loan AWM Consolidated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the Repayment Primary Schedule information.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS20LandscapeLoanAWMIncludePastDue
Test Objective : BOS Regression Landscape Loan AWM Include Past Due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing loan.
4. Verify that no invoice is owed in Loan Invoices window.
5. Update the Repayment Primary Schedule information and save the record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS21LandscapeLoanAWMPrinAndInt
Test Objective : BOS Regression Landscape Loan AWM Principal and Interest.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS22LandscapeLoanAWMPrinAndInt
Test Objective : Verify the QR - BOS Regression Landscape Loan AWM Prin And Int.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS23LandscapeLoanAWMPrinPlusInt
Test Objective : BOS Regression Landscape Loan AWM Prin Plus Int.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS24LandscapeLoanAWMMaturityBill
Test Objective : BOS Regression Landscape Loan AWM Maturity Bill.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Update the Repayment Primary Schedule information and save the record.
5. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS25LandscapeLoanAWMOverpaid
Test Objective : BOS Regression Landscape Loan AWM overpaid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3200.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Enter the Repayment Primary Schedule information.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS26LandscapeLoanAWMZeroBalanceAfterMaturityDate
Test Objective : Verify the QR - BOS Regression Landscape Loan AWM Zero Balance After Maturity Date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter values for Repayment Schedule
4. Navigate to existing Repayment Primary window and open an existing record.
5. Select Billing Tab. Enter the Loan Repayment Schedule Billing information. Save the details.
6. Approve the repayment schedule
7. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS27LandscapeLoanAWMZeroBalBeforeMaturityDate
Test Objective : BOS Regression Landscape Loan AWM zero balance before maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the Repayment Primary Schedule information.
4. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS28PortraitFacilityAWMBackDated
Test Objective : BOS Regression Portrait Facility AWM Backdated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility with Payment Instruction as CHARGE DDA and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS29PortraitFacilityAWMOverpaid
Test Objective : BOS Regression Portrait Facility AWM Overpaid
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2700.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Navigate to existing Fee-Accruing window for a Facility and open the existing record.
9. Select Billing tab
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS30PortraitFacilityAWMUnbillRebillOneCycle
Test Objective : Verify the QR - Portrait Facility AWM Unbill Rebill One Cycle.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and confirm Fee has a past Due Amount:
4. Create a new Bundle and navigate to new Transaction window for a Facility.
5. Select the Facility and enter the transaction code as 2790.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Select and Unbill the invoice for a Facility. Update the fee billing information with the date of the invoice that was unbilled.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS31PortraitFacilityNonAWMIncludePastDue
Test Objective : Verify the QR - BOS Regression Portrait Facility Non AWM Include Past Due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and confirm Fee has a past Due Amount:
4. Navigate to existing Fee-Accruing window for a Facility and open the existing record.Update Billing information and save the record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS32PortraitFacilityNonAWMBackDated
Test Objective : BOS Regression Portrait Facility Non AWM Backdated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility with Payment Instruction as CHARGE DDA and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS33PortraitFacilityNonAWMUnbillRebillOneCycle
Test Objective : Verify the QR - Portrait Facility Non AWM Unbill Rebill One Cycle
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and confirm Fee has a past Due Amount:
4. Create a new Bundle and navigate to new Transaction window for a Facility.
5. Select the Facility and enter the transaction code as 2300.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Select and Unbill the invoice for a Facility. Update the fee billing information with the date of the invoice that was unbilled.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS34PortraitLoanAWMConsolidated
Test Objective : BOS Regression Portrait Loan AWM Consolidated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the Repayment Primary Schedule information.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS35PortraitLoanAWMIncludePastDue
Test Objective : BOS Regression Portrait Loan AWM Include Past Due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing loan.
4. Verify that no invoice is owed in Loan Invoices window.
5. Update the Repayment Primary Schedule information and save the record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS36PortraitLoanAWMPrinAndInt
Test Objective : BOS Regression Portrait Loan AWM Prin and Int.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS37PortritLoanAWMPrinAndInt
Test Objective : BOS Regression Portrait Loan AWM Principal and Interest.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Enter Secondary Repayment Schedule details.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS38PortraitLoanAWMPrinPlusInt
Test Objective : BOS Regression Portrait Loan AWM Prin Plus Int.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS39PortraitLoanAWMSingle
Test Objective : Verify the QR - BOS Regression Portrait Loan AWM Single
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS40PortraitLoanAWMMaturityBill
Test Objective : BOS Regression Portrait Loan AWM Maturity Bill.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Update the Repayment Primary Schedule information and save the record.
5. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS41PortraitLoanAWMOverpaid
Test Objective : BOS Regression Portrit Loan AWM overpaid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3200.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Enter the Repayment Primary Schedule information.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS42PortraitLoanAWMUnbillRebillOneCycle
Test Objective : Verify the QR - Portrait Loan AWM Unbill Rebill One Cycle
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query and fetch the due date of last invoice
4. Navigate to new Transaction window for a Loan.
5. Select the loan and enter the transaction code as 3120.
6. Enter the transaction details on new Transaction screen.
7. Enter Cash offset details.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Navigate to Loan Invoices window
10. Unbill the invoice for Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
11. Approve the repayment schedule
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS43PortraitLoanAWMZeroBalAfterMaturityDate
Test Objective : BOS Regression Portrait Loan AWM Zero Balance After Maturity Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Update the Repayment Primary Schedule information and save the record.
5. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS44PortraitLoanAWMZeroBalBeforeMaturityDate
Test Objective : BOS Regression Portrait Loan AWM zero balance before maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the Repayment Primary Schedule information.
4. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS45PortraitLoanAWMZeroBalOnMaturityDate
Test Objective : BOS Regression Portrait Loan AWM zero balance on maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Maturity Date field value and save the Loan.
4. Enter the Repayment Primary Schedule information.
5. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS46PortraitLoanNonAWMConsolidated
Test Objective : BOS Regression Portrait Loan Non AWM Consolidated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the Repayment Primary Schedule information.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS47PortraitLoanNonAWMIntOnly
Test Objective : BOS Regression Portrait Loan Non AWM Int only.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS48PortraitLoanNonAWMPrinAndInt
Test Objective : BOS Regression Portrait Loan Non AWM Prin and Int.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS49PortraitLoanNonAWMPrinBAndIntA
Test Objective : BOS Regression Portrait Loan Non AWM Principal B and Interest A.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Enter Secondary Repayment Schedule details.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS50PortraitLoanNonAWMPrinPlusInt
Test Objective : BOS Regression Portrait Loan Non AWM Prin Plus Int.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS51PortraitLoanNonAWMSingle
Test Objective : Verify the QR - BOS Regression Portrait Loan Non AWM Single
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS52PortraitLoanNonAWMMaturityBill
Test Objective : BOS Regression Portrait Loan Non AWM Maturity Bill.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Rate Maturity Date field value and save the Loan.
4. Update the Repayment Primary Schedule information and save the record.
5. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200 and 3820) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS53PortraitLoanNonAWMUnbillRebillOneCycle
Test Objective : Verify BOS Regression Portrait Loan Non AWM Unbill Rebill One Cycle.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query and fetch the due date of last invoice
4. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Navigate to Loan Invoices window
8. Unbill the invoice for Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
9. Approve the repayment schedule
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS54PortraitLoanNonAWMZeroBalBeforeMaturityDate
Test Objective : BOS Regression Portrait Loan Non AWM zero balance before maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the Repayment Primary Schedule information.
4. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS55PortraitLoanNonAWMZeroBalOnMaturityDate
Test Objective : BOS Regression Portrait Loan Non AWM zero balance on maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window. Update the Maturity Date field value and save the Loan.
4. Enter the Repayment Primary Schedule information.
5. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS56LoanStatementHistoryDisplayForZeroBal
Test Objective : Loan Statement history display for zero balance starters.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for the same loan for interest payment reversal and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction screen.
6. Enter Cash offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS57ZeroBalStmtGenerateWithNoHistory
Test Objective : Zero Bal Stmt Generate With No History
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS57ZeroBalStmtGenerateWithNoHistory_DP1
Test Objective : Zero Bal Stmt Generate With No History
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Update Lead days in Repayment Primary Schedule information and save the record.
5. Logout from Servicing application.
6. Login into ACBS Servicing application with valid user credentials.
7. Fetch Loan2 for Modify Secondary Repayment
8. Update Lead days in the Secondary Repayment Schedule information and save the record.
9. Logout from Servicing application.
10. Login into ACBS Servicing application with valid user credentials.
11. Fetch Loan3 for Create New Secondary Repayment
12. Create New Secondary Repayment for Loan3
13. Update Lead days in the Primary Repayment Schedule information for Loan3 and save the record.
14. Logout from Servicing application.
15. Login into ACBS Servicing application with valid user credentials.
16. Fetch Loan4 for Create New Secondary Repayment
17. Create New Secondary Repayment for Loan4
18. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS58ZeroBalStmtClosedLoanSBALoan
Test Objective : Zero balance statement closed Loan SBA loan example.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
4. Update Lead days in Repayment Primary Schedule information and save the record.
5. Navigate to edit Loan window and update Closer type in Servicing information. Save the changes.
6. Run SQL query to fetch a Customer and Facility to create a new loan.
7. Navigate to the new Loan Window.
8. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
9. Enter Cash offset details and save.
10. Navigate to Accrual Schedule window.
11. Enter field values in Accrual Schedule window and save the details.
12. Verify warning message is displayed as expected.
13. Navigate to Accrual Schedule window.
14. Enter field values in Accrual Schedule window and save the details.
15. Save and Submit the bundle. Login with Approver credential and post the bundle.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS58ZeroBalStmtClosedLoanSBALoan
Test Objective : Zero balance statement closed Loan SBA loan example.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
4. Select the loan and enter the transaction code as 3100.
5. Select the Save and Create Another menu in new Transaction window.
6. Select the loan and enter the transaction code as 3200.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Update Bill Type, next Due Date and Lead days in Repayment Primary Schedule information and save the record.
10. Navigate to edit Loan window and update Closer type in Servicing information. Save the changes.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS59ZeroBalNoInvoicesValidateZeroITDLoanIncrease
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate Zero ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Save and Submit the bundle. Login with Approver credential and post the bundle.
6. Select the loan and enter the transaction code as 3120.
7. Enter the transaction details on new Transaction screen.
8. Enter Cash offset details.
9. Save and Submit the bundle. Login with Approver credential and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS59ZeroBalNoInvoicesValidateZeroITDLoanIncrease_DP1
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate Zero ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3130.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Update Lead days in the Secondary Repayment Schedule information and save the record.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS59ZeroBalNoInvoicesValidateZeroITDLoanIncrease_DP2
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate Zero ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS60ZeroBalStmtActiveLoanNoInvoiceValidateCheckNewLoan1
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS60ZeroBalStmtActiveLoanNoInvoiceValidateCheckNewLoan1_DP1
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3100.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Update Lead days in Repayment Primary Schedule information and save the record.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS60ZeroBalStmtActiveLoanNoInvoiceValidateCheckNewLoan1_DP2
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS61ZeroBalStmtActiveLoanNoInvoiceValidate
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS61ZeroBalStmtActiveLoanNoInvoiceValidate_DP1
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3130.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Update Lead days in Repayment Primary Schedule information and save the record.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS61ZeroBalStmtActiveLoanNoInvoiceValidate_DP2
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS62ZerobalancLoanIncreaseLoanPrinPayment
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate ITD Accrued Check Loan Increase With Prin Payment
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Select the loan and enter the transaction code as 3120.
8. Enter the transaction details on new Transaction screen.
9. Enter Cash offset details.
10. Save and Submit the bundle. Login with Approver credential and post the bundle.
11. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS62ZerobalancLoanIncreaseLoanPrinPayment_DP1
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate ITD Accrued Check Loan Increase With Prin Payment
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Navigate to existing Repayment Primary window and open an existing record.
5. Approve the repayment schedule
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS62ZerobalancLoanIncreaseLoanPrinPayment_DP2
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate ITD Accrued Check Loan Increase With Prin Payment
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS63ZeroBalStmtClosedLoanNoInvioce
Test Objective : Zero Bal Stmt Closed Loan No Invoices Validate ITD Accrued Check Loan Increased.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Save and Submit the bundle. Login with Approver credential and post the bundle.
6. Create a new Bundle for the same loan for interest payment reversal and navigate to new Transaction window.
7. Select the loan and enter the transaction code as 3120.
8. Enter the transaction details on new Transaction screen.
9. Enter Cash offset details.
10. Save and Submit the bundle. Login with Approver credential and post the bundle.
11. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS63ZeroBalStmtClosedLoanNoInvioce_DP1
Test Objective : Zero Bal Stmt Closed Loan No Invoices Validate ITD Accrued Check Loan Increased.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update the Lead days in Repayment Primary Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS63ZeroBalStmtClosedLoanNoInvioce_DP2
Test Objective : Zero Bal Stmt Closed Loan No Invoices Validate ITD Accrued Check Loan Increased.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS64ZeroBalStmtActiveLoanNoInvioce
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate ITD Accrued Check New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS64ZeroBalStmtActiveLoanNoInvioce
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate ITD Accrued Check New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update the Lead days in Repayment Primary Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS64ZeroBalStmtActiveLoanNoInvioce
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate ITD Accrued Check New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS65ZeroBalStmtClosedLoanNoInvioce
Test Objective : Zero Bal Stmt Closed Loan No Invoices Validate ITD Accrued Check New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS65ZeroBalStmtClosedLoanNoInvioce_DP1
Test Objective : Zero Bal Stmt Closed Loan No Invoices Validate ITD Accrued Check New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update the Lead days in Repayment Primary Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS65ZeroBalStmtClosedLoanNoInvioce_DP2
Test Objective : Zero Bal Stmt Closed Loan No Invoices Validate ITD Accrued Check New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS66ZeroBalStmtClosedLoanNoInvoiceValidateCheckNewLoan
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Navigate to new Transaction window for a Loan.
8. Select the loan and enter the transaction code 3100.
9. Enter the transaction details on new Transaction window.
10. Enter Cash Offset details.
11. Save and Submit the bundle. Login with approver credentials and post the bundle.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS66ZeroBalStmtClosedLoanNoInvoiceValidateCheckNewLoan
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS66ZeroBalStmtClosedLoanNoInvoiceValidateCheckNewLoan
Test Objective : Zero Bal Stmt Active Loan No Invoices Validate Zero ITD Accrued Check New Loan1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS67ZeroBalNoInvoicesValidateITDLoanIncrease
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Select the loan and enter the transaction code as 3120.
8. Enter the transaction details on new Transaction screen.
9. Enter Cash offset details.
10. Save and Submit the bundle. Login with Approver credential and post the bundle.
11. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS67ZeroBalNoInvoicesValidateITDLoanIncrease_DP1
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS67ZeroBalNoInvoicesValidateITDLoanIncrease_DP2
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Active-Loan No Invoices Validate ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS68ZeroBalStmtClsLoanNoInvoicesValidateZeroITDAccrued
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Close-Loan No Invoices Validate Zero ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Save and Submit the bundle. Login with Approver credential and post the bundle.
6. Select the loan and enter the transaction code as 3120.
7. Enter the transaction details on new Transaction screen.
8. Enter Cash offset details.
9. Save and Submit the bundle. Login with Approver credential and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS68ZeroBalStmtClsLoanNoInvoicesValidateZeroITDAccrued
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Close-Loan No Invoices Validate Zero ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3130.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Update Lead days in the Primary Repayment Schedule information and save the record.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS68ZeroBalStmtClsLoanNoInvoicesValidateZeroITDAccrued_DP2
Test Objective : Verify the QR - BOS Regression Zero balance Stmt Close-Loan No Invoices Validate Zero ITD Accrued Check Loan Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in the Secondary Repayment Schedule information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS69ZeroBalStmtAfterLoanMatDate
Test Objective : Verify Zero Balance Statement After Maturity Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for the first Loan.
4. Update Lead Days value so that invoice generates on next EOD
5. Run SQL query to fetch a loan where principal has been paid but interest remians
6. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the second Loan.
7. Update Lead Days value so that invoice generates on next EOD
8. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for the Third Loan.
9. Update Lead Days value so that invoice generates on next EOD
10. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the fourth Loan.
11. Update Lead Days value so that invoice generates on next EOD
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS70ZeroBalStmtAfterLoanMatDateGenerateInvoiceSameDayLoanIsPaid
Test Objective : Verify Zero Balance Statement After Maturity Date Generate Invoice Same Day Loan Is paid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for the first Loan.
4. Update Lead Days value so that invoice generates on next EOD
5. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the second Loan.
6. Update Lead Days value so that invoice generates on next EOD
7. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for the Third Loan.
8. Update Lead Days value so that invoice generates on next EOD
9. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the fourth Loan.
10. Update Lead Days value so that invoice generates on next EOD
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS71ZeroBalanceSTMTLoanMatDateLoanIsClosed
Test Objective : Verify Zero Balance Statement After Maturity Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for the first Loan.
4. Update Lead Days value so that invoice generates on next EOD
5. Run SQL query to fetch a loan where principal has been paid but interest remians
6. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the second Loan.
7. Update Lead Days value so that invoice generates on next EOD
8. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for the Third Loan.
9. Update Lead Days value so that invoice generates on next EOD
10. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the fourth Loan.
11. Update Lead Days value so that invoice generates on next EOD
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS72IssueLoadingVariousDMtabsDueToAmtsLargerThan13
Test Objective : Issue Loading Various DM tables Due To Amounts Larger Than 13.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Create an Accruing-Fee record for an existing Facility with Payment Instruction as CHARGE DDA and by entering all the mandatory field values.
5. Create new facility bundle and create five loans with principal balance of 1,000,000,000,000
6. Select the Rate Setting Complete checkbox.
7. Navigate to Cashoffset window and enter Cash Offset details.
8. Select the Rate Setting Complete checkbox.
9. Navigate to Cashoffset window and enter Cash Offset details.
10. Select the Rate Setting Complete checkbox.
11. Navigate to Cashoffset window and enter Cash Offset details.
12. Select the Rate Setting Complete checkbox.
13. Navigate to Cashoffset window and enter Cash Offset details.
14. Select the Rate Setting Complete checkbox.
15. Navigate to Cashoffset window and enter Cash Offset details.
16. Save and Submit the bundle. Login with Approver credential and post the bundle.
17. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the first Loan.
18. Create a new bundle and navigate to new Transaction window to process the transactions 3200 for the first Loan.
19. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS73InvoicesGenOnActiveLoansWhenPrinDateInPast
Test Objective : Invoices Generate On Active Loans When Print Date Is in Past.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Navigate to Loan Invoices window
8. Unbill the invoice for Loan
9. Approve the repayment schedule
10. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal borrower's information.
11. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
12. Verify that Transaction Reversal bundle is posted successfully.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS74MissingDSCLIAWhenAccrToDateDiffThanDueDate
Test Objective : Missing DSCLIA When Accrue to date is different than Due Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Lead days in Repayment Primary Schedule information and save the record. Loan ID1: 
4. Update Lead days in Repayment Primary Schedule information and save the record. Loan ID2: 
5. Update Lead days in Repayment Primary Schedule information and save the record. Loan ID3: 
6. Update Lead days in Repayment Secondary Schedule information and save the record. Loan ID3: 
7. Approve the repayment schedule
8. Switch Servicing Queue to N2 Servicing Queue.
9. Update Lead days in Repayment Primary Schedule information and save the record. Loan ID4: 
10. Update Lead days in Repayment Primary Schedule information and save the record. Loan ID5: 
11. Approve the repayment schedule
12. Navigate to the new Loan Window.
13. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
14. Enter Secondary Repayment Schedule Basic Information.
15. Enter Secondary Repayment Schedule Billing Information and save the record.
16. Save and Submit the bundle. Login with Approver credential and post the bundle. Loan ID6: 
17. Update Lead days in Repayment Primary Schedule information and save the record.
18. Update Lead days in Repayment Secondary Schedule information and save the record. Loan ID6: 
19. Approve the repayment schedule
20. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS75PortraitFacilityStmtDisplayUnusedBalWithActivity
Test Objective : Portrait Facility Statement Display Unused Balance With Activity.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the loan and enter the transaction code as 3100.
9. Enter the transaction details on new Transaction window.
10. Select the Save and Create Another menu in new Transaction window.
11. Select the loan and enter the transaction code as 3100.
12. Enter the transaction details on new Transaction window.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to existing Fee-Accruing window for a Facility and open the existing record.Update Billing information and save the record.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : BOS76NewLoanWithSimpleLag
Test Objective : New Loan With Simple LAG.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing01
Test Objective : Verify the ability to update an existing facility EAC Cost Center - flow to loans (REQ 2.0).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Cost Center.
4. Select Servicing tab and update Servicing Information details.
5. Save Facility details and approve the two touch record.
6. Navigate to View Facility window. Select Servicing Tab.
7. Verify that updated Cost Center is displayed as expected.
8. Verify that updated Servicing Unit and Servicing Section field values are displayed as expected.
9. Navigate to View Loan window. Select Servicing Tab.
10. Verify that Cost Center is flow down from Facility and displayed as expected.
11. Verify that Servicing unit and Servicing section field values are flow down from Facility and displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing02
Test Objective : Verify the ability to update an existing facility EAC Cost center/Servicing unit/Servicing section (REQ 1.0/3.0).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Cost Center.
4. Select Servicing tab and update Servicing tab information.
5. Save Facility details and approve the two touch record.
6. Navigate to View Facility window. Select Servicing Tab.
7. Verify that updated Servicing Unit and Servicing Section field values are displayed as expected.
8. Navigate to View Loan window. Select Servicing Tab. Verify that Cost Center is flow down from Facility and displayed as expected.
9. Verify that Servicing Unit and Servicing Section field values are flow down from Facility and displayed as expected for Loan.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing03
Test Objective : Verify the ability to update EAC Cost Center for Facility and Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Cost Center.
4. Navigate to Edit Loan window for an existing loan and update Cost Center.
5. Navigate to Edit Facility window and update Servicing tab information.
6. Save Facility details and approve the two touch record.
7. Navigate to view Facility window. Select Servicing Tab.
8. Verify that updated Servicing Unit and Servicing Section field values are displayed as expected.
9. Navigate to view Loan window.
10. Verify that Facility Cost Center is not flow down and not displayed as Loan was updated with different Cost Center.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing04
Test Objective : Verify the ability to update an existing facility EAC Cost Center with Universal Servicing Section (REQ 4.0).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Cost Center.
4. Select Servicing tab and update Servicing tab information.
5. Save Facility details and approve the two touch record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing05
Test Objective : Validate an existing facility with the designated EAC cost center only has specific Servicing unit and Servicing section values in the drop down(REQ 1.0).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Cost Center with designated EAC Cost Center that has Servicng Unit and Servicing Section.
4. Navigate to view Facility window. Select Servicing Tab.
5. Verify that Servicing Unit and Servicing Section field values are displayed as expected that are linked with Cost Center.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing06
Test Objective : Validate an existing loan with the designated EAC cost center only has specific Servicing unit and Servicing section values in the drop down(REQ 1.0).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Cost Center.
4. Select Servicing tab and update Servicing Information details.
5. Save Facility details and approve the two touch record.
6. Navigate to view Facility window. Select Servicing Tab.
7. Verify that updated Servicing Unit and Servicing Section field values are displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing07
Test Objective : Verify field logging test at Facility level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility window for an existing Facility and update Servicing tab information.
4. Save Facility and approve the two touch record.
5. Navigate to Field Change history window and verify that all changes are reflected for Facility.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL11LogicToDefaultServicing08
Test Objective : Verify field logging test at Loan level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Loan window for an existing Loan and update Servicing Information details.
4. Navigate to Field Change history window and verify that all changes are reflected for Loan.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate01
Test Objective : Verify the Satisifed Date fields are displayed as expected on the Customer, facility and Loan levels and are not editable.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Customer Additional information window for an existing Customer.
4. Verify that properties of Satisfied Date is displayed as expected.
5. Navigate to Facility Additional details window for an existing Facility.
6. Verify that properties of Satisfied Posting and Effective Dates are displayed as expected.
7. Navigate to Loan Miscellaneous details window for an existing Loan.
8. Verify that properties of Satisfied Posting and Effective Dates are displayed as expected.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate02A
Test Objective : Verify the ability to payoff an existing loan (Lender type 600) and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate02A_DP1
Test Objective : Verify the ability to payoff an existing loan (Lender type 600) and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate03
Test Objective : Verify the ability to payoff an existing participated loan (Lender type 700) and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to view Customer window and fetch the customer name.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter all mandatory field values in Cash Item window.
5. Enter all mandatory field values in Regulatory tab.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Add an investor with the required lender type to the loan
8. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200 and 3820) for a Loan.
9. Create a new Bundle and navigate to new Transaction window to post the transaction (3200) for a Loan.


#########################################################################################################
Test Case Name : CL12SatisfiedDate03_DP1
Test Objective : Verify the ability to payoff an existing participated loan (Lender type 700) and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to Miscellaneous details window for an existing Loan.
3. Verify that Satisfied Posting and Effective Dates are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate04
Test Objective : Verify the ability to payoff an existing syndicate loan and verify satisfied dates do not appear after EOD runs.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to edit Customer window and fetch the customer name.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Select the Rate Setting Complete checkbox.
5. Enter all mandatory field values in Cash Item window.
6. Enter all mandatory field values in Regulatory tab.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Create a new Bundle and navigate to new Transaction window to post multiple transactions (3100, 3200 and 3820) for a Loan.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate04_DP1
Test Objective : Verify the ability to payoff an existing syndicate loan and verify satisfied dates do not appear after EOD runs.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to Miscellaneous details window for an existing Loan.
3. Verify that Satisfied Posting and Effective Dates are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate05A
Test Objective : Verify the ability to payoff all loans under a term facility with final availability date after the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate05A_DP1
Test Objective : Verify the ability to payoff all loans under a term facility with final availability date after the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected in Loan window.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected in Facility window.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate06A
Test Objective : Verify the ability to payoff all loans under a term facility with final availability date prior to the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate06A_DP1
Test Objective : Verify the ability to payoff all loans under a term facility with final availability date prior to the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate07A
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date after the System Date and status is not cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate07A_DP1
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date after the System Date and status is not cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate08A
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date after the System Date and status is cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate08A_DP1
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date after the System Date and status is cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate09A
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date and status is cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate09A_DP1
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date and status is cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate10A
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date and status is not cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate10A_DP1
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date and status is not cancelled.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate11A
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date but leave an accruing fee still due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate11A_DP1
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date but leave an accruing fee still due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate12A
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date but leave a fixed fee still due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate12A_DP1
Test Objective : Verify the ability to payoff all loans under a revolving facility with a maturity date prior to the System Date but leave a fixed fee still due.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate15A
Test Objective : Verify the ability to payoff all loans except one under a term facility with a maturity date prior to the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate15A_DP1
Test Objective : Verify the ability to payoff all loans except one under a term facility with a maturity date prior to the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for a paid off Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate16A
Test Objective : Verify the ability to payoff all loans except one under a revolving facility with a maturity date prior to the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window to process the transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate16A_DP1
Test Objective : Verify the ability to payoff all loans except one under a revolving facility with a maturity date prior to the System Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for a paid off Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate17
Test Objective : Verify the ability to open a new facility under a customer that was previously satisfied.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Customer Additional information window for an existing Customer.
4. Verify that Satisfied Date is displayed as expected.
5. Create a new Facility for the customer by entering all mandatory field values.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate17_DP1
Test Objective : Verify the ability to open a new facility under a customer that was previously satisfied.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Customer Additional information window for an existing Customer.
4. Verify that Satisfied Date is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate18
Test Objective : Verify the ability to payoff principal balance for a loan and the interest down to 0.02.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate18_DP1
Test Objective : Verify the ability to payoff principal balance for a loan and the interest down to 0.02.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Date is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate19A
Test Objective : Verify the ability to process an advance on a satisfied loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate19A_DP1
Test Objective : Verify the ability to process an advance on a satisfied loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Date is displayed as expected with zeros.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate20
Test Objective : Verify the Satisfied Date field value under the TBD Addendum File for the Customer/Facility/Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.


#########################################################################################################
Test Case Name : CL12SatisfiedDate20_DP1
Test Objective : Verify the Satisfied Date field value under the TBD Addendum File for the Customer/Facility/Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch Satisfied Dates
3. The Data Retrieved for Customer Satisfied Date from the Database is: 
4. The Data Retrieved for Facility Satisfied Posting date from the database is: 
5. The Data Retrieved for Facility Satisfied Effective Date from the database is: 
6. The Data Retrieved for Loan Satisfied Posting Date from the database is: 
7. The Data Retrieved for Loan Satisfied Effective Date from the database is: 


#########################################################################################################
Test Case Name : CL12SatisfiedDate21
Test Objective : Verify SBA Loans with Balances are not satisfied (Prin+Int+Fees+Def/MISC)
#########################################################################################################
1. Run SQL query and Verify SBA Loans with Balances are not satisfied (Prin+Int+Fees+Def/MISC)
2. SQL query execution completed! The value from the Database is: 
3. Verify SBA Loans with Balances are not satisfied (Prin+Int+Fees+Def/MISC)


#########################################################################################################
Test Case Name : CL12SatisfiedDate22
Test Objective : Verify SBA Loans with No Balances are satisfied (Prin+Int+Fees+Def/MISC)
#########################################################################################################
1. Run SQL query and Verify SBA Loans with No Balances are satisfied (Prin+Int+Fees+Def/MISC)
2. SQL query execution completed! The value from the Database is: 
3. Verify SBA Loans with No Balances are satisfied (Prin+Int+Fees+Def/MISC)


#########################################################################################################
Test Case Name : CL12SatisfiedDate23
Test Objective : Verify Non SBA Loans with Balances are not satisfied (Prin+Int+Fees; Misc DEF is N/A)
#########################################################################################################
1. Run SQL query and Verify Non SBA Loans with Balances are not satisfied (Prin+Int+Fees; Misc DEF is N/A)
2. SQL query execution completed! The value from the Database is: 
3. Verify Non SBA Loans with Balances are not satisfied (Prin+Int+Fees; Misc DEF is N/A)


#########################################################################################################
Test Case Name : CL12SatisfiedDate24
Test Objective : Verify Non SBA Loans with No Balances are satisfied (Prin+Int+Fees; Misc DEF is N/A)
#########################################################################################################
1. Run SQL query and Verify Non SBA Loans with No Balances are satisfied (Prin+Int+Fees; Misc DEF is N/A)
2. SQL query execution completed! The value from the Database is: 
3. Verify Non SBA Loans with No Balances are satisfied (Prin+Int+Fees; Misc DEF is N/A)


#########################################################################################################
Test Case Name : CL12SatisfiedDate25
Test Objective : RC CA With No Balances Reached Final Availability.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window.
4. Update Final Availability Date To Current system Date. Save Facility details and approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate25_DP1
Test Objective : RC CA With No Balances Reached Final Availability.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Additional details window for an existing Facility.
4. Verify that Satisfied Posting Date is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate26
Test Objective : TL CA With No Balances Reached Final Availability.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window.
4. Update Final Availability Date To Current system Date. Save Facility details and approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate26_DP1
Test Objective : TL CA with No Balances Reached Final Availability.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Additional details window for an existing Facility.
4. Verify that Satisfied Posting Date is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate27
Test Objective : Loan Satisfied Via Rebate Current Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3200 (INTEREST PAYMENT).
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Navigate to Loan History window for an existing Loan. Verify that INTEREST PAYMENT is displayed as expected in transaction history.
8. Navigate to new Transaction window for a Loan.
9. Select the Laon and enter the transaction code as 3207 (INTEREST REBATE).
10. Enter the transaction details on new Transaction window.
11. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
12. Navigate to Loan History window for an existing Loan. Verify that INTEREST REBATE is displayed as expected in transaction history.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate27_DP1
Test Objective : Loan Satisfied Via Rebate Current Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Miscellaneous window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate28
Test Objective : Loan Satisfied Via Rebate BV To Prior Business Day.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3200 (INTEREST PAYMENT).
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Navigate to Loan History window for an existing Loan. Verify that INTEREST PAYMENT is displayed as expected in transaction history.
8. Navigate to new Transaction window for a Loan.
9. Select the Loan and enter the transaction code as 3207 (INTEREST REBATE).
10. Enter the transaction details on new Transaction window.
11. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
12. Navigate to Loan History window for an existing Loan. Verify that INTEREST REBATE is displayed as expected in transaction history.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate28_DP1
Test Objective : Loan Satisfied Via Rebate BV To Prior Business Day.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Miscellaneous window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate29
Test Objective : Customer As Primary Borrower All Satisfied, But As Additional Borrower Remains Unsatisfied.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Add a Section/Sublimit record to the Facility by entering all field values. (From the Account Explorer, right-click a Facility record and select Create New, Facility Structure, Section/Sublimit. The New Section/Sublimit form appears. Complete the required fields (Limit Type , Limit Description and Limit Amount) and click Quick Save icon. Confirm that record is saved successfully).
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL12SatisfiedDate29_DP1
Test Objective : Customer As Primary Borrower All Satisfied, But As Additional Borrower Remains Unsatisfied.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Customer Additional information window for an existing Customer.
4. Verify Additional Borrower Remains Unsatisfied.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver01
Test Objective : Verify waiver of hanging interest balance (Less than 1.00) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Select the Save and Create Another menu in new Transaction window.
7. Select the loan and enter the transaction code as 3200.
8. Enter the transaction details on new Transaction window.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver01_DP1
Test Objective : Verify waiver of hanging interest balance (Less than 1.00) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window for an existing loan.
4. Verify that WAIVE CHARGES is displayed as expected in Transaction details pane.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver02
Test Objective : Verify waiver of hanging interest balance (Less than 1.00) after complete pay-off 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Select the Save and Create Another menu in new Transaction window.
7. Select the loan and enter the transaction code as 3200.
8. Enter the transaction details on new Transaction window.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver02_DP1
Test Objective : Verify waiver of hanging interest balance (Less than 1.00) after complete pay-off 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window for an existing loan.
4. Verify that ADJUST CHARGE is displayed as expected in Transaction details pane.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver03
Test Objective : Verify there is no waiver of hanging interest balance after partial payment of loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3200.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver03_DP1
Test Objective : Verify there is no waiver of hanging interest balance after partial payment of loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window for an existing loan.
4. Verify that INTEREST BILLED WAIVER is displayed as expected in Transaction details pane.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver04
Test Objective : Verify Automated Billed waiver of Maturity invoices after partial pay-off transaction (positive Interest).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit loan window for an existing loan and get the loan amount.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the loan and enter the transaction code as 3100.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Create a new Bundle and navigate to new Transaction window.
9. Select the Save and Create Another menu in new Transaction window.
10. Select the loan and enter the transaction code as 3200.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver04_DP1
Test Objective : Verify Automated Billed waiver of Maturity invoices after partial pay-off transaction (positive Interest).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing loan.
4. Verify that no invoice is owed in Loan Invoices window.
5. Navigate to Loan History window for an existing loan.
6. Verify that INTEREST BILLED WAIVER is displayed as expected in Transaction details pane.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver05
Test Objective : Verify Automated Billed waiver of Maturity invoices after partial pay-off transaction (negative Interest).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit loan window for an existing loan and get the loan amount.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the loan and enter the transaction code as 3100.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Create a new Bundle and navigate to new Transaction window.
9. Select the Save and Create Another menu in new Transaction window.
10. Select the loan and enter the transaction code as 3200.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver05_DP1
Test Objective : Verify Automated Billed waiver of Maturity invoices after partial pay-off transaction (negative Interest).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing loan.
4. Verify that no invoice is owed in Loan Invoices window.
5. Navigate to Loan History Window for an existing loan.
6. Verify that ADJUST CHARGE is displayed as expected in Transaction details pane.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver06
Test Objective : Verify Automated Billed waiver of regular invoices after pay-off transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the loan and enter the transaction code as 3200.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver06_DP1
Test Objective : Verify Automated Billed waiver of regular invoices after pay-off transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing loan.
4. Verify that no invoice is owed in Loan Invoices window.
5. Navigate to Loan History window for an existing loan.
6. Verify that PRINCIPAL BILLED WAIVER is displayed as expected in Transaction details pane.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver07
Test Objective : Verify waiver of hanging Accruing Fee balance (Less than 1.00) (positive fee balance) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Accruing-Fee window for an existing facility and get the Segment ID.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver07_DP1
Test Objective : Verify waiver of hanging Accruing Fee balance (Less than 1.00) (positive fee balance) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window for an existing facility. Verify that FEE WAIVER-REDUCE is displayed as expected in transaction history.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver08
Test Objective : Verify waiver of hanging Accruing Fee balance (Less than 1.00) (overpaid fee balance) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Accruing-Fee window for an existing facility and get the Segment ID.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver08_DP1
Test Objective : Verify waiver of hanging Accruing Fee balance (Less than 1.00) (overpaid fee balance) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window for an existing facility. Verify that FEE ADJUST-INCREASE is displayed as expected in transaction history.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver09
Test Objective : Verify waiver of hanging Fixed Fee balance (Less than 1.00) - positive fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fixed-Fee window for an existing facility and get the Fixed Fee amount.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver09_DP1
Test Objective : Verify waiver of hanging Fixed Fee balance (Less than 1.00) - positive fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window for an existing facility. Verify that FEE WAIVER-REDUCE is displayed as expected in transaction history.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver10
Test Objective : Verify waiver of hanging Fixed Fee balance (Less than 1.00) - Negative fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fixed-Fee window for an existing facility and get the Fixed Fee amount.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver10_DP1
Test Objective : Verify waiver of hanging Fixed Fee balance (Less than 1.00) - Negative fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window for an existing facility. Verify that FEE ADJUST-INCREASE is displayed as expected in transaction history.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver11
Test Objective : Verify waiver of hanging Flat Fee balance (Less than 1.00) - positive fee balance and Invoice waived.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3820.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver11_DP1
Test Objective : Verify waiver of hanging Flat Fee balance (Less than 1.00) - positive fee balance and Invoice waived.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view loan window for an existing loan. Verify that balance category information is displayed as expected with - .00.
4. Navigate to Loan invoices window for an existing loan. Verify that no invoice is owed.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver12
Test Objective : Verify waiver of hanging Flat Fee balance (Less than 1.00) - Negative fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3820.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver12_DP1
Test Objective : Verify waiver of hanging Flat Fee balance (Less than 1.00) - Negative fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view loan window for an existing loan. Verify that Waived off amount is displayed as expected in balance category.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver13
Test Objective : Verify waiver of hanging interest balance (more than 1.00) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3200.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL14AutoBilledWaiver13_DP1
Test Objective : Verify waiver of hanging interest balance (more than 1.00) after complete pay-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view loan window for an existing loan. Verify that balance category information is displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate01
Test Objective : Verify the ability to create a TRUE RATE Pricing Option Template for an existing Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a True Rate Pricing Option for a Facility by entering all the mandatory field values.
4. Navigate to existing Pricing Options window for a Facility. Select the existing record and Open.
5. Navigate to new Accrual Schedule window from edit Pricing Option window.
6. Enter the Pricing Accrual Schedule basic information and save the record.
7. Navigate to new Repayment Secondary window from Pricing Option.
8. Enter the Secondary Repayment Schedule basic information.
9. Enter the Secondary Repayment Schedule billing information and save the record.
10. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate02
Test Objective : Verify the ability to create an ARL (AUTO REPRICE LIBOR) Pricing Option Template for an existing Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Pricing Option window for an existing Facility.
4. Enter Pricing Option Basic information.
5. Enter Pricing Option Regulatory information.
6. Enter Pricing Option Repayment Schedule Basic information by selecting True Rate checkbox.
7. Enter Pricing Option Repayment Schedule Billing information.
8. Click on the quick Save button to save the Pricing Option details.
9. Navigate to existing Pricing Options window. Select the existing record and Open.
10. Navigate to new Accrual Schedule window from Pricing Option.
11. Update the Accrual class ID and Change Timing fields.
12. Verify that Original Next Effective Date field is displayed as expected.
13. Verify that Next Reprice Date field is displayed as expected.
14. Enter the Accrual Schedule basic information and save the record.
15. Enter Pricing Repayment Schedule information on the Global Pricing form and save the record.
16. Navigate to new Repayment Secondary window from Pricing Option.
17. Enter the Secondary Repayment basic information.
18. Enter the Secondary Repayment billing information and save the record.
19. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate03
Test Objective : Verify the ability to create a LIBOR Pricing Option Template for an existing Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Pricing Option window for an existing Facility.
4. Enter Pricing Option Basic information.
5. Enter Pricing Option Regulatory information.
6. Enter Pricing Option Repayment Schedule information by selecting the True Rate checkbox.
7. Enter Pricing Option Billing information.
8. Click on the quick save button to save the record.
9. Navigate to existing Pricing Option window for a Facility. Select and Open existing record.
10. Navigate to Accrual Schedule window from edit Pricing Option window.
11. Enter all mandatory field values in the Accrual Schedule window and save it.
12. Verify that Next Effective Date is displayed as expected.
13. Verify that Next Set Date field is displayed as expected.
14. Enter the Pricing Option Accrual Schedule basic information and save the record.
15. Enter Pricing Option Repayment Schedule information on the Global Pricing form and save the record.
16. Navigate to Repayment Secondary window.
17. Enter the Secondary Repayment Basic information and save the record.
18. Enter the Secondary Repayment Billing information and save the record.
19. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate04
Test Objective : Verify the ability to create a new True Rate Loan to validate new Cycle Day Code and validation of warnings.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a bundle and navigate to Loan window.
4. Enter New Loan tab Information details.
5. Enter Loan Servicing tab Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Select Loan Accrual Schedule Borrower's Information details.
9. Navigate to new Accrual Schedule window.
10. Enter invalid values for Loan Accrual Schedule Basic Information and save the details.
11. Verify that an expected error message received as - Invalid Next Change Date.
12. Verify that an expected error message received as - Next Change Date Must Be In The Future.
13. Verify that an expected error message received as - Next Effective Date Cannot Precede Current Processing Date.
14. Enter valid Next effective date field value in the Accrual Schedule window and save the record.
15. Navigate to Repayment Schedule window.
16. Enter invalid Loan Repayment Schedule Basic Information details.
17. Enter Loan Repayment Schedule Billing Information details. Save the details.
18. Verify that an expected error message received as - The Next Due Date Primary Repayment Schedule does not match the Loan Rate Maturity Date.
19. Verify that an expected error message received as - The Next Due Date Primary Repayment Schedule does not match the Accrual Schedule Next Effective Date.
20. Enter invalid Loan Repayment Schedule Basic Information details. Save the record.
21. Verify that an expected error message received as - Next Accrue to Date Business Day Adjustment on Repayment Schedule is not equal to Next Effective Date Business Day Adj on Accrual.
22. Edit the Primary Repayment schedule to change the business calendar to be different than what is on accrual schedule. Save the details.
23. Verify that an expected error message received as - The Business Calendar value on the Repayment Schedule does not equal the Next Effective Date Business Calendar value on the Accrual.
24. Edit the Primary Repayment schedule to change the month end indicator to be different than what is on accrual schedule. Save the details.
25. Verify that an expected error message received as - The Month End Indicator on the Repayment Schedule does not equal the Next Effective Date Month Indicator on the Accrual Schedule.
26. Change the Primary Repayment schedule back to remove month end indicator so it matches accrual schedule. Save the details.
27. Save and Submit the bundle. Login with approver credentials and post the bundle.
28. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate05
Test Objective : Verify the user receives an Error message due to un matching dates on the Rate Maturity Date and the current (active accrual schedule on existing loan) Interest Accrual Schedule Next Effective Date fields on an existing True Rate Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan.
4. Fetch Loan Rate Maturity Date and Rate Setting Date field vaues.
5. Navigate to existing Accrual Schedules window for a Loan.
6. Select the existing Accrual Schedule record and click on the open icon. Fetch Accrual Next Effective Date and close.
7. Navigate to edit Loan window and update the Rate Maturity Date field value which is not same as Next Effective Date. Save the changes.
8. Verify that an expected warning message received when Rate Maturity date is not same as the Accrual Next Effective Date.
9. Update the Rate Maturity Date field value and save the record.
10. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate06
Test Objective : Verify warning messages are received when Rate Setting Date field has a date greater than the Loan Maturity Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan Information details.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Select Accrual Schedule Borrower's details.
9. Navigate to new Accrual Schedule window.
10. Enter invalid Accrual Schedule Basic Information and save the record.
11. Verify that an expected warning message received as - The Next effective date is after the Loan maturity date.
12. Navigate to Repayment Schedule window.
13. Enter Loan Repayment Schedule Basic Information details.
14. Enter Loan Repayment Schedule Billing Information details and save the record.
15. Enter the Cash Offset details.
16. Save and Submit the bundle. Login with approver credentials and post the bundle.
17. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate07
Test Objective : Verify the ability to create a new ARL loan using a backdated Effective Date (3 months), with a monthly index frequency to validate the Cycle Day Code and validation warnings.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan Information details.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Enter Loan Miscellaneous Information details.
9. Select Accrual Schedule Borrower's details.
10. Navigate to Loan Accrual schedule window.
11. Enter Loan Accrual Schedule Basic Information details. Save the details.
12. Navigate to Loan Repayment Schedule window.
13. Enter Loan Repayment Schedule Basic Information details.
14. Enter Loan Repayment Schedule Billing Information details and save the record.
15. Navigate to Repayment Secondary window. Enter Loan Secondary Repayment Schedule Basic Information details.
16. Enter new Loan Secondary Repayment Schedule Billing Information details and save the record.
17. Navigate to Cash item and enter all required information.
18. Save and Submit the bundle. Login with approver credentials and post the bundle.
19. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate08
Test Objective : Verify the ability to test validations when the Next Effective Date, Business Day Adjustment Code (e.g. Next Due Date Business Day Adjustment field) is changed from Modified Following to Same Day to verify expected error messages.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan.
4. Get the Rate Maturity field value from the Loan window.
5. Navigate to existing Accrual Schedules window for the Loan.
6. Select the existing Accrual Schedule record and click on the open icon.
7. Change the Business Day Adjustment field value to the 'same day' in the Accrual Schedule window. Save the changes.
8. Verify that ARL Rate Type error is displayed as expected.
9. Change the business day to Modified following.
10. Update the Business Day Adjustment as other than 'Same Day' and Next Effective Date as valid date in the Accrual Schedule window.
11. Save and Approve Accrual Schedule record.
12. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate09a
Test Objective : Verify the ability to create new ARL Loan with effective 2 months ago, rate index 30 day libor (LIB1MO), index frequency of weekly and change timing of L (on anniversary).
#########################################################################################################
1. Fetching the data from output data csv CL15AutoRepricingAndTrueRate09
2. Login into ACBS Servicing application with valid user credentials.
3. Get the user name from the Title Window
4. Navigate to existing Accrual Schedule
5. Select the existing accrual schedule
6. Navigate to Repayment primary window
7. Enter data in repayment primary different from the accrual schedule when parameter set to error
8. Verify Error Message when parameter set to error
9. Navigate to repayment secondary window
10. Enter the data in to repayment secondary different than accrual schedule
11. Verify Error Message when parameter set to error
12. Enter the original data back in to repayment secondary
13. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate09b
Test Objective : Verify the ability to create new ARL Loan with effective 2 months ago, rate index 30 day libor (LIB1MO), index frequency of weekly and change timing of L (on anniversary).
#########################################################################################################
1. Fetching the data from output data csv CL15AutoRepricingAndTrueRate09
2. Login into ACBS Servicing application with valid user credentials.
3. Get the user name from the Title Window
4. Navigate to existing Accrual Schedule
5. Select the existing accrual schedule
6. Navigate to Repayment primary window
7. Enter data in repayment primary different from the accrual schedule when parameter set to warning
8. Verify warning Message when parameter set to warning
9. Enter the original data back in to repayment primary
10. Navigate to repayment secondary window
11. Enter the data in to repayment secondary different than accrual schedule
12. Verify warning Message when parameter set to warning
13. Enter the original data back in to repayment secondary
14. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate10a
Test Objective : Create New LIBOR effective today, rate index 30 day libor (LIB1MO), index frequency of every business day, change timing of L (on anniversary)
#########################################################################################################
1. Fetching the data from output data csv CL15AutoRepricingAndTrueRate10.csv
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit loan window
4. Update the rate maturity date greater than the maturity date and will be non business day
5. Verify the error message when parameter set to error
6. Verify the error message when parameter set to error
7. Update the rate maturity date back to orignal date and save
8. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate10b
Test Objective : Create New LIBOR effective today, rate index 30 day libor (LIB1MO), index frequency of every business day, change timing of L (on anniversary)
#########################################################################################################
1. Fetching the data from output data csv CL15AutoRepricingAndTrueRate10.csv
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit loan window
4. Update the rate maturity date greater than the maturity date and will be non business day
5. Verify the warning message when parameter set to warning
6. Verify the warning message when parameter set to warning
7. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate11
Test Objective : Verify the ability to create new LIBOR Loan with effective today, rate index 30 day libor (1MOLSD), index frequency of every business day and change timing of A (change same day).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to Loan window.
4. Enter New Loan tab Information.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Navigate to new Accrual Schedule window.
9. Enter Loan Accrual Schedule Basic Information details and save the details.
10. Navigate to new Repayment Schedule window.
11. Enter Loan Repayment Schedule Basic Information details.
12. Enter Loan Repayment Schedule Billing Information details. Save the record.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate12
Test Objective : Verify the ability to create a new LIBOR loan with effective 3 months ago, rate index 30 day libor (1MOLSD), index frequency of every business day and change timing of A (change same day).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to Loan window.
4. Enter new Loan tab Information.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Navigate to new Accrual Schedule window.
9. Enter Loan Accrual Schedule Basic Information details and save the record.
10. Navigate to Repayment Schedule window.
11. Enter Loan Repayment Schedule Basic Information details.
12. Enter Loan Repayment Schedule Billing Information details and save the record.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to Secondary Repayment Schedule window for a Loan and view the existing record.
15. Verify that True Rate checkbox is disabled.
16. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate13
Test Objective : Verify the ability to create a New ARL effective today, rate index 30 day libor (1MOLSD), index frequency of weekly, change timing of L (on anniversary)
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan Information details.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Enter Loan Miscellaneous Information details.
9. Navigate to new Accrual Schedule window.
10. Enter Loan Accrual Schedule Basic Information details and save the record.
11. Navigate to Repayment Schedule window.
12. Enter Loan Repayment Schedule Basic Information details.
13. Enter Loan Repayment Schedule Billing Information details and save the record.
14. Enter the Cash Offset details.
15. Save and Submit the bundle. Login with approver credentials and post the bundle.
16. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate17
Test Objective : Verify the ability to validate Accrual Schedule by changing Original Next Effective Date on a True Rate Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedules window for an existing Loan.
4. Select the existing Accrual Schedule record and click on the open icon.
5. Try to update the Original Next Effective Date field value in the Accrual Schedule window.
6. Verify that Original Next Effective Date field is not editable.
7. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate18
Test Objective : Verify the ability to test validations in Accrual Schedule by changing Original Next Effective Date for a Non True Rate Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for an existing Loan.
4. Select the existing Accrual Schedule record. Click on Open icon.
5. Fetch Original Next Effective Date field value.
6. Try to update the Original Next Effective Date field value in the Accrual Schedule window.
7. Verify that Original Next Effective Date field is not editable.
8. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate19
Test Objective : Verify the ability to test validations in Accrual Schedule by updating Next reprice date for a True rate Loan and next effective date for the rollover period after the current interest rate period.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for an existing Loan.
4. Select the existing Accrual Schedule record. Click on Open icon.
5. Try to update the Next Reprice Date field in the Accrual Schedule window.
6. Verify that Next Reprice Date field is not editable.
7. Update the Next Effective Date field value in the Accrual Schedule window.
8. Verify that Next Reprice Date field value is calculated based on the frequency code and Next Effective Date.
9. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate20
Test Objective : Verify the ability to test validations in Accrual Schedule by updating Next reprice date on a loan without True Rate and next effective date for the rollover period after the current interest rate period.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for an existing Loan.
4. Select the existing Accrual Schedule record. Click on Open icon.
5. Try to update the Next Reprice Date field value in the Accrual Schedule window.
6. Verify that Next Reprice Date field is not editable.
7. Update the Next Effective Date field value in the Accrual Schedule window.
8. Verify that Next Reprice Date field value is changed based on the Next Effective Date field value.
9. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate21
Test Objective : Verify the ability to test validations in Accrual Schedule when Next effective date & next rate set date (after maturity date) do not match.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a loan with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Navigate to Accrual Schedule window.
5. Enter invalid field values in Accrual Schedule window and save the details.
6. Verify that warning message is displayed as expected in View Exceptions window.
7. Enter all valid field values in Accrual Schedule window and save the details.
8. Navigate to the Repayment Schedule window.
9. Enter all mandatory field values in the Repayment Schedule Basic information.
10. Enter invalid field values in the Repayment Schedule Billing Information and save the details.
11. Verify that View Exceptions window is displayed as expected.
12. Update the correct Next Due Date field value that matches to the Accrual Schedule and save the record.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate22
Test Objective : Verify the ability to test validations on a True Rate Loan by updating 'Change Timing' value from 'True Rate' to 'On Anniversary'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan and get the Rate Maturity date for the loan.
4. Navigate to existing Accrual Schedule window and click on new icon.
5. Verify the Schedule ID and Effective Date are blank on the new Accrual Schedule.
6. Enter Accrual Schedule basic information details.
7. Enter Accrual Schedule modifier information details and save the record.
8. Verify that newly created record appears on the existing Accrual Schedules window.
9. Logout from the Servicing application.
10. Login into ACBS Servicing application with valid user credentials.
11. Navigate to Bundle viewer and verify that there is a new Bundle Pending Approval for cancellation of the existing Accrual Schedule.
12. Approve and Post the Bundle.
13. Navigate to existing Repayment Primary window and view the record.
14. Verify that True Rate checkbox is unchecked in Primary Repayment Basic Information window.
15. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate23
Test Objective : Verify the ability to test validations on a True Rate Loan when 'Change Timing' field value is changed from True rate to First of the Month.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window and get the Rate Maturity date for the loan.
4. Navigate to existing Accrual Schedule window.
5. Select New icon. Copy Loan Accrual Schedules box appears. Select Ok button.
6. Verify that Schedule ID and Effective Date are blank on the new Accrual Schedule.
7. Enter Accrual Schedule basic information details.
8. Enter Accrual Schedule Modifiers information details and save the record.
9. Verify that newly created record appears on the existing Accrual Schedules window.
10. Logout from the Servicing application.
11. Login into ACBS Servicing application with valid user credentials.
12. Navigate to Bundle viewer and verify that there is a new Bundle Pending Approval for cancellation of the existing Accrual Schedule.
13. Approve and Post the Bundle.
14. Navigate to existing Repayment Primary window and open existing record.
15. Verify that True Rate checkbox is unchecked in Primary Repayment Basic Information window.
16. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate24
Test Objective : Verify the ability to validate on a Non True Rate Loan when Change Timing field value is changed from 'On Anniversary' to 'True Rate'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Loan window and get the Rate Maturity date for the loan.
4. Navigate to existing Accrual Schedules Window. Select the record, click on Open icon and fetch the value of Year Basis, Rate Calculation Method, Spread Rate, Rate Index, Index Frequency, Calendar, Next Effective date and, Next due Business Day adjustment.
5. Select New icon. Copy Loan Accrual Schedules box appears.
6. Verify that Schedule ID and Effective Dates are blank on the new Accrual Schedule window.
7. Enter Accrual Schedule basic information details.
8. Enter Accrual Schedule modifier information details and save the record.
9. Verify that newly created record appears on the existing Accrual Schedules window.
10. Logout from the Servicing application.
11. Login into ACBS Servicing application with valid user credentials.
12. Navigate to Bundle viewer and verify that there is a new Bundle Pending Approval for cancellation of the existing Accrual Schedule.
13. Approve and Post the Bundle.
14. Navigate to existing Repayment Primary window and view existing record.
15. Verify that True Rate check box is checked in Primary Repayment Basic Information window.
16. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate25
Test Objective : Verify when auto reprice occurs the rate maturity date on the main screen is updated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Loan window, Update Rate Maturity Date(Current System date + 1Day) and Maturity Date (Rate Maturity Date + 2 Years) field values.
4. Navigate to edit Accrual Schedule window and update the Next Effective Date field value as 'SystemDate + 1'. Save the record.
5. Navigate to edit Repayment Primary window. Update the Next Due Date and Next Accrue To as 'SystemDate + 1'. Save the record.
6. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate25_DP2
Test Objective : Verify when auto reprice occurs the rate maturity date on the main screen is updated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window. Select and open the existing record.
4. Verify that Next Effective Date field value is updated and displayed as expected.
5. Navigate to the existing Repayment Primary window. Select and open the existing record.
6. Verify that Next Due Date and Next Accrue To Date field values are updated and displayed as expected.
7. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate26
Test Objective : Verify when auto reprice occurs, the rate maturity on the loan updates to show the same new rate maturity date on the accrual schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Loan window, Update Rate Maturity Date(Current System date + 1Day) and Maturity Date (Rate Maturity Date + 2 Years) field values.
4. Navigate to edit Accrual Schedule window for a Loan and update the Next Effective Date field value as 'SystemDate + 1'. Save the record.
5. Navigate to edit Repayment Schedule window for a Loan. Update the Next Due Date and Next Accrue To as 'SystemDate + 1'. Save the record.
6. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate26_DP2
Test Objective : Verify when auto reprice occurs, the rate maturity on the loan updates to show the same new rate maturity date on the accrual schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedules window for a Loan. Select and open the existing record.
4. Verify that Next Effective Date field value is displayed as expected.
5. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate27
Test Objective : Verify the ability to create new loan using True Rate Index settings and verify the box on the secondary repayment schedule screen is checked.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan Information details.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Enter Loan Miscellaneous Information details.
9. Navigate to new Accrual Schedule window.
10. Enter Loan Accrual Schedule Basic Information details and save the record.
11. Navigate to Loan Repayment Schedule window.
12. Enter Loan Repayment Schedule Basic Information details.
13. Enter Loan Repayment Schedule Billing Information details and save the record.
14. Navigate to Repayment Secondary window and enter Loan Secondary Repayment Schedule Information details.
15. Enter Loan Secondary Repayment Schedule Billing Information details. Save the details.
16. Enter Cash Offset details.
17. Save and Submit the bundle. Login with approver credentials and post the bundle.
18. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate28
Test Objective : Verify the ability to create a new loan using True Rate Index settings with secondary repayment schedule which the first and second include INT schedules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create 1 month back dated Loan for a Direct Facility by entering all mandatory field values. Enter all Loan details for Tabs - (New Loan Tab Info, Servicing Tab Info, Risk Tab Info, Regulatory Tab Info, Repayment Schedule and Additional Field).
4. Navigate to Accrual Schedule window.
5. Enter all mandatory field values in Accrual Schedule window and save the details.
6. Navigate to the Repayment Schedule window.
7. Enter the Primary Repayment Schedule Basic information.
8. Enter the Primary Repayment Schedule Billing information and save the record.
9. Navigate to Secondary Repayment Schedule window.
10. Enter all mandatory field values in Secondary Repayment Schedule Basic information.
11. Enter the Secondary Repayment Schedule Billing information and save the record.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Navigate to existing Repayment Primary window for the Loan. Select and open an existing record.
14. Verify that True Rate checkbox is unchecked as expected in Repayment Primary window.
15. Navigate to the existing Repayment Secondary window for the Loan.
16. Open an existing Repayment Secondary record.
17. Verify that True Rate checkbox is unchecked in Repayment Secondary window.
18. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate29
Test Objective : Verify the ability to create a new True Rate Loan to check the Next Due Date and Next Accrue to Date entered on the primary or secondary repayment schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan Information details.
5. Enter Loan Servicing Information details.
6. Enter Loan Risk Information details.
7. Enter Loan Regulatory Information details.
8. Navigate to new Accrual Schedule window.
9. Enter invalid Loan Accrual Schedule Basic Information. Save the details.
10. Verify that system throws an expected error message as - Invalid Next Change Date.
11. Verify that an expected error message received as - Next Change Date Must Be In The Future.
12. Verify that an expected error message received as - Next Effective Date Cannot Precede Current Processing Date.
13. Enter Next effective date field value in the Accrual Schedule window and save the record.
14. Navigate to Repayment Schedule window.
15. Enter invalid Loan Repayment Schedule Basic Information details.
16. Enter invalid Loan Repayment Schedule Billing Information details and save the record.
17. Verify that an expected error message received as - The Next Due Date on Primary Repayment Schedule does not match the Loan Rate Maturity Date.
18. Verify that an expected error message received as - The Next Due Date Primary Repayment Schedule does not match the Accrual Schedule Next Effective Date.
19. Enter invalid Loan Repayment Schedule Basic Information details. Save the details.
20. Verify that an expected error message received as - Next Accrue to Date Business Day Adjustment on Repayment Schedule is not equal to Next Effective Date Business Day Adj on Accrual.
21. Edit the primary repayment schedule to change the business calendar to be different than what is on accrual schedule. Save the record.
22. Verify that an expected error message received as - The Business Calendar value on the Repayment Schedule does not equal the Next Effective Date Business Calendar value on the Accrual.
23. Edit the primary repayment schedule to change the month end indicator to be different than what is on accrual schedule. Save the details.
24. Verify that an expected error message received as - The Month End Indicator on the Repayment Schedule does not equal the Next Effective Date Month Indicator on the Accrual Schedule.
25. Change the primary repayment schedule back to remove month end indicator so it matches accrual schedule. Save the record. Verify that Repayment record updated successfully.
26. Enter invalid Loan Secondary Repayment Schedule Information details.
27. Enter invalid Loan Secondary Repayment Schedule Billing Information details and save the record.
28. Verify that an expected error message received as - The Next Due Date on Secondary Repayment Schedule does not match the Loan Rate Maturity Date.
29. Verify that an expected error message received as - The Next Accrue to Date on the Secondary Repayment Schedule does not match Accrual Schedule Next Effective Date.
30. Update Secondary Repayment Schedule Basic Information details and save the record.
31. Verify that an expected error message received as - The Next Accrue to Date Business Day Adjustment on Repayment Schedule is not equal to Next Effective Date Business Day Adj on Accrual.
32. Update Secondary Repayment Schedule Basic Information details and save the record.
33. Verify that an expected error message received as - The Business Calendar value on the Repayment Schedule does not equal the Next Effective Date Business Calendar value on Accrual.
34. Edit the Secondary Repayment Schedule to change the month end indicator to be different than what is on accrual schedule. Save the details.
35. Verify that an expected error message received as - The Month End Indicator on the Repayment Schedule does not equal the Next Effective Date Month Indicator on the Accrual Schedule.
36. Change the Secondary Repayment Schedule back to remove month end indicator so it matches accrual schedule. Save the details.
37. Save and Submit the bundle. Login with approver credentials and post the bundle.
38. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate30
Test Objective : Verify the ability to create a new ARL to test Warning Messages when Next Effective Date and Rate Setting Date are greater than the Loan Legal Maturity Date and an unmatched Rate maturity date field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a loan with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Navigate to new Accrual Schedule window.
5. Enter the Accrual Schedule Basic information and save the record.
6. Verify that warning message is displayed as expected when parameter set to warning.
7. Navigate back to New Loan Information tab.
8. Update the Rate Setting and Rate Maturity Date field values in the New Loan tab.
9. Navigate to the new Accrual Schedule window.
10. Update the Accrual Schedule Basic information and save the record.
11. Select Rate setting complete checkbox in the Accrual Schedule window.
12. Navigate to the Repayment Schedule window.
13. Enter all mandatory field values in the Repayment Schedule Basic information.
14. Enter all Repayment Schedule Billing Information details and save.
15. Navigate to Secondary Repayment Schedule window.
16. Enter all mandatory field values in the Secondary Repayment Schedule Basic information.
17. Enter Loan Secondary Repayment Schedule Billing Information details and save.
18. Verify that an expected error message received as - The Next Due Date on Secondary Repayment Schedule does not match the Loan Rate Maturity Date.
19. Verify that an expected error message received as - The Next Accrue to Date on the Secondary Repayment Schedule does not match the Loan Rate Maturity Date.
20. Verify that an expected error message received as - The Next Due Date on Secondary Repayment Schedule does not match the Accrual Schedule Next Effective.
21. Verify that an expected error message received as - The Next Accrue to Date on the Secondary Repayment Schedule does not match Accrual Schedule Next.
22. Update the Next Due Date, Next Accrue To Date and Index Frequency field values in the Repayment Schedule Basic information and save the record.
23. Save and Submit the bundle. Login with approver credentials and post the bundle.
24. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate31
Test Objective : Verify the ability to create a new ARL to test Warning Messages when Next Effective Date and Rate Setting Date are greater than the Loan Legal Maturity Date and an unmatched Rate maturity date field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for the Loan. Select and open the existing record.
4. Fetch the values for the fields: Year Basis, Rate Calculation Method, Spread Rate, Rate Index, Index Frequency, Calendar, Next Effective date and Next due Business Day adjustment.
5. Navigate to the existing Accrual Schedule window and select new icon.
6. Verify that Schedule ID and Effective Dates are blank on the new Accrual Schedule window.
7. Verify that Rate Calculation Method, Year Basis, Spread Rate, Index Rate, Rate index, Index frequency, Change timing, Calendar, Rate Set lead days, Next effective date and Next due Business Day Adjustment field values are displayed as expected.
8. Create a Accrual Schedule record by entering all mandatory field values in Basic information and modifier tabs. Save the details.
9. Navigate to the existing Accrual Schedule window for a Loan.
10. Verify that newly created Accrual Schedule record appears on the existing Accrual Schedules window.
11. Logout from the Servicing application.
12. Login into ACBS Servicing application with valid user credentials.
13. Navigate to Bundle viewer and verify that there is a new Bundle Pending Approval for cancellation of the existing Accrual Schedule.
14. Verify that Bundle contains Transaction data as 'CHG ACCRL SCHE STATUS = CANCELLED'.
15. Verify that Bundle contains Transaction data as 'CHG BASE RATE = .000000'.
16. Verify that Bundle contains Transaction data as 'CHG COST/FNDS RATE = .000000'.
17. Verify that Bundle contains Transaction data as 'CHG INT BASIS CODE - DO NOT ACCRUE'.
18. Approve and Post the Bundle.
19. Navigate to the existing Accrual Schedules window. Select and open the existing record.
20. Verify that existing Accrual Schedule status is cancelled as expected.
21. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate32
Test Objective : Verify the ability to create a new ARL loan effective yesterday with a weekly index frequency, to validate the Cycle Day Code and validation warnings.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a ARL (AUTO REPRICE LIBOR) Pricing Option by entering all the mandatory field values.
4. Create a loan with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select Loan Repayment Schedule Borrower's Information.
6. Navigate to new Repayment Schedule window.
7. Enter New Loan Repayment Schedule Basic Information details.
8. Enter New Loan Secondary Repayment Schedule Billing Information details and save.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Navigate to the existing Accrual Schedules window.
11. View the existing Accural Schedule record.
12. Verify that Original Next Effective Date and Next Reprice Date values are displayed as expected.
13. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate33
Test Objective : Verify the ability to cancel an existing Accrual Schedule on a True Rate Loan and verify the true rate checkbox is unchecked.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan Account in Transaction Account Selector window and search Transaction code 3602 and click Select button.
5. Enter Select New Value field value as CANCELLED in Transaction window.
6. Select the Save and Create Another menu in new Transaction window.
7. Select the Loan Account in Transaction Account Selector window and search Transaction code 3610 and click Select button.
8. Enter Select New Value field value as 0 in Transaction window.
9. Select the Save and Create Another menu in new Transaction window.
10. Select the Loan Account in Transaction Account Selector window and search Transaction code 3630 and click Select button.
11. Enter Select New Value field value as 0 in Transaction window.
12. Select the Save and Create Another menu in new Transaction window.
13. Select the Loan Account in Transaction Account Selector window and search Transaction code 3700 and click Select button.
14. Enter Select New Value field value as 0 in Transaction window.
15. Save and Submit the bundle. Login with approver credentials and post the bundle.
16. Navigate to existing Accrual Schedule window for a Loan and open an existing Accrual Schedule record. Update Accrual Schedule Basic information window.
17. Verify that True Rate checkbox is not checked in Primary Repayment Schedule window.
18. Verify that True Rate checkbox is not checked in Secondary Repayment Schedule window.
19. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL15AutoRepricingAndTrueRate34
Test Objective : Verify site specific field data on each day of testing in Data Base.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedules window for a Loan.
4. Select the existing Accrual Schedule record and view it.
5. Fetch the values from the Original Next Effective Date and Next Reprice Date fields in the Accrual Schedule window.
6. Converting the Date to be yyyymmdd format.
7. The data retrieved from the Database as - 
8. The data retrieved from the Database as - 
9. The data retrieved from the Database as - 
10. The data retrieved from the Database as - 
11. The data retrieved from the Database as - 
12. Logout from the Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset01
Test Objective : Verify the screen layout and menu items in Offset to Offset Procesing window.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Offset To Offset Processing window. Verify that form layout and menu items are displayed as expected.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset02
Test Objective : Verify the ability to create and save Offset entry with default values. Verify that Offset entry cannot be submitted for 2-touch without Transaction/s.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Offset to Offset Processing window.
4. Navigate new Offset to Offset window. Verify that all fields are displayed as expected.
5. Verify that Submit for Approval option is greyed out and not allowed to submit the record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset03
Test Objective : Verify the ability to create/edit/delete an Offset entry without transactions.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Offset entry record by entering all mandatory field values. Delete a newly created Offset entry record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset04
Test Objective : Verify that search option fields on Offset to Offset processing menu operates as expected.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Offset entry record by entering all field values.
4. Search the newly created Offset entry by using all search options. Verify that search returns the Offset entry record for every search option.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset05
Test Objective : Verify that action icon operates as expected for 'View', 'Refresh' and 'Reassign' in the Offset to Offset entries section.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Offset entry by entering all the mandatory field values.
4. Navigate to View Offset entry window. Verify that newly created Offset entry is displayed as expected.
5. Create another Offset entry record by entering all the mandatory field values and submit for approval.
6. Create third Offset entry record by entering all the mandatory field values and submit for approval.
7. Create fourth Offset entry record by entering all the mandatory field values and submit for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to existing Offset to Offset Processing window.
11. Search the Offset entry record with search option as user and verify that Offset entry record/s is/are displayed as expected with status.
12. Logout from Servicing application.
13. Login into Servicing application with valid servicing user credentials.
14. Navigate to existing Offset to Offset Processing window.
15. Verify that Servicing user can reassign the Offset entry record to a different user with different status.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset06
Test Objective : Verify Transaction Input form layout, Cash Offset transaction validations (required fields and negative test on field values).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new DDA Payment Instruction for an existing Customer by entering all the mandatory field values. Approve the Payment Instruction record.
4. Create another DDA Payment Instruction record for an existing Customer by entering all mandatory field values and do not approve the Payment Instruction record.
5. Create a new Fed-Wire Payment Instruction for an existing Customer by entering all the mandatory field values and approve the Payment Instruction record.
6. Create another Fed-Wire Payment Instruction for an existing Customer by entering all mandatory field values and do not approve the record.
7. Navigate to existing Offset To Offset Processing window. Verify that form layout and menu items are displayed as expected.
8. Verify that system throws an error message accordingly for all field validations.
9. Verify that system throws an expected error message in View Exception window while save the Offset entry record without entering all mandatory field values.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset07
Test Objective : Verify Transaction Input form layout, Cash Offset transaction validations (required fields and negative test on field values).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Offset entry by entering all the mandatory field values.
4. Transaction 1: Add GL and Wire Transaction for an Offset entry record by entering all field values.
5. Transaction 2: Add GL and Wire Transaction2 for an Offset entry record by entering all field values.
6. Transaction 3: Add DDA Transaction for an Offset entry record by entering all field values.
7. Create another Offset entry record by entering all the mandatory field values. Add GL and Wire transaction by entering all mandatory field values.
8. Create third Offset entry record by entering all the mandatory field values.
9. Add multiple transactions to Offset entry#3 by entering all the mandatory field values and submit for approval.
10. Logout from Servicing application.
11. Login into Servicing application with valid approver credentials.
12. Navigate to existing Offset to Offset Processing window. Search an Offset entry record.
13. Approve the two touch Offset entry record.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset08
Test Objective : Verify the ability to edit field values in transaction when entries are in different status and validate edit capability on entries created by other users.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create 4 Offset Entry records by entering all mandatory field values and submit for the approval.
4. Logout from Servicing application.
5. Login into Servicing application with valid approver credentials.
6. Navigate to an existing Offset entry window. Search and Approve/Deny the Offset Entries.
7. Logout from Servicing application.
8. Login into ACBS Servicing application with valid servicing user credentials.
9. Navigate to existing Offset to Offset Processing window. Verify that transaction is not editable.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset09
Test Objective : Offset to Offset security designation test.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Modify Security designation for ACBSGOD to remove access for Offset to Offset.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid user credentials.
5. Verify that Offset To Offset window navigation menu is disabled.
6. Refresh the Servicing application (Actions - Refresh - All of the above). Add Security designation for ACBSGOD to grant access for Offset to Offset.
7. Logout from Servicing application.
8. Login into ACBS Servicing application with valid user credentials.
9. Update Security designation for ACBSGOD to have only Approval authority for Offset to Offset. Verify that Open option is disabled to open Offset entry record.
10. Update security designation for ACBSGOD to have only View authority for Offset to Offset. Verify that Open option is disabled to open Offset entry record.
11. Navigate to Offset entry History window.
12. Verify that transactions are not editable.
13. Update Offset to Offset entry authority to Owner like Owner cannot be a approver. Verify that Approval and Deny options are disabled.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset10
Test Objective : Verify the ability to edit the Transaction field values on different transaction types with different status and validate edit capability on entries created by other users.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Offset Entry record by entering all mandatory field values.
4. Create/Modify multiple transactions for newly created Offset entry record by entering all mandatory field values.
5. Create 4 Offset Entry records by entering all mandatory field values. Submit for approval.
6. Logout from Servicing application.
7. Login into Servicing application with valid approver credentials.
8. Navigate to existing Offset entry window. Search and Approve/Deny Offset entries accordingly.
9. Create multiple Offset Entries by entering all mandatory field values.
10. Logout from Servicing application.
11. Login into Servicing application with valid servicing user credentials.
12. Navigate to existing Offset to Offset Processing window.
13. Select an Offset Entry record created by another user with a status = 'NEW'. Reassign Offset Entry. Modify Offset transactions and Submit for Approval.
14. Logout from Servicing application.
15. Login into Servicing application with valid approver credentials.
16. Navigate to existing Offset to Offset Processing window. Search and Approve the Offset Entry record.
17. Logout from Servicing application.
18. Login into ACBS Servicing application with valid servicing user credentials.
19. Navigate to existing Offset to Offset Processing window.
20. Search and Select an Offset Entries created by current user with a satus = 'DENIED'. Modify transactions.
21. Search and Select an Offset Entry created by another user with a status = 'NEW'. Verify that Delete and Note options are disabled.
22. Search and Select an Offset Entry created by current user with a status = 'PND APPROVAL'. Verify that Delete and Note options are disabled.
23. Search and Select an Entry created by current user with a status = 'APPRVD'. Verify that Delete option is disabled.
24. Select an Entry created by current user with a status = 'DENIED'. Verify that Delete option is enabled and user is able to delete Offset Entry successfully.
25. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset11
Test Objective : Verify that out of balance Offset Entry cannot be submitted for Two-Touch and Pending Two-Touch Entry cannot be deleted.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Offset entry record and Transactions by entering all the mandatory field values.
4. Modify and Delete Offset entry transaction.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset12
Test Objective : Verify that transactions in Processed/New, Processed/Denied, Processed/Pending 2 Touch status records are purged and without processed when batch is performed in end of day.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to an existing Offset to Offset Processing window.
4. Create new 4 Offset entries by entering all mandatory field values and submit for approval.
5. Logout from Servicing application.
6. Login into Servicing application with valid Approver credentials.
7. Navigate to existing Offset to Offset Processing window.
8. Search and Approve/Deny Offset Entries.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset12
Test Objective : Verify that transactions in Processed/New, Processed/Denied, Processed/Pending 2 Touch status records are purged and without processed when batch is performed in end of day.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Offset To Offset Processing window. Perform search and verify that search returns Offset entries accordingly.
3. Navigate to Offset History window. Verify that Offset entry details are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset13
Test Objective : Verify that the Offset Entry History Detail window displays split screen view and contains all required search options/fields.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to Offset History window. Verify that Offset History form layout is displayed as expected.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL16OffsetToOffset14
Test Objective : Verify that search option fields on the Offset Entry History Detail screen operates as expected.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Offset History window.
4. Select the 'Entry History' action icon.
5. Perform a search using the Customer search option.
6. Customer: The search delivers the intended records.
7. Perform a search using the GL Unit search option.
8. GL Unit: The search delivers the intended records.
9. Perform a search using the Currency search option.
10. Currency: The search delivers the intended records.
11. Perform a search using the User name search option.
12. User Name: The search delivers the intended records.
13. Perform a search using the User name search option.
14. Servicing Unit: The search delivers the intended records.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic01
Test Objective : Verify the Maturity Bill logic for WM clients (Lead days).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a loan for an existing Facility with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Navigate to existing Repayment Secondary window for a Loan and Select the existing record. Select view icon.
6. Verify that Lead days, Number of Bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic01_DP1
Test Objective : Verify the Maturity Bill logic for WM clients (Lead days).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and Select the existing record. Select view icon.
4. Verify that Lead days, Number of bill, Bill Frequency and Replace Primary checkbox details are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic02
Test Objective : Verify the Maturity Bill logic for MMBSI clients.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a loan for an existing facility with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select View icon.
6. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic02_DP1
Test Objective : Verify the Maturity Bill logic for MMBSI clients.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select view icon.
4. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic03
Test Objective : Verify the Maturity Bill logic for CDB & CRELA clients (Primary replaced).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a loan for an existing facility with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select View icon.
6. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic03_DP1
Test Objective : Verify the Maturity Bill logic for CDB & CRELA clients (Primary replaced).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select view icon.
4. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic04
Test Objective : Verify the Maturity Bill logic for CAF & CAFL clients (Primary replaced).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a loan for an existing facility with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select View icon.
6. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic04_DP1
Test Objective : Verify the Maturity Bill logic for CAF & CAFL clients (Primary replaced).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select view icon.
4. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic05
Test Objective : Verify the ability to process a Loan Renewal Transaction to ensure repayment schedule dates get updated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan.
4. Update the Rate Setting and Maturity Date as system date.
5. Save the Rate setting details. Approve two touch record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic05_DP1
Test Objective : Verify the ability to process a Loan Renewal Transaction to ensure repayment schedule dates get updated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for a Loan and navigate to new Rollover/Renewal window by selecting the Loan.
4. Enter all the mandatory field values in Rollover/Renewal information window.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select view icon.
7. Verify that Next Due Date and Next Accrue to Date values are displayed as expected.
8. Navigate to Loan Invoices window.
9. Verify that Invoice outstanding for Principal is reflected as $0.00.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic06
Test Objective : Verify the ability to book new loan record then cycle to lead days to ensure secondary repayment schedule updated.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a loan for an existing facility with the help of new bundle and by entering all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
3. Save and Submit the bundle. Login with approver credentials and post the bundle.
4. Navigate to existing Repayment Secondary window for a Loan and select the existing record for lender type 600. Select View icon.
5. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected for Lender Type 600.
6. Navigate to existing Repayment Seconday window for a Loan and select the existing record for lender type 700. Select view icon.
7. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected for Lender Type 700.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic06_DP1
Test Objective : Verify the ability to book new loan record then cycle to lead days to ensure secondary repayment schedule updated.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Repayment Secondary window for a Loan and select the existing record for lender type 600. Select view icon.
3. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected for Lender Type 600.
4. Navigate to existing Repayment Seconday window for a Loan and select the existing record for lender type 700. Select view icon.
5. Verify that Lead days, Number of bills, Bill Frequency and Replace Primary checkbox details are displayed as expected for Lender Type 700.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL17MaturityBillRollOverCustomLogic07
Test Objective : Verify that field logging is enabled and captured all fields changes.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and select the existing record. Select View icon.
4. Navigate to Field Change History window. Verify that all field changes are captured in Field Logging History.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions01
Test Objective : Verify the ability to create DDA Payment Instruction for a Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a DDA Account Payment Instruction for the Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions02
Test Objective : Verify the ability to create FedWire Payment Instruction for a Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create FedWire Payment Instruction for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions03
Test Objective : Verify the ability to create ACH Transfer Payment Instruction for a Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an ACH Transfer Payment Instruction for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions04
Test Objective : Verify the Payment Medium (Cash Offset) is required. Blank payment medium/cash offset results in an error message, Cash offset is not valid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Enter Basic information in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-Cash Offset Is Not Valid.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions05
Test Objective : Verify the Currency Code is required. Provide blank in Currency Code field and shows an error message as Currency Code not found.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Enter Basic information in Payment Instruction window.
5. Try to save the Payment Instruction information.
6. Verify that system throws an expected error message as - 'Error-Currency Code Not Found' when we give blank for Currency Code field.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions06
Test Objective : Verify that payment ID is not editable.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Enter Basic information in Payment Instruction window.
5. Verify that Payment ID is not editable.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions07
Test Objective : Verify that Payment ID field is auto populated (001 to 999) with a number different than any existing instructions or any pending two touch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Verify that Payment ID populates with a number between 001 and 999.
5. Navigate to existing Payment Instruction window for a Customer.
6. Verify that number is not an existing Payment ID and in pending two touch transaction.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions08
Test Objective : Verify that Payment Medium (Cash Offset) only displays cash offsets that require payment instructions (DDA, ACH, Fed Wire).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Verify that Cash Offset is displayed only cash offsets that are required payment instructions (DDA, ACH, Fed Wire).
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions09
Test Objective : Verify the Currency Code defaults to USD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Enter Basic information in Payment Instruction window.
5. Verify that Currency Code is displayed defaults to USD.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions10
Test Objective : Verify the ability to modify an existing DDA Payment Instruction record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Navigate to edit Payment Instructions window and open an existing DDA Payment Instruction record. Modify Payment Instruction information and Save the details. Verify that System accepts all updations.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions11
Test Objective : Verify that the payment medium and currency are not editable once the record is saved.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer.
4. Select an existing payment instruction record and open.
5. Enter Basic information of DDA Account in Payment Instruction window.
6. Verify the Cashoffset and Currency dropdown values are not editable after record is saved.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions12
Test Objective : Verify the ability to cancel an existing payment instruction and then verify cancelled payment instruction will no longer be seen in the list.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Create a DDA Account Payment Instruction for the Customer.
4. Logout from Servicing application.
5. Login into ACBS Servicing application with valid servicing user credentials.
6. Navigate to existing Payment Instruction window for a Customer.
7. Select Payment Instruction and Delete.
8. Verify that deleted payment instruction is not listed in existing payment instruction window.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions13
Test Objective : Verify that an existing payment instruction cannot be cancelled if there is a pending transaction utilizing it.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Transaction in Bundle Manager window.
4. Select the Loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Navigate to Cashoffset window and enter cash item information by selecting the existing Payment Instruction record.
7. Navigate to existing Payment Instruction window for a Customer.
8. Select and cancel the Payment Instruction that was used in CashOffset data. Verify that Payment Instruction cannot be cancelled since this is used in a pending transaction.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions14
Test Objective : Verify that an existing payment instruction cannot be cancelled if it is utilized for auto debit.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Transaction in Bundle Manager window.
4. Select the Loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Navigate to Cashoffset window and enter cash item information by using existing Payment Instruction record. Save the record.
7. Navigate to existing Payment Instruction window for a Customer.
8. Select and cancel the Payment Instruction record that was used in CashOffset data. Verify that payment instruction cannot be cancelled since this is used in a pending transaction.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions15
Test Objective : Verify that an existing payment instruction cannot be cancelled if it is utilized for repayment schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer.
4. Select and Cancel Payment Instruction record that is used is repayment schedule. Verify that payment instruction cannot be cancelled since this is used in repayment primary schedule.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions16
Test Objective : Verify the ability to modify an existing Fed-wire payment instruction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Payment Instructions window for FED-WIRE Payment Instruction and update Payment Instruction details. Save the changes. Verify that system accepts all updations.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions17
Test Objective : Verify that PB Custody account requires 9 digit entry (one alpha followed by 8 numeric).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Enter Basic information in Payment Instruction window with few characters in between 2-9 digits of PB Custody Account number.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-Positions 2 - 9 Of PB Custody Account Must Be Numeric.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions18
Test Objective : ACBS CRF Validation file required to validate Bank ABA for ACH (CBCRFVER).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instructions window for a Loan.
4. Select the New icon in the existing Payment Instructions window.
5. Select Incoming Payment Instruction picker and select the Payment ID from the existing payment instruction window.
6. Enter Basic information in Payment Instruction window. Save the details.
7. Verify that Bank ABA field is not editable.
8. Navigate to Bank ABA window.
9. Verify 'Bank Name' by entering the information in the 'Search For' field.
10. Verify that Bank ABA field is not editable.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions19
Test Objective : Verify Fed-Wire Payment Instruction fields for Bank to Bank instructions lines 3-6 fields can not be edited. They will only be displayed for historical purposes when there is information in these fields. Otherwise the fields are not shown.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instructions window for a Customer.
4. Select an existing Fed-Wire Payment Instruction record and open it.
5. Verify that Bank to Bank Instruction lines 3-6 are not editable.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions21
Test Objective : Verify sequence of columns to be displayed from the CBFNDVER file in the search from left to right are
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information in Payment Instruction window.
5. Verify that sequence of columns are displayed as expected in the search from left to right are: Bank ABA, Bank Name, Bank Address, Bank City, Bank State, Bank Zip, Bank Phone.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions22
Test Objective : Verify the Bank name defaults to JPM for DDA Payment Instruction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information in Payment Instruction window.
5. Verify that Bank Name is displayed with defaults to JP Morgan Chase.
6. Enter Basic information in Payment Instruction window with different Bank Name.
7. Verify that Bank Name is updated successfully with new value.
8. Verify that Payment Instructions record has been added successfully.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions23
Test Objective : Verify that DDA number is required. Blank DDA number results in an error message as - Please Enter Account No.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter all Basic information without entering DDA number in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-Account Number Must Be Specified.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions24
Test Objective : Verify the Bank account number must be all numeric alpha character in the bank account number results in an error message as- Account No. Must be Numeric.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter all Basic information details with alphanumeric value to Account number in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-Account Number Must Be Numeric.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions25
Test Objective : Verify DDA system returns the following field entries and overwrites when initial entry differs
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a DDA Payment Instruction by entering all field values. Verify that DDA Payment Instruction displays the following field entries and overwrites when initial entry differs: Financial entity, Company number, Bank account name, Local name (if available).
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions26
Test Objective : Verify DDA system returns the following error messages when applicable DDA# Is Inactive/Closed, Re-enter DDA# Not Found.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Payment Instruction window for a Customer.
4. Enter Basic information in Payment Instruction window. Click on Quick save icon.
5. Verify that system throws an expected error message as - DDA# is inactive/Closed or Re-enter DDA# Not Found.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions27
Test Objective : Verify DDA override (from commfail message) OVR appears in entry screen.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter DDA Payment Instruction information.
5. Verify that an OVR text appears on the payment instruction window and save the record.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions28
Test Objective : DDA - Verify in override mode a blank financial entity receives an error message (FNEN is required).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information except Financial Entity in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Financial Entity Is Required.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions29
Test Objective : Verify that in override mode a blank company number receives an error message (Company No. is required).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information except Company Number in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message - 'Error-Company Number Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions30
Test Objective : Verify in override mode an incorrect financial entity and company number combination receives an error message (Invalid FNEN/Company Number Combination).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information with invalid Financial Entity in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-Invalid Financial Entity / Company Number Combination.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions31
Test Objective : Verify PB Custody account requires 9 digit entry (one alpha followed by 8 numeric).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information with numeric value for 1st digit of PB Custody Account in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-1st Position Of PB Custody Account Must Be Alpha.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions32
Test Objective : Verify Fed-Wire Credit Party ID field is searchable by ABA/ or MBR/ or Name and is prompted by the CBFNDVER file.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction Basic information.
5. Navigate to Credit Party window with Search by ABA/MBR/Name.
6. Verify that Wire Service Type - if Credit Party ID contains ABA/, then defaults to F. If Credit Party ID contains MBR/, then defaults to M.
7. Verify that Pre-approved code if Wire Service Type is M/F defaults to D.
8. Verify that Funds Available Code defaults to S.
9. Verify that Non-bank indicator defaults to B.
10. Enter Payment Instruction Additional information in Payment Instruction window.
11. Verify that Payment Instruction record has been added successfully.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions33
Test Objective : Verify Fed-wire Credit Party ID field is searchable by ABA/ or MBR/ or Name and is prompted by the CBFNDVER file.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction information.
5. Navigate to Credit Party window with Search by ABA/MBR/Name.
6. Verify that Credit Party ID field value is added with prefix ABA/MBR/Name.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions34
Test Objective : Verify the Credit Party ID columns needed are displayed in FED-WIRE. The information from the Search is able to be re-sorted by column header.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction information.
5. Verify that columns are resorted by clicking on the headers.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions35
Test Objective : Verify that Credit Party is required in Fed-wire payment instruction window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction information except Credit Party ID information.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Credit Party ID Cannot Be Blank'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions36
Test Objective : Verify the Wire Service Type is required in Fed-wire payment instruction window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction information except Wire Service Type information.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - Error-Wire Service Type Is Required.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions37
Test Objective : Verify the Pre-approved code is required in Fed-wire payment instruction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details except Pre-Approved code information.
5. Enter the Pre Approved Code value as 'none' and save it.
6. Verify that system throws an expected error message as - 'Error-Pre-Approved Code Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions38
Test Objective : Verify the Funds Available Code is required. Blank Funds Available Code results in an error message, Funds Available Code is required Fed-wire payment instruction window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details except Funds Available code value.
5. Enter the Funds Available Code value as 'none' and save it.
6. Verify that system throws an expected error message as - 'Error-Funds Available Code Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions39
Test Objective : Verify the error messages in Fed-wire payment instruction window as - Bank/Non-bank Indicator is required, Non-Bank Indicator is required.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details except Non-Bank Indicator value.
5. Enter the Non Bank Indicator field value as 'none' and save it.
6. Verify that system throws an expected error message as - 'Error-Non-Bank Indicator Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions40
Test Objective : Verify Fed-Wire Credit Party Name field cannot be edited directly. It can only be changed by changing the credit party id.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details.
5. Verify the Credit Party Name field is not editable.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions41
Test Objective : Verify Fed-wire Credit Party Address 1, Credit Party Address 2, and Credit Party Address 3 will be retrieved when available during validation of ABA but not displayed on payment instruction screen.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information in Payment Instruction window.
5. Verify that Bank Address1, Address2 and Address3 fields are displayed in the Search window.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions42
Test Objective : Verify Fed-wire Account Party ID field is the account number of the Beneficiary or the ABA number of an intermediary.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information in Payment Instruction window.
5. Verify that Account Party ID is used binocular search and ID-DDA is used free form typing field.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions43
Test Objective : Verify Fed-Wire the Account Party ID field is used for an intermediary and must be prefaced with ABA/ otherwise receive message, Account party ID entered is not prefaced by ABA/.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details.
5. Verify that Account Party Name is auto-populated. Remove Account Party Name and make it as blank.
6. Click on the quick save button.
7. Verify that system throws an expected error message as - 'Error-Account Party Name Cannot Be Blank'.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions44
Test Objective : Verify Fed-Wire for Account Party ID, Account Name is always required.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details except Account Party Address1 field.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Account Party Address 1 Cannot Be Blank If Account Party ID Is Not Entered'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions45
Test Objective : Verify Fed-Wire for Account Party ID, Account Name is always required. If Account Party ID is entered but not Account Party Name receive error message, Account Party Name cannot be Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details except Account Party Name value.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Account Party Name Cannot Be Blank'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions46
Test Objective : Verify Fed-Wire Bene/Payor ID field is used if the Account of Party is not the beneficiary. (i.e. an intermediary bank is used in the Account Party ID).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Fed-Wire Payment Instruction details except Beneficiary Name.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Ultimate Beneficiary Name Cannot Be Blank When Ultimate Beneficiary ID Is Entered'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions48
Test Objective : Verify fields and their default values in ACH payment instruction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter ACH Payment Instruction Basic information in Payment Instruction window.
5. Verify that ACH Payment Instruction fields and their default values are displayed as expected.
6. Save the ACH Payment Instruction record. Verify that Payment Instruction record has been added successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions49
Test Objective : Verify the Bene/Payor ID (Account No) is required. Provide blank value for Bene/Payor ID (Account No) field and expect error message as Account Number Required.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information except Account Number in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Account Number Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions50
Test Objective : Verify Bank ABA# field cannot be entered manually and it must be prompted via Binocular view. Once prompted you can select to search by
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information in Payment Instruction window.
5. Try to update the Bank ABA field value.
6. Verify that Bank ABA field is not editable and able to enter via binocular.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions51
Test Objective : Verify when we enter blank value for the Bank ABA field then it gives an error message as - Bank ABA is Required.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information except Bank ABA data in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Bank ABA Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions52
Test Objective : Verify when we enter blank value for the Account Type field then it gives an error message as - Account Type is Required.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information except Account Type in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-Account Type Is Required'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions53
Test Objective : Verify if Custody Account Type is O and populated with only numbers, then error message received as - OMNI Account Number must start with a letter and followed by 8 digits.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information with OMNI value starts with digit 7 and 5 digits number in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-OMNI Must Start With a Letter Followed By 8 Digits'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions54
Test Objective : Verify if Custody Account Type is O, and account number is entered with less than 9 characters, then error message received as OMNI must be 9 characters.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information with OMNI value as 4 characters length in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-OMNI Must Be 9 Characters'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions55
Test Objective : Verify if Custody Account Type is O and populated with only numbers, then error message received as OMNI Account Number must start with a letter and followed by 8 digits.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Payment Instruction window for a Customer and click on New icon. New Payment Instruction window appears.
4. Enter Basic information with OMNI value starts with 3 in Payment Instruction window.
5. Click on the quick save button.
6. Verify that system throws an expected error message as - 'Error-OMNI Must Start With a Letter Followed By 8 Digits'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions56
Test Objective : Verify new addendum file for all JPMC site specific fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the customer ID and Payment ID from DB.
3. The retrieved Customer ID and Payment Instruction ID values from the Database are - 
4. Run the SQL query to get JPMC site specific fields from DB.
5. Verify that Financial Entity, Local Name, Company Number and PB Custody Account Number fields are displayed as expected in DB.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions57
Test Objective : Verify field logging for all new fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a DDA Account Payment Instruction for the Customer.
4. Navigate to existing Payment Instruction window for a Customer.
5. Select DDA Account Payment Instruction record from existing Payment Instructions window. Navigate to Field Change window.
6. Verify that DDA Account Payment Instruction fields are displayed in Field Logging window.
7. Logout from Servicing application.
8. Login into ACBS Servicing application with valid user credentials.
9. Create an ACH Transfer Payment Instruction for a Customer.
10. Navigate to existing payment instructions window for a Customer.
11. Select ACH Transfer Payment Instruction record from existing Payment Instructions window. Navigate to Field Change window.
12. Verify that ACH Transfer Payment Instruction fields are displayed in Field Logging window.
13. Logout from Servicing application.
14. Login into ACBS Servicing application with valid user credentials.
15. Create FedWire Payment Instruction for a Customer.
16. Navigate to existing payment instructions window for a Customer.
17. Select Fed-Wire Payment Instruction record from existing Payment Instructions window. Navigate to Field Change window.
18. Verify that Fed-Wire Payment Instruction fields are displayed in Field Logging window.
19. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions58
Test Objective : Verify a cancelled payment instruction will remain in database to be pulled via a query.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Create a DDA Payment Instruction record for a Customer by entering all mandatory field values.
4. Logout from Servicing application.
5. Login into ACBS Servicing application with valid servicing user credentials.
6. Navigate to existing Payment Instruction window for a Customer.
7. Select the existing Payment Instruction record and delete. Verify that deleted payment instruction record is no longer listed in the existing payment instruction window.
8. Logout from Servicing application.
9. Run SQL query and verify the deleted Payment Instruction ID in DB.
10. Customer ID and Payment Instruction ID values retrieved from the Database is - 
11. Verify that values are matched for deleted payment instruction id and database payment instruction id.


#########################################################################################################
Test Case Name : CL21RegZUpdate01
Test Objective : Verify Facility regulation Z indicator value is set to N.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as N. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate02
Test Objective : Verify Facility regulation Z indicator is value set to C.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as C. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate03
Test Objective : Verify Facility regulation Z indicator value is set to Y with regulation Z Threshold amount of 80,000.00 (Colorado).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y with threshold amount: 80,000.00 (Colorado). Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate04
Test Objective : Verify Facility regulation Z indicator value is set to Y with regulation Z Threshold amount of 100,000.00 (South Carolina).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y with threshold amount: 100,000.00 (South Carolina). Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate05
Test Objective : Verify Facility regulation Z indicator value is set to Y with regulation Z Threshold amount of 105,000.00 (Maine).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y with Threshold amount of 105,000.00 (Maine). Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate06
Test Objective : Verify Facility regulation Z indicator value is set to Y with regulation Z Threshold amount of 60,000.00 (all states except Colorado, South Carolina, Maine).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y with Threshold amount of 60,000.00 (all states except Colorado, South Carolina, Maine). Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate07
Test Objective : Verify Facility with regulation Z indicator value is set to Y and verify Threshold amount can be changed.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate08
Test Objective : Verify Facility with regulation Z indicator value is set to Y will require two touch to be changed.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that updated Reg Z values are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate09
Test Objective : Verify new loan is meeting threshold changes indicator from Y to C systematically.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Enter Cash item information.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Navigate to edit Facility Additional Detail window and verify that Reg Z values are displayed as expected.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate10
Test Objective : Verify new loan is not meeting threshold, it will not change the indicator from Y to C (approve & post).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Navigate to Cash Item and enter Cash item information.
7. Select the Draft Loan checkbox and save the record.
8. Verify that bundle status is Pending Input with drafts.
9. Open the bundle and uncheck the Draft Loan checkbox. Save the information.
10. Open the Pending Input bundle.
11. Enter New Loan tab information.
12. Enter Regulatory tab information.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to Edit Facility Additional Detail window and verify that Reg Z values are displayed as expected.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate11
Test Objective : Verify new loan is not meeting threshold, it will not change the indicator from Y to C (approve & post).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Enter Cash item information.
7. Select the Draft Loan checkbox and save the record.
8. Verify that bundle status is pending input with drafts.
9. Open the bundle and uncheck the Draft Loan checkbox. Save the information.
10. Open Pending Input bundle and enter New Loan tab information.
11. Enter Regulatory tab information.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Navigate to edit Facility Additional Detail window. Verify that Reg Z values are displayed as expected.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate12
Test Objective : Verify new loan is not meeting threshold, it can be denied for approval.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Enter Cash item information.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Verify that bundle status is changed to pending approval.
9. Navigate to edit Facility Additional Detail window. Verify that Reg Z values are displayed as expected.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate13
Test Objective : Verify Facility that has not met threshold, it will not change to C if advance to an existing loan under it for less than threshold (causing the total to go over the threshold) is entered.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Enter Cash item information.
7. Select the Draft Loan checkbox and save the record.
8. Verify that bundle status is pending input with drafts.
9. Open the bundle and uncheck the Draft Loan checkbox. Save the data.
10. Open Pending Input bundle. Enter New Loan and Regulatory tab information.
11. Save and Submit the bundle. Login with approver credentials and post the bundle.
12. Verify that bundle status is changed to pending approval.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate14
Test Objective : Verify threshold will not change to C if advance to an existing loan under it.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Navigate to edit Loan window for an existing Loan and get the existing Loan amount value.
6. Create a new Bundle and navigate to new Transaction window.
7. Select the loan and enter the transaction code as 3120.
8. Enter the transaction details on new Transaction window.
9. Enter Cash offset details.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate15
Test Objective : Verify threshold will not change to C if advance to an existing loan under it.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial Draw Amount Needed field value.
5. Navigate to view Loan window for an existing Loan and get the existing Loan amount value.
6. Create a new Bundle and navigate to new Transaction window.
7. Select the loan and enter the transaction code as 3120.
8. Enter the transaction details on new Transaction window.
9. Enter Cash offset details.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate16
Test Objective : Verify threshold will change to C if an advance to an existing loan under it.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the loan and enter the transaction code as 3120.
7. Enter the transaction details on new Transaction window.
8. Enter Cash offset details.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate17
Test Objective : Verify new loan under facility with Regulation Z indicator value is set to Y with Regulation Z Threshold amount of 0.00.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information.
4. Get the Facility Initial draw amount needed field value.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Enter Cash item information and save the record.
7. Verify that system throws an expected error message - 'Error-Initial Draw Amount Needed field on the facility cannot be 0'.
8. Check the Draft Loan checkbox and save the record.
9. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
10. Verify that bundle status is pending input with drafts.
11. Open the Loan bundle and uncheck the Draft Loan checkbox. Save the information.
12. Open Pending Input bundle. Enter New Loan tab and Regulatory tab details.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to edit Facility Additional Detail window. Verify that updated Reg Z values are displayed as expected.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate18
Test Objective : Verify Facility with Regulation Z indicator value is set to C. It can be changed back to Y.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate19
Test Objective : Verify Facility with Regulation Z indicator value is set to Y. It can be changed to N.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value as Y. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate20
Test Objective : Verify new loan for 0.00 will not change indicator from Y to C or throws error messages.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility Additional Detail window for an existing Facility and update the regulation Z indicator value. Save the information and close Facility Additional Detail window.
4. Navigate to edit Facility Additional Detail window and verify that Reg Z value is displayed as expected.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate21
Test Objective : Verify Facility level Field Logging changes on the Regulation Z Indicator fields under the Facility Additional Detail window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Facility changes are logged as expected in Field Logging History window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL23NonAccuralOverrideFlagAndEndDate01
Test Objective : Verify the Non-Performing Override fields in new Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a 'Self Originated' Facility for an existing Customer by entering all the mandatory field values.
4. Navigate to edit Facility window for newly created Facility and select Risk tab.
5. Verify that overridden Non-Performing section has been added newly with expected fields.
6. Verify that overridden Non-Performing section has been added newly with expected default field values.
7. Verify that Cash Offset and Currency Code fields are not editable.
8. Create a new Bundle and navigate to new Transaction window for a Facility.
9. Select the Facility and enter the transaction code as 4100.
10. Enter the transaction details on new Transaction window.
11. Save and Submit the bundle. Login with approver credentials and post the bundle.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL23NonAccuralOverrideFlagAndEndDate02
Test Objective : Verify the Non-Performing Override fields for an existing Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window for an existing Facility and select Risk Tab.
4. Verify that Non-Performing Overriden fields are displayed as expected.
5. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
6. Verify that Cash Offset and Currency Code fields are not editable.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL23NonAccuralOverrideFlagAndEndDate05
Test Objective : Verify if loans with Override Flag set to On (YES) and an End Date greater than current processing date are by passed during EOD process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 4100.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL23NonAccuralOverrideFlagAndEndDate05A_DP1
Test Objective : Verify if loans with Override Flag set to On (YES) and an End Date greater than current processing date are by passed during EOD process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window and verify that Loan Accounting Method is not changed to the value as 'NON-PERFORM'.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL23NonAccuralOverrideFlagAndEndDate05A_DP3
Test Objective : Verify if loans with Override Flag set to On (YES) and an End Date greater than current processing date are by passed during EOD process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window and verify that Loan Accounting Method is changed to the expected value as 'NON-PERFORM'.
4. Navigate to view Facility window and verify that overridden Non-Performing section field values are displayed as expected in Risk information tab.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL23NonAccuralOverrideFlagAndEndDate07
Test Objective : Verify names are created for Non-Performing Override fields at facility level in Data Base.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query to get the Non-Performing fields values from data base.
3. Verify that Non-Performing fields and field values are reflected as expected in DataBase. The retrieved data from the Database is - 


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules01
Test Objective : Verify the ability to create 'Pricing Rule(s) for the Facility Level using the new Facility Details menu Option.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Pricing Rule for an existing Facility.
4. Navigate to existing Pricing Rule window for a Facility and open the existing Pricing Rule record. Modify the Facility Pricing Rule information and Save the details.
5. Navigate to existing Pricing rule window. Select Pricing Rule record and open in view mode.
6. Navigate to Field Logging History window. Verify that Field Logging History is captured all changes and displayed as expected for pricing Rule updates.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules02a
Test Objective : Verify the ability to test the Pricing Rule validations when creating a new Loan where the Interest Rate Type matches the Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules02b
Test Objective : Verify the ability to test the Pricing Rule validations when creating a new Loan where the Interest Rate Type DOES NOT match the Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules02c
Test Objective : Verify the ability to test the Pricing Rule validations when creating a new Loan with a Pricing Option Template that matches Pricing Rules where the Interest Rate Type is auto-populated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules02d
Test Objective : Verify the ability to test the Pricing Rule validations when creating a new Loan with a Pricing Option Template that DOES NOT match Pricing Rules where the Interest Rate Type is auto-populated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules03
Test Objective : Verify the ability to test the Pricing Rule validations on a new Loan when the Interest Rate Type is manually selected but does not match Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Navigate to edit Loan window and select Miscellaneous tab.
6. Verify that Pricing exception approver value is displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules04
Test Objective : Verify the ability to test the Pricing Rule validations using Pricing Option template that Auto-populates Interest Rate Type.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules05
Test Objective : Verify the ability to test the Pricing Rule validations using Pricing option template that Auto-populates Interest Rate Type value that does not match Pricing Rules and create loan using Template.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Create a Loan for an existing Facility - Enter Loan details for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Enter all mandatory field values in Cash Item window.
7. Save and Submit the Loan. Login with approver credentials and post the Loan.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules06
Test Objective : Verify the ability to test the Pricing Rule validations by Processing TC 3120 (Loan Disbursement) on a loan tied to a Facility with existing Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the transaction.
7. Verify that Authorizing user window pop up is displayed as expected. Accept exception and select 'Submit for Approval' option.
8. Logout from Servicing application.
9. Login into ACBS Servicing application with Approver credentials.
10. Search and Post the Pending Approval Transaction Bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules07
Test Objective : Verify the ability to test the Pricing Rule validations by processing TC 3120 (Loan Disbursement) when Interest Rate Type does not match existing Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the transaction.
7. Verify that Authorizing user window pop up is displayed as expected. Accept exception and select 'Submit for Approval' option.
8. Logout from Servicing application.
9. Login into ACBS Servicing application with Approver credentials.
10. Search and Post the Pending Approval Transaction Bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules08
Test Objective : Verify the ability to test the Pricing Rule validations by processing Loan Rollover/Renewal on a Loan tied to a Facility with existing Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Rollover/Renewal window for a Loan.
4. Enter all mandatory field values in the Rollover/Renewal window.
5. Enter all mandatory field values in Cash Item information.
6. Save and Submit the transaction.
7. Verify that Authorizing user window pop up is displayed as expected. Accept exception and select 'Submit for Approval' option.
8. Logout from Servicing application.
9. Login into ACBS Servicing application with Approver credentials.
10. Search and Post the Pending Approval Transaction Bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules09
Test Objective : Verify the ability to test the Pricing Rule validations by processing Loan Rollover/Renewal on a Loan tied to a Facility with existing Pricing Rules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Rollover/Renewal window for an existing Loan.
4. Enter all mandatory field values in the Rollover/Renewal window.
5. Enter all mandatory field values in Cash Item information.
6. Save and Submit the bundle.
7. Verify that Authorizing user window pop up is displayed as expected. Accept the exception and select 'Submit for Approval' option.
8. Logout from Servicing application.
9. Login into ACBS Servicing application with Approver credentials.
10. Search and Post the Pending Approval Transaction Bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules10
Test Objective : Verify the ability to update pricing Rules with Minimum Base rate & Maximum Base rate and Reserve rate in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Pricing Rule for an existing Facility.
4. Verify field values are updated in Field logging window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL24FacilityDetailMenuOptionPricingRules11
Test Objective : Verify if Illogical Combinations are Allowed for Minimum & Maximum Rates in Pricing Rules/Verify if ACBS allows user to enter a min base rate higher than the max base rate value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. NAvigate to JPMC Pricing Rules and Controls window.
4. Enter the Pricing Rules information.
5. Verify error message that Minimum Base Rate cannot be greater than Maximum Base Rate is displayed.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction01
Test Objective : Verify the ability to hide Transaction code 3990 and 3995.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that 3990 is an invalid transaction code for the provided loan ID.
4. Verify that 3995 is an invalid transaction code for the provided loan ID.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction02
Test Objective : Verify the ability to close out transaction - validation check - fail Loan acct method code 1 and 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 9990.
5. Enter the transaction details on new Transaction window.
6. Click on the quick save button.
7. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This loan Due To Incorrect Accounting Status Code'.
8. Create a new bundle and navigate to Accounting method change window for a Loan. Enter all the mandatory fields in Accounting method change window.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Create a new Bundle and navigate to new Transaction window for a Loan.
11. Select the Loan and enter the transaction code as 9990.
12. Enter the transaction details on new Transaction window for close out the Loan.
13. Click on the quick save button.
14. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This loan Due To Incorrect Accounting Status Code'.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction03
Test Objective : Verify the ability to perform a close out transaction for a Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 9990.
5. Enter the transaction details on new Transaction window.
6. Click on the quick save button.
7. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Transaction Amount Not equal To Current Principal Balance'.
8. Update the transaction details on new Transaction window and save it.
9. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Transaction Amount Not equal To Current Principal Balance'.
10. Update the transaction details on new Transaction window and save it.
11. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Transaction Amount Not equal To Current Principal Balance'.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction04
Test Objective : Verify the ability to validate the effective date of the close out transaction 9990 must be greater than or equal to the date of the most recent financial transaction and no later than the current date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 9990.
5. Enter the transaction details on new Transaction window and save it.
6. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed Due To The Effective Date - Future Dated Transaction.'
7. Update the transaction details on new Transaction window and save it.
8. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed Due To The Effective Date - Future Dated Transaction.'
9. Update the transaction details on new Transaction window and save it.
10. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed Due To The Effective Date - Prior to Earlier Transactions.'
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction05
Test Objective : Verify the ability to validate error message when outstanding fee balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to Accounting method change window for a Loan. Enter all the mandatory fields in Accounting method change window.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the Loan and enter the transaction code as 3100.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 9990.
11. Enter the transaction details on new Transaction window.
12. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Suspensed Receival Balance.'
13. Create a new Bundle and navigate to new Transaction window.
14. Select the Loan and enter the transaction code as 3110.
15. Enter the transaction details on new Transaction window.
16. Save and Submit the bundle. Login with approver credentials but not post the bundle.
17. Navigate to new Transaction window.
18. Select the Loan and enter the transaction code as 9990.
19. Enter the transaction details on new Transaction window and save it.
20. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Pending Principal Transactions.'
21. Logout from the Servicing application


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction06
Test Objective : Verify the ability to validate error message when outstanding receivable balances.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Create a new bundle and navigate to Accounting method change window for a Loan. Enter all the mandatory fields in Accounting method change window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 9990.
11. Enter the transaction details on new Transaction window and save it.
12. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Suspensed Receival Balance.'
13. Create a new Bundle and navigate to new Transaction window.
14. Select the Loan and enter the transaction code as 3100.
15. Enter the transaction details on new Transaction window.
16. Save and Submit the bundle. Login with approver credentials and post the bundle.
17. Create a new Bundle and navigate to new Transaction window.
18. Select the Loan and enter the transaction code as 9990.
19. Enter the transaction details on new Transaction window and save it.
20. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Suspensed Receival Balance.'
21. Create a new Bundle and navigate to new Transaction window.
22. Select the Loan and enter the transaction code as 9990.
23. Enter the transaction details on new Transaction window and save it.
24. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This Loan Due To Suspensed Receival Balance.'
25. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction07
Test Objective : Verify the ability to process the loan close-out transaction - loan is closed out, all fields zeroed.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to Accounting method change window for a Loan. Enter all the mandatory fields in Accounting method change window.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the Loan and enter the transaction code as 3182.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 9990.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Click on Save and Submit button.
14. Logout from Servicing application.
15. Login into Servicing application with valid approver credentials.
16. Navigate to Bundle window.
17. Right click on bundle and select Approve and Post Bundle.
18. Logout from Servicing application.
19. Login into Servicing application with valid approver credentials.
20. Navigate to view Loan window.
21. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
22. Navigate to new Transaction window.
23. Select the Loan and enter the transaction code as 3100.
24. CLick on the quick save button.
25. Verify that Loan close-out pop-up displayed for 3100 Transaction.
26. Navigate to new Transaction window.
27. Select the Loan and enter the transaction code as 3200 and save it.
28. Verify that Loan close-out pop-up displayed for 3200 Transaction.
29. Navigate to new Transaction window.
30. Select the Loan and enter the transaction code as 3610 and save it.
31. Verify that Loan close-out pop-up displayed for 3610 Transaction.
32. Navigate to Loan History window for an existing loan.
33. Verify that 9990 Loan Close-out Transaction displayed.
34. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL26NonPerformingLoanCloseoutTransaction08
Test Objective : Verify the ability to process the loan close-out transaction - loan is closed out, all fields zeroed.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 9990.
5. Enter the transaction details on new Transaction window for close out the loan and save it.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Click on Save and Submit button.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Logout from Servicing application.
13. Login into Servicing application with valid approver credentials.
14. Navigate to view Loan window.
15. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
16. Navigate to Loan History window for an existing loan.
17. Verify that 9990 Loan Close-out Transaction displayed.
18. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging05
Test Objective : Utilize existing facility with blank PIF and any Pledge Pool code, input a collateral record eligible for pledging and expect no change to either PIF or PP after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new collateral window for an existing customer and enter all mandatory field values. Save the record.
4. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging05_DP1
Test Objective : Utilize existing facility with blank PIF and any Pledge Pool code, input a collateral record eligible for pledging and expect no change to either PIF or PP after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value remains unchanged and Ineligible flag code is still blank.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging06
Test Objective : Utilize existing facility with blank PIF and blank Pledge Pool code, input a collateral record ineligible for pledging and expect PIF to change to ‘EXC’ and PP still blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new collateral window for an existing customer and enter all mandatory field values. Save the record.
4. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging06_DP1
Test Objective : Utilize existing facility with blank PIF and blank Pledge Pool code, input a collateral record ineligible for pledging and expect PIF to change to ‘EXC’ and PP still blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value remains blank and Ineligible flag code value is changed to EXC.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging07
Test Objective : When release date is entered on collateral linked with Facility with PIF 'EXC' then Verify Pledge Pool value changed to Blank and Ineligible flag code changed to <NONE> post EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for an existing customer and modify the field values. Save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging07_DP1
Test Objective : When release date is entered on collateral linked with Facility with PIF 'EXC' then Verify Pledge Pool value changed to Blank and Ineligible flag code changed to <NONE> post EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value is changed to blank and Ineligible flag code value is changed to <NONE>.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging08
Test Objective : Utilize existing facility with blank PIF and Pledge Pool code, input a collateral record ineligible for pledging and expect PIF to change to 'TEXC' and PP still blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new collateral window for an existing customer and enter all mandatory field values. Save the record.
4. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging08_DP1
Test Objective : Utilize existing facility with blank PIF and Pledge Pool code, input a collateral record ineligible for pledging and expect PIF to change to 'TEXC' and PP still blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value is changed to blank and Ineligible flag code value is changed to TEXC.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging09
Test Objective : Update release date on collateral,facility with PIF value of TEXC should change to REXC.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing collateral window for an existing customer. Update the Collateral field values and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging09_DP1
Test Objective : Update release date on collateral,facility with PIF value of TEXC should change to REXC.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value remains blank and Ineligible flag code value is changed to REXC.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging10
Test Objective : Change Industry Cls code to 9999.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Customer flow down record with the values - Change Type: Industry class code, Group: 99, Customer: Change customer, Facility: Select All CA, Loan: Select all CL.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging10_DP1
Test Objective : Change Industry Class code to 9999.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value is changed to blank and Ineligible flag code value is changed to TNAIC.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging11
Test Objective : Select a CA that is eligible and has no exceptions and check to make sure the NAICS is valid.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 
3. Select a CA that is eligible and has no exceptions and check to make sure the NAICS is valid.


#########################################################################################################
Test Case Name : CL27FedPledging12
Test Objective : Update NAIC to an eligible code.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a customer flow down record for an existing customer with values - Change Type: Industry class code, Group: 99, Customer: Change customer, Facility: Select All CA, Loan: Select all CL.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging12_DP1
Test Objective : Update NAIC to an eligible code.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value remains blank and Ineligible flag code value changed to blank.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging13
Test Objective : Update NAIC code to eligible code.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a customer flow down with followed values- Change Type: Industry class code, Group:99, Customer: Change customer, Facility: Select All CA, Loan: Select all CL.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging13_DP1
Test Objective : Update NAIC to an eligible code.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains blank and Ineligible flag code value changed to RNAIC.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging14
Test Objective : Update customer code to not be 000 PIF value changes to TINSI, Pledge Pool changes to Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Internal Customer field to 
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging14_DP1
Test Objective : Update customer code to not be 000 PIF value changes to TINSI, Pledge Pool changes to Blank
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to blank and Ineligible flag code changed to TINSI.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging15
Test Objective : Verify PIF changes to RINSI after update internal customer to 000.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Internal Customer field to 
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging15_DP1
Test Objective : Verify PIF changes to RINSI after update internal customer to 000.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value changed to RINSI.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging16
Test Objective : PIF Changed to Blank when Customer updated to No Internal Relation
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Internal Customer field to 
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging16_DP1
Test Objective : PIF Changed to Blank when Customer updated to No Internal Relation
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value changed to blank.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging17
Test Objective : Expect no change after EOD is run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Customer window.
4. Verify Internal Customer value is 000(NO INTERNAL RELATION).
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging17_DP1
Test Objective : Expect no change after EOD is run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value remains unchanged.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging18
Test Objective : Change in PIF and Pool Value due to name change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Execute SQL query to get the Customer name from the database.
4. Update Name1 field to 
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging18_DP1
Test Objective : Change in PIF and Pool Value due to name change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to blank and Ineligible flag code value changed to TNAME.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging19
Test Objective : Change in PIF and Pool Value due to name change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Execute SQL query to get the customer name from the database.
4. Update Name1 field to 
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging19_DP1
Test Objective : Change in PIF and Pool Value due to name change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains blank and Ineligible flag code value remains blank.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging20
Test Objective : Use a CA with a PIF of TADDR and correct the address, after EOD address PIF should be RADDR.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update basic information in Customer Address window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging20_DP1
Test Objective : Use a CA with a PIF of TADDR and correct the address, after EOD address PIF should be RADDR.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value change to RADDR.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging21
Test Objective : Use a CA with a PIF of ADDR and correct the address, after EOD address PIF should be blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Customer primary address by entering mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging21_DP1
Test Objective : Use a CA with a PIF of ADDR and correct the address, after EOD address PIF should be blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value change to blank.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging22
Test Objective : Use a CA with blank PP/PIF, remove city and state from PRM address, after EOD PIF should be ADDR (thought city/state req’d for USA?).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Address window from Customer record. Update the address details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging22_DP1
Test Objective : Use a CA with blank PP/PIF, remove city and state from PRM address, after EOD PIF should be ADDR (thought city/state req’d for USA?).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value change to ADDR.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging23
Test Objective : Use a CA with blank PP/PIF, change PRM to be a Canada address, after EOD PIF should be FORN.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Customer primary address by entering mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging23_DP1
Test Objective : Use a CA with blank PP/PIF, change PRM to be a Canada address, after EOD PIF should be FORN.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains unchanged and Ineligible flag code value change to FORN.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging24
Test Objective : Use a CA with Non-Blank PP/blank PIF, remove country from PRM address, after EOD PIF should be TADDR and PP now blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update basic information in Customer Address window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging24_DP1
Test Objective : Use a CA with Non-Blank PP/blank PIF, remove country from PRM address, after EOD PIF should be TADDR and PP now blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to BLANK and Ineligible flag code value change to TADDR.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging25
Test Objective : Use CA with blank PP/PIF and validate the address and no change in PP/PIF.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Customer primary address by entering mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging25_DP1
Test Objective : Use CA with blank PP/PIF and validate the address and no change in PP/PIF.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remain unchanged as blank and Ineligible flag code remain unchanged as blank.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging26
Test Objective : Use a CA with PIF of TADDR, change country to Canada, PP stays blank and PIF becomes FORN.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Customer primary address by entering mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging26_DP1
Test Objective : Use a CA with PIF of TADDR, change country to Canada, PP stays blank and PIF becomes FORN.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains blank and Ineligible flag code value change to FORN.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging27
Test Objective : Takes a customer thats an individual, not bypassed so in the population, no PP/PIF and a good CA Officer Rating <6, then change the rating to >6 and should see PIF of “RATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging27_DP1
Test Objective : Takes a customer thats an individual, not bypassed so in the population, no PP/PIF and a good CA Officer Rating <6, then change the rating to >6 and should see PIF of “RATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains blank and Ineligible flag code value change to RATE.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging28
Test Objective : Takes a customer thats NOT an individual, not bypassed so in the population, no PP/PIF and a good CA Officer Rating <7, then change the rating to >7 and should see PIF of “RATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging28_DP1
Test Objective : Takes a customer thats NOT an individual, not bypassed so in the population, no PP/PIF and a good CA Officer Rating <7, then change the rating to >7 and should see PIF of “RATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains blank and Ineligible flag code value change to RATE.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging29
Test Objective : Takes a customer thats an individual, non-blank PP and blank PIF and a good CA Officer Rating <6, then change the rating to >6 and should see PIF of “TRATE” after batch and blank PP.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging29_DP1
Test Objective : Takes a customer thats an individual, non-blank PP and blank PIF and a good CA Officer Rating <6, then change the rating to >6 and should see PIF of “TRATE” after batch and blank PP.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to blank and Ineligible flag code value change to TRATE.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging30
Test Objective : Takes a customer thats NOT an individual, non-blank PP and blank PIF and a good CA Officer Rating <7, then change the rating to >7 and should see PIF of “TRATE” after batch and blank PP.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging30_DP1
Test Objective : Takes a customer thats NOT an individual, non-blank PP and blank PIF and a good CA Officer Rating <7, then change the rating to >7 and should see PIF of “TRATE” after batch and blank PP.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to blank and Ineligible flag code change to TRATE.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging31
Test Objective : Takes a customer thats an individual, has PIF of “TRATE” (so has a bad CA Officer Rating >6), then change the rating to <6 and should see PIF of “RRATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging31_DP1
Test Objective : Takes a customer thats an individual, has PIF of “TRATE” (so has a bad CA Officer Rating >6), then change the rating to <6 and should see PIF of “RRATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains blank and Ineligible flag code value change to RRATE.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging32
Test Objective : Takes a customer thats an individual, has PIF of “RATE” (so has a bad CA Officer Rating >6), then change the rating to <6 and should see PIF blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging32_DP1
Test Objective : Takes a customer thats an individual, has PIF of “RATE” (so has a bad CA Officer Rating >6), then change the rating to <6 and should see PIF blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains <NONE> and Ineligible flag code change to <NONE>.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging33
Test Objective : This is validating that for customers which are individuals, if records not bypassed (so in JCFEDPLG) and has no PIF, then CA Risk Rating is <6.
#########################################################################################################
1. Verify for customers which are individuals, if records not bypassed and has no PIF, then CA Risk Rating is <6 
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging34
Test Objective : Takes a customer thats NOT an individual, has PIF of “TRATE” (so has a bad CA Officer Rating >7), then change the rating to <7 and should see PIF of “RRATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging34_DP1
Test Objective : Takes a customer thats NOT an individual, has PIF of “TRATE” (so has a bad CA Officer Rating >7), then change the rating to <7 and should see PIF of “RRATE” after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains <NONE> and Ineligible flag code change to RRATE.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging35
Test Objective : Takes a customer thats NOT an individual, has PIF of “RATE” (so has a bad CA Officer Rating >7), then change the rating to <7 and should see PIF blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Risk Information Details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging35_DP1
Test Objective : Takes a customer thats NOT an individual, has PIF of “RATE” (so has a bad CA Officer Rating >7), then change the rating to <7 and should see PIF blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains <NONE> and Ineligible flag code change to <NONE>.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging36
Test Objective : TC 36 is checking to make sure that if the CA passed the checks and is eligible, with no PIF, that if non-individual, the rating is 7 or higher.
#########################################################################################################
1. Verify CA passed the checks and is eligible, with no PIF, that if non-individual, the rating is 7 or higher.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging37
Test Objective : TC37 checks all the CA’s with PIF of ‘TMAT’ are less than 30 days from maturity.
#########################################################################################################
1. Verify all the CAs with PIF of TMAT are less than 30 days from maturity.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging38
Test Objective : Selects an eligible CA with no PP/PIF, changes the maturity date to 2 weeks from today and expect PIF of MAT after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window.
4. Update the Facility basic information and save the record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging38_DP1
Test Objective : Selects an eligible CA with no PP/PIF, changes the maturity date to 2 weeks from today and expect PIF of MAT after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains <NONE> and Ineligible flag code change to MAT.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging39
Test Objective : Selects a CA with a NON-Blank PP code, change the maturity date to 2 weeks from today and because this had a PP before, we now expect PIF of TMAT after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Facility basic information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging39_DP1
Test Objective : Selects a CA with a NON-Blank PP code, change the maturity date to 2 weeks from today and because this had a PP before, we now expect PIF of TMAT after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changes to <NONE> and Ineligible flag code change to TMAT.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging40
Test Objective : Selects a CA with a PIF of TMAT and extends the maturity date (via renewal) to be 3 months from system date, and then after batch the PIF should be RMAT.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility window and update the expiration date as number of days until maturity is greater than 60 days.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging40_DP1
Test Objective : Selects a CA with a PIF of TMAT and extends the maturity date (via renewal) to be 3 months from system date, and then after batch the PIF should be RMAT.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains <NONE> and Ineligible flag code value change to RMAT.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging41
Test Objective : Extend maturity date greater than 60 days expect change in PIF value
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window.
4. Update the expiration date as number of days until maturity is greater than 60 days and save the record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging40_DP1
Test Objective : Extend maturity date greater than 60 days expect change in PIF value
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value remains BLANK and Ineligible flag code value change to BLANK.
4. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
5. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging42
Test Objective : Verify CAs with blank PIF Value has maturity date greater than 30 days
#########################################################################################################
1. Verify CAs with blank PIF Value has maturity date greater than 30 days
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging43
Test Objective : Change Facility amount expect change in PIF value and Pledge pool value
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 2300.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging43_DP2
Test Objective : Change Facility amount expect change in PIF value and Pledge pool value
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to TAMT
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging44
Test Objective : Utilize RC with BLANK PP. Process 25k increase to CA Amount. Expect PIF/PP both blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 2300.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging44_DP2
Test Objective : Utilize RC with BLANK PP. Process 25k increase to CA Amount. Expect PIF/PP both blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to BLANK.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging45_DP2
Test Objective : Verify conditions are met for current values.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the loan and enter the transaction code as 3200.
9. Enter the transaction details on new Transaction screen.
10. Save and Submit the bundle. Login with Approver credentials and post the bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging45_DP2
Test Objective : Verify conditions are met for current values.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify the expected value in Pledge Pool field.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging46
Test Objective : Verify Pay down loans pledge pool value remains unchanged after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the loan and enter the transaction code as 3200.
9. Enter the transaction details on new Transaction screen.
10. Save and Submit the bundle. Login with Approver credentials and post the bundle.
11. Navigate to edit Loan window.
12. Update Loan Servicing Information Details and save the record.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging46_DP2
Test Objective : Verify Pay down loans pledge pool value remains unchanged after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify the expected value in Pledge Pool field.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging47_DP1
Test Objective : Select CA with PIF of TPAST, pay off P&I balances on loans to make current, and expect PIF to be RPAST after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the loan and enter the transaction code as 3200.
9. Enter the transaction details on new Transaction screen.
10. Save and Submit the bundle. Login with Approver credentials and post the bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging47_DP1
Test Objective : Select CA with PIF of TPAST, pay off P&I balances on loans to make current, and expect PIF to be RPAST after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify the expected value in ineligible code field value.
4. Logout from Servicing application.
5. Execute the sql query and verify the Ineligible flag code field value.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
7. Verifying expected Ineligible Flag Code value is reflected in the Database.


#########################################################################################################
Test Case Name : CL27FedPledging48_DP1
Test Objective : Select CA with PIF of PAST, pay off P&I balances on loans to make current, and expect PIF to be blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the loan and enter the transaction code as 3200.
9. Enter the transaction details on new Transaction screen.
10. Save and Submit the bundle. Login with Approver credentials and post the bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging48_DP2
Test Objective : Select CA with PIF of PAST, pay off P&I balances on loans to make current, and expect PIF to be blank after batch.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify the expected value in ineligible code field.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
7. Verifying expected Ineligible Flag Code value is reflected in the Database.


#########################################################################################################
Test Case Name : CL27FedPledging49
Test Objective : Bring loans to current and no longer past due.  Expect change in PIF Value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal borrower's information.
4. Select Submit for Processing option from the menu.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.
7. Login into ACBS Servicing application with valid user credentials.
8. Unbill the invoice and update the repayment schedule information with the date of the invoice that was unbilled.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging49_DP1
Test Objective : Verify that change in PIF Value when loans bring to past due status and expect change in PIF value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value is changed to <NONE> and Ineligible Flag code is changed to expected value.
4. Logout from Servicing application.
5. Verify that Pledge Pool and Ineligible Flag code values are reflected as expected in database.
6. Pledge Pool and Ineligible Flag code values are present in database as - 


#########################################################################################################
Test Case Name : CL27FedPledging50
Test Objective : Verify that change in PIF Value when loans bring to past due status and expect change in PIF value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal borrower's information.
4. Select Submit for Processing option from the menu.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.
7. Login into ACBS Servicing application with valid user credentials.
8. Unbill the invoice and update the repayment schedule information with the date of the invoice that was unbilled.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging50_DP1
Test Objective : Verify that change in PIF Value when loans bring to past due status and expect change in PIF value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value is changed to <NONE> and Ineligible Flag code is changed to expected value.
4. Logout from Servicing application.
5. Verify that Pledge Pool and Ineligible Flag code values are reflected as expected in database.
6. Pledge Pool and Ineligible Flag code values are present in database as - 


#########################################################################################################
Test Case Name : CL27FedPledging51
Test Objective : Check CA's with PIP as TPAST have no prin or interest past due more than 30 days.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging52
Test Objective : Check eligible CA's with blank PP/PIF have NO prin or interest past due more than 30 days.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging53
Test Objective : Verify CA with PIF of TSSPL have at least 1 loan with an ineligible SU or SS.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging54
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and blank Pledge Pool Value. Update service unit on one of the loans to be ineligible for fed pledging. After batch PIF should  = 'SSPL' and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Loan Servicing information details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging54_DP1
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and blank Pledge Pool Value. Update service unit on one of the loans to be ineligible for fed pledging. After batch PIF should  = 'SSPL' and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to SSPL.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging55
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and NON blank Pledge Pool Value. Update service unit on one of the loans to be ineligible for fed pledging. After batch PIF should  = 'TSSPL' and PP changed to blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Loan Servicing information details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging55_DP1
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and NON blank Pledge Pool Value. Update service unit on one of the loans to be ineligible for fed pledging. After batch PIF should  = 'TSSPL' and PP changed to blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code value changed to TSSPL.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging56
Test Objective : Utilize facility with TSSPL Pledge Ineligible Flag Value. Update service unit on ALL of the loans to be eligible for fed pledging. After batch PIF should = 'RSSPL'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Loan Servicing information details and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging56_DP1
Test Objective : Utilize facility with TSSPL Pledge Ineligible Flag Value. Update service unit on ALL of the loans to be eligible for fed pledging. After batch PIF should = 'RSSPL'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Ineligible flag code field value changed to RSSPL.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging57
Test Objective : Utilize facility with SSPL Pledge Ineligible Flag Value. Update service unit on ALL of the loans to be eligible for fed pledging. After batch PIF should be BLANK.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Customer Servicing information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging57_DP1
Test Objective : Utilize facility with SSPL Pledge Ineligible Flag Value. Update service unit on ALL of the loans to be eligible for fed pledging. After batch PIF should be BLANK.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Ineligible flag code field value changed to BLANK.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging58
Test Objective : Verify if PIF is blank and its a good CA that hasnt been bypassed, doesnt have any loans with an ineligible SU.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging60
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and blank Pledge Pool Value. Update service SECTION on one of the loans to be ineligible for fed pledging. After batch PIF should be SSPL and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Loan Servicing information and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging60_DP1
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and blank Pledge Pool Value. Update service SECTION on one of the loans to be ineligible for fed pledging. After batch PIF should be SSPL and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to SSPL.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging61
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and NON blank Pledge Pool Value. Update service SECTION on one of the loans to be ineligible for fed pledging. After batch PIF should  be TSSPL and PP changed to blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Update Loan Servicing informaiton and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging61_DP1
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and NON blank Pledge Pool Value. Update service SECTION on one of the loans to be ineligible for fed pledging. After batch PIF should  be TSSPL and PP changed to blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to TSSPL.
4. Logout from Servicing application.
5. Execute the sql query and verify the Pledge pool and Ineligible flag code values.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 
7. Verifying expected Pledge pool and Ineligible Flag Code values are reflected in the Database.


#########################################################################################################
Test Case Name : CL27FedPledging65
Test Objective : Utilize facility with blank PIP Value and blank PP Value. Enter advance transaction (3120) for amount to cause facility to be overdrawn. Create a bundle to enter transactions on the loan. After batch PIF should be OVD and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for the same loan for interest payment reversal and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging65_DP1
Test Objective : Utilize facility with blank PIP Value and blank PP Value. Enter advance transaction (3120) for amount to cause facility to be overdrawn. Create a bundle to enter transactions on the loan. After batch PIF should be OVD and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to OVD.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging66
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and NON blank Pledge Pool Value. Enter advance transaction (3120) for amount to cause facility to be overdrawn. Create a bundle to enter transactions on the loan. After batch PIF should be TOVD and PP changed to blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for the same loan for interest payment reversal and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging66_DP1
Test Objective : Utilize facility with blank Pledge Ineligible Flag Value and NON blank Pledge Pool Value. Enter advance transaction (3120) for amount to cause facility to be overdrawn. Create a bundle to enter transactions on the loan. After batch PIF should be TOVD and PP changed to blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to TOVD
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging67
Test Objective : Verify CAs with PIF as TOVD and blank PP are overdrawn
#########################################################################################################
1. Verify CAs with PIF as TOVD and blank PP are overdrawn
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging68
Test Objective : Utilize facility with TOVD PIP Value. Enter payment transaction (3100) for amount $100,000 to cause facility to be under drawn. After batch PIF should  be ROVD and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for the same loan for interest payment reversal and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging68_DP1
Test Objective : Utilize facility with TOVD PIP Value. Enter payment transaction (3100) for amount $100,000 to cause facility to be under drawn. After batch PIF should  be ROVD and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to ROVD.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging69
Test Objective : Utilize facility with OVD PIP Value. Enter payment transaction (3100) for amount $100,000 to cause facility to be under drawn. After batch PIF/PP should both be blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for the same loan for interest payment reversal and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging69_DP1
Test Objective : Utilize facility with OVD PIP Value. Enter payment transaction (3100) for amount $100,000 to cause facility to be under drawn. After batch PIF/PP should both be blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to Blank
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging70
Test Objective : Verify CAs with PIF as blank and non blank PP are not overdrawn
#########################################################################################################
1. Verify CAs with PIF as blank and non blank PP are not overdrawn
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging72
Test Objective : Utilize customer with RPAST PIP Value. Change facility amount (2300 Trans for 75k increase). After EOD runs verify PIF changed to TAMT,  PP is Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 2300.
5. Enter the transaction details on new Transaction screen.
6. Save and Submit the bundle. Login with Approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging72_DP1
Test Objective : Utilize customer with RPAST PIP Value. Change facility amount (2300 Trans for 75k increase). After EOD runs verify PIF changed to TAMT,  PP is Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to TAMT.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging72
Test Objective : Utilize customer with RMAT PIP. Input a collateral record that is ineligible for Fed Pledging. After EOD verify PIF changed to TEXC, PP is Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Collateral window. Update mandatory fields and save the record.
4. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging73_DP1
Test Objective : Utilize customer with RMAT PIP. Input a collateral record that is ineligible for Fed Pledging. After EOD verify PIF changed to TEXC, PP is Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to TEXC.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging73_DP1
Test Objective : Utilize customer with REXC Pledge Ineligible Flag Value. Change customer name. After EOD verify PIF changed to TNAME, PP is Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Select Customer name from the database.
4. Update Name1 field to 
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging74_DP1
Test Objective : Utilize customer with REXC Pledge Ineligible Flag Value. Change customer name. After EOD verify PIF changed to TNAME, PP is Blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify Pledge Pool value changed to Blank and Ineligible flag code changed to TNAME.
4. Logout from Servicing application.
5. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
6. Verify that Pledge Pool and Ineligible Flag code values are displayed as expected in DB as - 


#########################################################################################################
Test Case Name : CL27FedPledging75
Test Objective : Bring loans to current and no longer past due.  Expect change in  Value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal borrower's information.
4. Select Submit for Processing option from the menu.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.
7. Login into ACBS Servicing application with valid user credentials.
8. Unbill the invoice and update the repayment schedule information with the date of the invoice that was unbilled.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL27FedPledging75_DP1
Test Objective : Verify that change in PIF Value when loans bring to past due status and expect change in PIF value.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Pledge Pool value is changed to <NONE> and Ineligible Flag code is changed to expected value.
4. Logout from Servicing application.
5. Verify that Pledge Pool and Ineligible Flag code values are reflected as expected in database.
6. Pledge Pool and Ineligible Flag code values are present in database as - 


#########################################################################################################
Test Case Name : CL27FedPledging78
Test Objective : Check TEXC condition to ensure collateral exception.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging79
Test Objective : Check TNAIC condition to ensure NAICS exception.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging80
Test Objective : Check NAIC condition to ensure NAICS exception.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging81
Test Objective : Check TINSI condition to ensure insider exception.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging82
Test Objective : This check is to make sure the address has an issue (incomplete or not USA) when the PIF  is TADDR.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging83
Test Objective : Check TRATE condition for individual to ensure rating is 6 or greater
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL27FedPledging84
Test Objective : Check TRATE condition for non-individual to ensure rating is 7 or greater.
#########################################################################################################
1. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
2. SQL query execution completed! The value from the Database is: 


#########################################################################################################
Test Case Name : CL28DisplayRoundedRates01
Test Objective : Verify the ability to Utilize an existing SOFR with no rounding adjustments to test & verify the raw rates & then rounded rates are displayed correctly
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window (Right click on Loan and select Create New Bundle option. Provide Bundle details and click on Create Bundle button. Select Create -> Transaction in Bundle Manager window).
4. Select Loan and enter Transaction code as 3691. Select/enter other details in Transaction Account Selector window and navigate to new Transaction window.
5. Enter effective date as one month prior to system date, select (BASE AND SPREAD RATE) value from select new value drop down and other details.
6. Select 'Save and Create Another' menu item in New Transaction window.
7. Enter Transaction code as 3692. Select/enter other details and navigate to new Transaction window.
8. Enter effective date as One Month Prior to System Date, select (DOWN WARD) value from select new value drop down and other details.
9. Select 'Save and Create Another' menu item in New Transaction window.
10. Enter Transaction code as 3693. Select/enter other details and navigate to new Transaction window.
11. Enter effective date as One Month Prior to System Date, select (NEAREST 1/100TH) value from select new value Drop down and other details.
12. Select 'Save and Create Another' menu item in New Transaction window.
13. Enter Transaction code as 3610. Select/enter other details and navigate to new Transaction window.
14. Enter effective date as one month prior to system date, Enter new Base Rate value in Transaction Rate field and other details.
15. Select 'Save and Create Another' menu item in New Transaction window.
16. Enter Transaction code as 3630. Select/enter other details and navigate to new Transaction window.
17. Enter effective date as one month prior to system date, Enter new spread rate value in Transaction Rate field and other details.
18. Select 'Save and Create Another' menu item in New Transaction window.
19. Select Loan and enter Transaction code as 3615. Select other details in Transaction Account Selector window and navigate to new Transaction window.
20. Enter effective date as one week prior to system date, new Base Rate, Cost Rate and other details.
21. Save and Submit the bundle. Login with approver credentials and post the bundle.
22. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
23. Verify that Rounding Adjustment, Rounding Precision and Rounding Method field values are displayed as expected in Edit - Accrual Schedule Window| Accrual Modifiers Tab.
24. Close Accrual Schedule and Existing Accrual Schedules Windows.
25. Navigate to Loan History window. Verify that 3691, 3692, 3693, 3610, 3630  rounding changes are reflected as expected.
26. Navigate to Loan History window. Verify that 3615 rounding changes are reflected as expected.
27. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL28DisplayRoundedRates02
Test Objective : Utilize an existing ARS with no rounding adjustments to test & verify the raw rates & then rounded rates are displayed correctly
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window (Right click on Loan and select Create New Bundle option. Provide Bundle details and click on Create Bundle button. Select Create -> Transaction in Bundle Manager window).
4. Select Loan and enter Transaction code as 3691. Select/enter other details in Transaction Account Selector window and navigate to new Transaction window.
5. Enter effective date as one month prior to system date, select (BASE AND SPREAD RATE) value from select new value drop down and other details.
6. Select 'Save and Create Another' menu item in New Transaction window.
7. Enter Transaction code as 3692. Select/enter other details and navigate to new Transaction window.
8. Enter effective date as One Month Prior to System Date, select (DOWN WARD) value from select new value drop down and other details.
9. Select 'Save and Create Another' menu item in New Transaction window.
10. Enter Transaction code as 3693. Select/enter other details and navigate to new Transaction window.
11. Enter effective date as One Month Prior to System Date, select (NEAREST 1/100TH) value from select new value Drop down and other details.
12. Select 'Save and Create Another' menu item in New Transaction window.
13. Enter Transaction code as 3610. Select/enter other details and navigate to new Transaction window.
14. Enter effective date as one month prior to system date, Enter new Base Rate value in Transaction Rate field and other details.
15. Select 'Save and Create Another' menu item in New Transaction window.
16. Enter Transaction code as 3630. Select/enter other details and navigate to new Transaction window.
17. Enter effective date as one month prior to system date, Enter new spread rate value in Transaction Rate field and other details.
18. Select 'Save and Create Another' menu item in New Transaction window.
19. Select Loan and enter Transaction code as 3615. Select other details in Transaction Account Selector window and navigate to new Transaction window.
20. Enter effective date as one week prior to system date, new Base Rate, Cost Rate and other details.
21. Save and Submit the bundle. Login with approver credentials and post the bundle.
22. Navigate to existing Accrual Schedules window for a Loan and open an existing Accrual Schedule record.
23. Verify that Rounding Adjustment, Rounding Precision and Rounding Method field values are displayed as expected in Edit - Accrual Schedule Window| Accrual Modifiers Tab.
24. Close Accrual Schedule and Existing Accrual Schedules Windows.
25. Navigate to Loan History window. Verify that 3691, 3692, 3693, 3610, 3630  rounding changes are reflected as expected.
26. Navigate to Loan History window. Verify that 3615 rounding changes are reflected as expected.
27. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL28DisplayRoundedRates03
Test Objective : Verify the ability to process a ROLLOVER for an existing loan. Verify the raw rate and rounded rates are displayed correctly on the ACBS Loan Transaction History window, the Rate Summary window and the Transactions Details view.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction Account Selector window.
4. Select Loan and enter Transaction code as 3691. Select/enter other details in Transaction Account Selector window and navigate to new Transaction window.
5. Enter effective date as one month prior to system date, select (BASE AND SPREAD RATE) value from select new value drop down and other details.
6. Select 'Save and Create Another' menu item in New Transaction window.
7. Enter Transaction code as 3692. Select/enter other details and navigate to new Transaction window.
8. Enter effective date as one month prior to system date, select (DOWNWARD) value from select new value drop down and other details.
9. Select 'Save and Create Another' menu item in New Transaction window.
10. Enter Transaction code as 3693. Select/enter other details and navigate to new Transaction window.
11. Enter effective date as one month prior to system date, select (NEAREST 1/100TH) value from select new value drop down and other details.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Navigate to existing Accrual Schedules window and Open and existing Accural Schedule record.
14. Verify that Rounding Adjustment, Rounding Precision and Rounding Method field values are displayed as expected in Edit - Accrual Schedule Window| Accrual Modifiers Tab.
15. Navigate to Loan History window. Verify that 3691, 3692 and 3693 rounding changes are reflected correctly as expected.
16. Create a new Bundle and navigate to New Rollover Renewal window.
17. Select Loan and Enter the Rollover Renewal information.
18. Navigate to Rate Settings View and select/enter the Rate Setting Borrower's information.
19. Enter Rate information and select the Rate setting complete checkbox.
20. Save and Submit the bundle. Login with approver credentials and post the bundle.
21. Navigate to Loan History window. Verify that 3610 and 3630 rounding changes are reflected as expected.
22. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal01A
Test Objective : Verify the ability to process an interest payment reversal transaction for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that loan invoice radio buttons are displayed as expected.
5. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
6. Verify that Transaction Reversal bundle is posted successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal02A
Test Objective : Verify the ability to process an interest payment reversal transaction for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal03A
Test Objective : Verify the ability to process single interest payment transaction for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal04
Test Objective : Verify the ability to process principal payment reversal for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal05
Test Objective : Verify the ability to process reverse a single principal payment for loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal06A
Test Objective : Verify the ability to process reverse a facility fee payment.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window and then navigate to Transactional Reversal window from Facility History window. Enter transaction reversal information.
4. Select Submit for Processing option from the menu.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal07A
Test Objective : Verify the ability to process reverse a principal and interest payment for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the transaction amount for intrest paid
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
5. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
6. Verify that Transaction Reversal bundle is posted successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal08A
Test Objective : Verify the ability to process reverse an interest payment and fee payment(2710).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that correct transaction amount is displayed on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Create a transaction for Fee Reversal. Enter transaction reversal information.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal09A
Test Objective : Verify the ability to process reverse a fee payment and principal payment.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window and then navigate to Transactional Reversal window from Facility History window. Enter transaction reversal information.
4. Select Submit for Processing option from the menu.
5. Open the Bundle from the Bundle Viewer window and create a transaction for Principal reversal. Enter transaction details.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal10A
Test Objective : Verify the ability to process reverse 2 interest payment for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the transaction amount for intrest paid
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
5. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
6. Verify that Transaction Reversal bundle is posted successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal11A
Test Objective : Verify the ability to process reverse 2 interest payments from two different loans under a single facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that correct transaction amount is displayed on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Open the Bundle from the Bundle Viewer window. Create a transaction for other loan to reversal.
6. Select the Loan and enter the transaction code as 3110. Enter transaction details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal12A
Test Objective : Verify the ability to process an interest payment reversal transaction for a loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that transaction amount is displayed as expected on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal13A
Test Objective : Verify the ability to process reverse payment for an amount less than paid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Enter the transaction amount in Reverse Transaction pane which is less than the initial transaction amount. Enter transaction reversal information and submit for reversal.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal14A
Test Objective : Verify the ability to process reverse payment for an amount greater than paid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Enter the transaction amount in Reverse Transaction pane which is greater than the initial transaction amount.
5. Verify that system throws an Error message as - 'Reversal Transaction Amount Must Be Greater Than Zero But Less Than Or Equal To The Original Transaction Amount.'
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal16A
Test Objective : Verify the ability to process reverse payment using effective date as today.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that correct transaction amount is displayed on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Navigate to Fee Reversal Transaction window.
6. Enter the transaction details with a modified effective date on Transaction window.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal17A
Test Objective : Verify the ability to process reverse payment using a date prior to the date it was initially paid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Verify that correct transaction amount is displayed on Transaction Reversal window. Enter transaction reversal information and submit for reversal.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal20A
Test Objective : Verify the ability to process reverse an interest payment with the amount 0.00.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Enter Transaction reversal information with amount as .00 and Submit for reversal. Verify that system throws an error message like - 'Reversal Transaction Amount Must Be Greater Than Zero'
5. Verify that system throws an Error message as - 'Reversal Transaction Amount Must Be Greater Than Zero But Less Than Or Equal To The Original Transaction Amount.'
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal21A
Test Objective : Verify the ability to process reverse payment with no cash offset or pay ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Enter Transaction reversal details: Reason for reversal.
5. Verify that system throws an Error Message as - 'A Standing Instruction Or Cash Offset Is Required For Borrower'.
6. Close Loan Transaction Reversal window and Loan History window.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal22A
Test Objective : Verify the ability to approve bundle with the help of second person.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Enter Principal payment to be reversed.
5. Submit Transaction reversal for process.
6. Verify that Transaction Reversal bundle is posted successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal23A
Test Objective : Verify the amount defaults to the payment amount when reversing a transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window.
4. Enter the Reason for reversal detail on the Loan Transaction Reversal window.
5. Verify that reversal amount defaulted to the same amount as the original payment.
6. Submit Transaction reversal for process.
7. Verify that Transaction Reversal bundle is posted successfully.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal24A
Test Objective : Verify the effective date defaults to the effective date of the payment when reversing a transaction.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal information.
3. Verify that effective date defaults to the same date as the original payment was effective.
4. Select Submit for Processing option from the menu.
5. Verify that Transaction Reversal bundle is posted successfully.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal26A
Test Objective : Verify the ability to process reverse fee rebate for a facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility History window and then navigate to Transactional Reversal window from Facility History window. Enter transaction reversal information and submit for reversal.
4. Verify that Transaction Reversal bundle is posted successfully.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal27A
Test Objective : Verify the ability to process reverse a loan payment for non-performing loans.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal information.
4. Verify that system throws a warning message as - Loan is Non-Performing.
5. Close Loan History window.
6. Verify that Transaction Reversal bundle is posted successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal28A
Test Objective : Verify the ability to process reverse a loan payment with date as prior to the most recent invoice date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Enter transaction reversal information.
4. Verify that system throws a warning message as - 'The effective date of the reversal transaction may impact invoices that have already been created.'
5. Select Submit for Processing option from the menu.
6. Verify that Transaction Reversal bundle is posted successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL2eCLIPSFrontEndPaymentReversal35A
Test Objective : Verify Assignment payment reversals are not available for loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window and then navigate to Transactional Reversal window from Loan History window. Filter transaction history.
4. Verify that Assignment payment reversal transaction is not available.
5. Close Loan History window.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions01
Test Objective : Verify the Match Funding Indicator Checkbox and NL Number fields are displayed on the Loan accrual schedule record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan and open an existing Accrual Schedule record.
4. Verify that Match Funding label is displayed as expected.
5. Verify that New Loan Number field is displayed as expected.
6. Verify that Match Funding checkbox is initially unchecked.
7. Verify that New Loan Number field is displayed with blank as expected.
8. Select Match Funding checkbox and save the record.
9. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
10. Modify the New Loan Number field with less than 8 digits and save it.
11. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
12. Modify the New Loan Number field with 8 zeros and save it.
13. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
14. Modify the New Loan Number field with more than 8 digits and save it.
15. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
16. Modify the New Loan Number field with exactly 8 digits and save it.
17. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
18. Uncheck the Match Funding checkbox and save it.
19. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
20. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions02
Test Objective : Verify the error messages are displayed when MF is enabled and the NL Number field does not meet validation requirements.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan and select New icon.
4. Verify that Match Funding label is displayed as expected.
5. Verify that New Loan Number field is displayed as expected.
6. Verify that Match Funding checkbox is initially unchecked.
7. Verify that New Loan Number field is displayed as expected with blank.
8. Select the Match Funding Checkbox and save it.
9. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
10. Update the New Loan Number field with less than 8 digits and save it.
11. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
12. Update the New Loan Number field with 8 zeros and save it.
13. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
14. Update the New Loan Number field with more than 8 digits and save it.
15. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
16. Update the New Loan Number field with exactly 8 digits and save it.
17. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
18. Uncheck the Match Funding checkbox and save it.
19. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
20. Enter all mandatory field values in Accrual Schedule Basic information window.
21. Select the Match Funding checkbox and save it.
22. Approve the Accrual Schedule record.
23. Navigate to existing Accrual Schedule window for a Loan and open the existing Accrual Schedule record.
24. Select the Match Funding checkbox and save it.
25. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
26. Remove value from the New Loan Number field and save it.
27. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
28. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions03
Test Objective : Verify the ability to create a new loan and new Accrual Schedule record to verify the new MF Indicator and NL number field validation requirements.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Loan window.
4. Enter all mandatory field values in New Loan tab.
5. Select Servicing Tab. Enter all mandatory field values in Servicing tab.
6. Select Risk Tab. Enter all mandatory field values in Risk tab.
7. Select Regulatory Tab. Enter all mandatory field values in Regulatory tab.
8. Select Accrual Schedule Icon from left navigation pane. Enter all mandatory field values in Accrual Schedule Borrower's tab.
9. Navigate to new Accrual Schedule window by selecting New button.
10. Verify that Match Funding label is displayed as expected.
11. Verify that New Loan Number label is displayed as expected.
12. Verify that Match Funding checkbox is initially unchecked.
13. Verify that New Loan Number field is displayed as expected with blank.
14. Verify that Match Funding checkbox is checked
15. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
16. Modify the New Loan Number field with less than 8 digits and save it.
17. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
18. Modify the New Loan Number field with 8 zeros and save it.
19. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
20. Modify the New Loan Number field with exactly 8 digits and save it.
21. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
22. Enter all mandatory field values in New Loan Accrual Schedule Basic information tab and save it. Close Accrual Schedule window.
23. Select Repayment Schedule icon from left navigation pane. Select Borrower and select New button to navigate new Repayment Schedule window. Enter all mandatory field values in New Loan Repayment Schedule Basic information.
24. Select Billing tab. Enter all mandatory field values in New Loan Repayment Schedule Billing information and save it. Close Repayment Schedule window.
25. Save and Submit the bundle. Login with approver credentials and post the bundle.
26. Navigate to existing accrual schedule for a Loan and open an existing record. Select Match Funding check box and save it.
27. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
28. Remove the value from New Loan Number field and save it.
29. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
30. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions04
Test Objective : Verify the ability to create a Facility Pricing Option with an Interest Accrual Schedule Template to verify the new MF Indicator and NL Number fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Pricing Option for an existing Facility.
4. Navigate to existing Pricing Option window and select Pricing Option record. Select New icon to navigate new Accrual Schedule window.
5. Verify that Match Funding label is displayed as expected.
6. Verify that New Loan Number field is displayed as expected.
7. Verify that Match Funding checkbox is initially unchecked.
8. Verify that New Loan Number field is displayed as expected with blank data.
9. Select the Match Funding checkbox and save it.
10. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
11. Update the New Loan Number field with less than 8 digits and save it.
12. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
13. Update the New Loan Number field with 8 zeros and save it.
14. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
15. Update the New Loan Number field with more than 8 digits and save it.
16. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
17. Update the New Loan Number field with exactly 8 digits and save it.
18. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
19. Uncheck the Match Funding checkbox and save it.
20. Click the Quick Save button.
21. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
22. Enter all mandatory field values in the Accrual Schedule window.
23. Check the Match Funding checkbox and save it. Close Accrual Schedule window.
24. Navigate to existing Pricing Option window for a Facility. Select and open the existing Accrual Schedule record.
25. Uncheck the Match Funding checkbox and save it.
26. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
27. Remove the value from New Loan Number field and save it.
28. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
29. Enter the Cost of Fund value as '0' and save it.
30. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions05
Test Objective : Verify the new MF Indicator and NL Number fields are displayed on an existing Interest Accrual Schedule Template for a Facility Pricing Option.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing Option window and open the existing Accrual Schedule record.
4. Verify that Match Funding label is displayed as expected.
5. Verify that New Loan Number field is displayed as expected.
6. Verify that Match Funding checkbox is initially unchecked and New Loan field is displayed with blank.
7. Select the Match Funding checkbox and save it.
8. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
9. Update the New Loan Number field with less than 8 digits and Save it.
10. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
11. Update the New Loan Number field with 8 zeros and save it.
12. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
13. Update the New Loan Number field with more than 8 digits and save it.
14. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
15. Update the New Loan Number field with exactly 8 digits and save it.
16. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
17. Update the Base Rate, Spread Rate and Cost of Fund Rate fields values in Accrual Schedule window. Save the details.
18. Navigate to existing Pricing Options window for a Facility and open the existing record.
19. Uncheck the Match Funding checkbox and save it.
20. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
21. Remove the value from New loan Number field and save it.
22. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
23. Remove the value from the Cost of Fund Rate field and save it.
24. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions06
Test Objective : Verify the ability to create a Global Pricing Option with an Interest Accrual Schedule Template to verify the new MF Indicator and NL Number fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Global Pricing Option by entering all mandatory field values.
4. Navigate to new Accrual Schedule window from Global Pricing Option window.
5. Verify that Match Funding label is displayed as expected.
6. Verify that New Loan Number field is displayed as expected.
7. Verify that Match Funding checbox is initially unchecked and New Loan Number field is displayed as blank.
8. Select the Match Funding checkbox and save it.
9. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
10. Update the New Loan Number field with less than 8 digits and save it.
11. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
12. Update the New Loan Number field with 8 zeros and save it.
13. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
14. Update the New Loan Number field with more than 8 digits and save it.
15. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
16. Update the New Loan Number field with exactly 8 digits and save it.
17. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
18. Enter all mandatory field values in the Accrual Schedule window. Save the details.
19. Uncheck the Match Funding checkbox and click on quick save button.
20. Verify the error message as - Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator.
21. Remove the new loan number value from the field and click on quick save button.
22. Verify the error message as - Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator.
23. Set the Cost of fund field to blank value and click on quick save button.
24. Verify the error message as - Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator.
25. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions07
Test Objective : Verify the ability to modify an existing Interest Accrual Schedule template for an existing Global Pricing Option.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Pricing Options window and open the existing Accrual Schedule record.
3. Verify that Match Funding label is displayed as expected.
4. Verify that New Loan Number field is displayed as expected.
5. Verify that Match Funding checkbox is initially unchecked and New Loan Number field is displayed with blank.
6. Select the Match Funding checkbox and save it.
7. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
8. Update the New Loan Number field with less than 8 digits and save it.
9. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
10. Update the New Loan Number field with 8 zeros and save it.
11. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
12. Update the New Loan Number field with more than 8 digits and save it.
13. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
14. Update the New Loan Number field with exactly 8 digits and save it.
15. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
16. Update the Cost of Fund, Base Rate and Spread Rate fields in Accrual Schedule window. Save the changes.
17. Navigate to existing Accrual Schedule window from existing Pricing options window.
18. Uncheck the Match Funding checkbox and save it.
19. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
20. Remove the value from the New Loan Number field and save it.
21. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
22. Update the Cost of Fund with '0' and save it.
23. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions08
Test Objective : Verify the ability to create a new Interest Accrual Schedule template via new loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Loan window.
4. Enter all mandatory field values in New Loan tab.
5. Select Servicing Tab. Enter all mandatory field values in Servicing tab.
6. Select Risk Tab. Enter all mandatory field values in Risk tab.
7. Select Regulatory Tab. Enter all mandatory field values in Regulatory tab.
8. Select Accrual Schedule icon from left navigation pane. Enter all mandatory field values in New Accrual Schedule Borrower's tab.
9. Navigate to new Accrual Schedule window by selecting New button.
10. Verify that Match Funding label is displayed as expected.
11. Verify that New Loan Number field is displayed as expected.
12. Verify that Match Funding checkbox is initially unchecked and New Loan Number field is displayed with blank.
13. Select the Match Funding checkbox and save it.
14. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
15. Update the New Loan Number field with less than 8 digits and save it.
16. Verify that system throws an error message - 'Error-NL Number Must Be a Valid 8-Digit Number'.
17. Update the New Loan Number field with more than 8 digits and save it.
18. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
19. Update the New Loan Number field with more than 8 digits and save it.
20. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Required When Match Funding Indicator Is Enabled'.
21. Enter the Accrual Schedule Basic information. Save the details. Close Accrual Schedule window.
22. Select Repayment Schedule icon from left navigation pane. Enter Repayment Schedule Borrowers information. Navigate to new Repayment Schedule window and enter all mandatory information.
23. Select Billing Tab. Enter Repayment Schedule Billing information. Save the details.
24. Save and Submit the bundle. Login with approver credentials and post the bundle.
25. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
26. Uncheck the Match Funding checkbox and save it.
27. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
28. Remove the New Loan Number field value and save it.
29. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
30. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions09
Test Objective : Verify the ability to create a backdated loan to test new EOD job step that will auto-trigger Transaction Code (TC) 3700 during EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the Loan and enter the transaction code as 3700.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Navigate to existing Accrual Schedule window for a Loan.
10. Open the existing Accrual Schedule record.
11. Upate the New Loan Number field in the Accrual Schedule window.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions09_DP2
Test Objective : Verify the ability to create a backdated loan to test new EOD job step that will auto-trigger Transaction Code (TC) 3700 during EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window for an existing Loan.
4. Verify that Transaction '3700' is displayed as expected.
5. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
6. Verify that Cost of Fund Rate value is reset to zero.
7. Verify that New Loan Number field value is displayed as blank.
8. Verify that Match Funding checkbox status is displayed as expected with Unchecked.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions10
Test Objective : Verify when loan's accrual status is manually changed to Non-Performing, the system will not automatically process a TC 3700 (CHG COST/FNDS RATE) during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter the New Loan tab details.
5. Select Servicing Tab. Enter the Servicing tab details.
6. Select Risk Tab. Enter the Risk tab details.
7. Select Regulatory Tab. Enter the Regulatory tab details.
8. Select Accrual Schedule icon from left navigation pane. Enter the Accrual Schedule Borrower's details.
9. Navigate to new Accrual Schedule window.
10. Enter the Accrual Schedule Basic information. Save the details. Close Accrual Schedule window.
11. Select Repayment Schedule icon from left navigation pane. Enter the Repayment Schedule Borrowers details.
12. Navigate to new Repayment Schedule window and enter the Repayment Schedule Basic tab details.
13. Select the Billing Tab. Enter the Repayment Schedule Billing tab details. Save the details.
14. Save and Submit the bundle. Login with approver credentials and post the bundle.
15. Create a new Bundle and navigate to new Transaction window.
16. Select the Loan and enter the transaction code as 3700.
17. Enter the transaction details on new Transaction window.
18. Save and Submit the bundle. Login with approver credentials and post the bundle.
19. Navigate to existing Accrual Schedule window for a Loan.
20. Open the existing Accrual Schedule record.
21. Update the New Loan Number field and save the changes.
22. Create a new Bundle and navigate to new Transaction window.
23. Select the Loan and enter the transaction code as 3700.
24. Enter the transaction details on new Transaction window.
25. Save and Submit the bundle. Login with approver credentials and post the bundle.
26. Navigate to Loan History window.
27. Verify that Transaction '3700' is displayed as expected in Transaction History.
28. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
29. Uncheck the Match Funding checkbox.
30. Remove the New Loan Number field value.
31. Verify that New Loan Number field is displayed as expected with blank.
32. Save the record and approve the two touch record.
33. Create a new Bundle and navigate to Accounting Method Change window for a Loan. Enter all mandatory field values.
34. Save and Submit the bundle. Login with approver credentials and post the bundle.
35. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions10_DP2
Test Objective : Verify when loan's accrual status is manually changed to Non-Performing, the system will not automatically process a TC 3700 (CHG COST/FNDS RATE) during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window.
4. Verify that Transaction '3700' is displayed as expected.
5. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
6. Verify that Cost of Fund Rate value is displayed as expected with '0'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions11
Test Objective : Verify the ability to process a transaction 3700 (CHG COST/FNDS RATE) to verify COF, MF Indicator and NL Number fields adhere to system validations.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter transaction code as 3700.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions11_DP1
Test Objective : Verify the ability to process a transaction 3700 (CHG COST/FNDS RATE) to verify COF, MF Indicator and NL Number fields adhere to system validations.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan and open the existing Accrual Schedule record.
4. Verify that Cost of Fund Rate value is displayed as expected with zero.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions12
Test Objective : Verify the system automatically processes a 3700 transaction and the COF rate resets to "0" after a partial principal payment is processed prior to the loan maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Create a new Bundle and navigate to new Transaction window for a Loan.
6. Select the Loan and enter the transaction code as 3700.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Navigate to existing Accrual Schedule window for a Loan.
10. Open the existing Accrual Schedule record.
11. Update the New Loan Number value in the Accrual Schedule window.
12. Create a new Bundle and navigate to new Transaction window for a Loan.
13. Select the Loan and enter the transaction code as 3100.
14. Enter Transaction details with amount as more than half of the Loan amount.
15. Save and Submit the bundle. Login with approver credentials and post the bundle.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions12_DP2
Test Objective : Verify the system automatically processes a 3700 transaction and the COF rate resets to "0" after a partial principal payment is processed prior to the loan maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window.
4. Verify that transaction '3700' is displayed as expected in Transaction History.
5. Navigate to existing Accrual Schedule window for a Loan.
6. Select the existing Accrual Schedule record and Open.
7. Verify that Cost of Fund Rate value is displayed as expected with zero.
8. Verify that New Loan Number value is displayed as expected with blank.
9. Verify that Match Funding checkbox status is displayed as expected with unchecked.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions13
Test Objective : Verify the ability to process a partial principal payment on the loan's maturity date to verify warning messages populate and all of the new SS fields and validations are met.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter New Loan tab information.
5. Select Servicing Tab. Enter Servicing tab information.
6. Select the Risk Tab. Enter Risk tab information.
7. Select the Regulatory Tab. Enter Regulatory tab information.
8. Select Accrual Schedule icon from left navigation pane. Enter Accrual Schedule Borrower's information.
9. Navigate to new Accrual Schedule window.
10. Enter Accrual Schedule Basic information. Save the details.
11. Select Repayment Schedule icon from left navigation pane. Enter Repayment Schedule Borrower's information.
12. Navigate to Repayment Schedule window.
13. Enter Repayment Schedule Basic information.
14. Select Billing tab. Enter Repayment Schedule Billing information. Save the details.
15. Save and Submit the bundle. Login with approver credentials and post the bundle.
16. Create a new Bundle and navigate to new Transaction window for a Loan.
17. Select the Loan and enter the transaction code as 3700.
18. Enter the transaction details on new Transaction window.
19. Save and Submit the bundle. Login with approver credentials and post the bundle.
20. Navigate to existing Accrual Schedule window for a Loan.
21. Open the existing Accrual Schedule record.
22. Update the New Loan Number value in the Accrual Schedule window.
23. Create a new Bundle and navigate to new Transaction window for a Loan.
24. Select the Loan and enter the transaction code as 3100.
25. Enter the transaction details on new Transaction window.
26. Save and Submit the bundle. Login with approver credentials and post the bundle.
27. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions13_DP2
Test Objective : Verify the ability to process a partial principal payment on the loan's maturity date to verify warning messages populate and all of the new SS fields and validations are met.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window.
4. Verify that Transaction record 3700 is displayed as expected.
5. Verify that Accounting Method is changed to non-performing.
6. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
7. Verify that Cost of Fund value is reset to zero.
8. Verify that New Loan Number value is displayed as expected with blank.
9. Verify that Match Funding checkbox is displayed as expected with unchecked.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions14
Test Objective : Verify the Process a Loan Disbursement prior to the loan's maturity date to verify warning messages populate and all of the new SS fields and validations are met.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Create a new Bundle and navigate to new Transacion window.
6. Select the Loan and enter the transaction code as 3700.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Navigate to existing Accrual Schedule window for a Loan.
10. Open the existing Accrual Schedule record.
11. Update the New Loan Number value in the Accrual Schedule window.
12. Logout from Servicing application.
13. Login into the ACBS Servicing application with Approver credentials.
14. Create a new Bundle and navigate to new Transaction window.
15. Select the Loan and enter the transaction code as 3120.
16. Enter the Transaction details on new Transaction window.
17. Save and Submit the bundle. Login with approver credentials and post the bundle.
18. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions14_DP2
Test Objective : Verify the ability to process a Loan Disbursement prior to the loan's maturity date to verify warning messages populate and all of the new SS fields and validations are met.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window.
4. Verify that Transaction record 3700 is displayed as expected.
5. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
6. Verify that Cost of Fund Rate value is displayed as expected with zero.
7. Verify that New Loan Number value is displayed as expected with blank.
8. Verify that Match Funding checkbox is displayed as expected with unchecked.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions15
Test Objective : Verify the ability to process a Loan Disbursement on the loan's maturity date to verify warning messages populate and all of the new SS fields and validations are met.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the Loan and enter the transaction code as 3700.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Navigate to existing Accrual Schedule window for a Loan.
10. Open the existing Accrual Schedule record.
11. Update the New Loan Number value in the Accrual Schedule window.
12. Logout from Servicing application.
13. Login into the ACBS Servicing application with Approver credentials.
14. Create a new Bundle and navigate to new Transaction window.
15. Select the Loan and enter the transaction code as 3120.
16. Enter the transaction details on new Transaction window.
17. Save and Submit the bundle. Login with approver credentials and post the bundle.
18. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions15_DP2
Test Objective : Verify the ability to process a Loan Disbursement prior to the loan's maturity date to verify warning messages populate and all of the new SS fields and validations are met.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window.
4. Verify that Transaction record 3700 is displayed as expected.
5. Navigate to existing Accrual Schedule window for a Loan.
6. Open the existing Accrual Schedule record.
7. Verify that Cost of Fund Rate value is displayed as expected with zero.
8. Verify that New Loan Number value is displayed as expected with blank.
9. Verify that Match Funding checkbox is displayed as expected with unchecked.
10. Open the existing Accrual Schedule record. Validate Match Funding checkbox and verify validation error message.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions16
Test Objective : Verify the ability to process a transaction 3751 (CHANGE BASE RATE) and verify the COF Rate was automatically updated to the Base Rate after EOD batch run.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Bundle and navigate to new Transaction window.
3. Select the Loan and enter the transaction code as 3751.
4. Enter the transaction details on new Transaction window.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions16_DP1
Test Objective : Verify the ability to process a transaction 3751 (CHANGE BASE RATE) and verify the COF Rate was automatically updated to the Base Rate after EOD batch run.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
3. Verify that Cost of Fund Rate value is displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions17
Test Objective : Verify the ability to process a transaction 3750 INTEREST RATE ROLLVR and verify the COF Rate was automatically updated to the Base Rate after EOD batch run.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Bundle and navigate to new Transaction window.
3. Select the Loan and enter the transaction code as 3750.
4. Enter the transaction details on new Transaction window.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions17_DP1
Test Objective : Verify the ability to process a transaction 3750 INTEREST RATE ROLLVR and verify the COF Rate was automatically updated to the Base Rate after EOD batch run.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Accrual Schedule window for a Loan and open the existing Accrual Schedule record.
3. Verify that Cost of Fund Rate value is same as Base Rate.
4. Navigate to Loan History window.
5. Verify that Transaction record 3750 is displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions18
Test Objective : Verify the ability to process a transaction 3615 CHG BASE & COST RATE and verify the COF Rate was automatically updated to the Base Rate after EOD Batch Run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3615.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions18_DP1
Test Objective : Verify the ability to process a transaction 3615 CHG BASE & COST RATE and verify the COF Rate was automatically updated to the Base Rate after EOD Batch Run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan and open existing Accrual Schedule record.
4. Verify that Cost of Fund Rate value is displayed as expected.
5. Navigate to Loan History window.
6. Verify that Transaction record 3615 is displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions19
Test Objective : Verify the ability to process a transaction 3610 CHG BASE RATE and verify the COF Rate was automatically updated to the Base Rate after EOD Batch Run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3610.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions19_DP1
Test Objective : Verify the ability to process a TC 3610 CHG BASE RATE and verify the COF Rate was automatically updated to the Base Rate after EOD Batch Run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
4. Verify that Cost of Fund Rate value is displayed as expected.
5. Navigate to Loan History window.
6. Verify that Transaction record 3610 is displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions20
Test Objective : Verify a TC 3900 PRIME/INDEX CHANGE is auto created after EOD when the Change Timing field (on the accrual schedule) is updated to "On Anniversary" and COF Rate = Current Base Rate.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
3. Change the Rate index on existing Accrual Schedule.
4. Click on the quick save button.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions20_DP1
Test Objective : Verify a TC 3900 PRIME/INDEX CHANGE is auto created after EOD when the Change Timing field (on the accrual schedule) is updated to "On Anniversary" and COF Rate = Current Base Rate.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to Loan History window.
3. Verify that Transaction record 3900 is displayed as expected.
4. Navigate to existing Accrual Schedule window for a Loan.
5. Open the Existing Accrual Schedule record.
6. Verify that Cost of Fund Rate value is displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions21
Test Objective : Verify Field Logging at Loan level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window. Select the existing Accrual Schedule record and click on View icon.
4. Navigate to Field Change History.
5. Verify that Match Funding Indicator value is reflected as expected in field logging.
6. Verify that New Loan Number value is reflected as expected in field logging.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions22
Test Objective : Verify the error messages display when the Match Funding Indicator box is checked (Y) on a non-performing loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
4. Select the Match Funding checkbox and Save it.
5. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
6. Enter valid New Loan Number and Save it.
7. Verify that system throws an error message - 'Error-NL Number And Cost Of Funds Rate Are Not Required When Match Funding Indicator Is Not Enabled'.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions23
Test Objective : Verify the MF Indicator remains checked (Y) when a loan reaches its maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan tab information.
5. Select Servicing Tab. Enter Servicing tab information.
6. Select Risk Tab. Enter Risk tab information.
7. Select Regulatory Tab. Enter Regulatory tab information.
8. Select Accrual Schedule icon from left navigation pane. Enter Accrual Schedule Borrower's information.
9. Navigate to new Accrual Schedule window.
10. Select Match Funding checkbox.
11. Update the New Loan Number field value.
12. Enter Accrual Schedule Basic information. Save the details.
13. Select Repayment Schedule icon from left navigation pane. Enter Repayment Schedule Borrower's information.
14. Navigate to new Repayment Schedule window and enter Repayment Schedule Basic information.
15. Select Billing tab enter Repayment Schedule Billing information. Save the details.
16. Save and Submit the bundle. Login with approver credentials and post the bundle.
17. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions23_DP1
Test Objective : Verify the MF Indicator remains checked (Y) when a loan reaches its maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window.
4. Verify that Transaction record 3700 is displayed as expected.
5. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
6. Verify that Cost of Fund Rate value is displayed as expected with zero.
7. Verify that New Loan Number value is displayed as expected with blank.
8. Verify that Match Funding checkbox is checked.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions24
Test Objective : Verify when a loan reaches maturity the MF Indicator does not change and still equals "Y" (MF Indicator = Y/Change Timing = L) after an EOD is run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Loan window.
4. Enter New Loan tab information.
5. Select Servicing Tab. Enter Servicing tab information.
6. Select Risk Tab. Enter Risk tab information.
7. Select Regulatory Tab. Enter Regulatory tab information.
8. Select Accrual Schedule icon from left navigation pane. Enter Accrual Schedule Borrower's information.
9. Navigate to new Accrual Schedule window.
10. Select Match Funding checkbox.
11. Update the New Loan Number field.
12. Enter the Accrual Schedule Basic information. Save the details.
13. Select Repayment Schedule icon from left navigation pane. Enter Repayment Schedule Borrower's information.
14. Navigate to new Repayment Schedule window and enter Repayment Schedule Basic information.
15. Select Billing Tab. Enter Repayment Schedule Billing information. Save the details.
16. Save and Submit the bundle. Login with approver credentials and post the bundle.
17. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions24_DP1
Test Objective : Verify when a loan reaches maturity the MF Indicator does not change and still equals "Y" (MF Indicator = Y/Change Timing = L) after an EOD is run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
4. Verify that Cost of Fund Rate value is displayed as expected with zero.
5. Verify that New Loan Number value is displayed as expected with blank.
6. Verify that Match Funding checkbox is checked.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions25
Test Objective : Verify when a loan reaches maturity the MF Indicator does not change and still equals "Y" (MF Indicator = Y/Change Timing  = T) after an EOD is run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter New Loan tab information.
5. Select Servicing Tab. Enter Servicing tab information.
6. Select Risk Tab. Enter Risk tab information.
7. Select Regulatory Tab. Enter Regulatory tab information.
8. Select Accrual Schedule icon from left navigation pane. Enter Accrual Schedule Borrower's information.
9. Navigate to new Accrual Schedule window.
10. Verify the Match Funding checkbox is checked.
11. Update the New Loan Number field.
12. Enter Accrual Schedule Basic information. Save the details.
13. Select Repayment Schedule icon from left navigation pane. Enter the Repayment Schedule Borrower's information.
14. Navigate to new Repayment Schedule window. Enter the Repayment Schedule Basic information.
15. Select Billing Tab. Enter the Loan Repayment Schedule Billing information. Save the details.
16. Save and Submit the bundle. Login with approver credentials and post the bundle.
17. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL30PopulateCostofFundsTransactions25_DP1
Test Objective : Verify when a loan reaches maturity the MF Indicator does not change and still equals "Y" (MF Indicator = Y/Change Timing  = T) after an EOD is run.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan and open an existing accrual schedule record.
4. Verify that Cost of Fund Rate value is displayed as expected with zero.
5. Verify that New Loan Number value is displayed as expected with blank.
6. Verify that Match Funding checkbox is checked as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies01
Test Objective : Verify new collateral fields exists in 8.0 on the customer level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer and select New icon.
4. Verify that Effective Date field value is displayed as expected with (0/00/00).
5. Modify Additional Information in Collateral window. Save the record.
6. Verify that updated Collateral Additional Information field values are displayed as expected.
7. Select Additional Description icon and Try to enter more than 60 characters/digits for all Description fields.
8. Verify that all Collateral Description fields are accepted only 60 characters/digits length.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies02
Test Objective : Verify new collateral fields exist in 8.0 on the facility level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Facility and select New icon.
4. Verify that Effective Date field value is displayed as expected with (0/00/00).
5. Modify Additional Information in Collateral window. Save the changes.
6. Verify that updated Collateral Additional Information field values are displayed as expected.
7. Select Additional Description icon and Try to enter more than 60 characters/digits for all Description fields.
8. Verify that all Collateral Description fields are accepted only 60 characters/digits length.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies03
Test Objective : Verify new collateral fields exist in 8.0 on the loan level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Loan and select New icon.
4. Verify that Effective Date field value is displayed as expected with (0/00/00).
5. Modify Additional Information in Collateral window. Save the changes.
6. Verify that updated Collateral Additional Information field values are displayed as expected.
7. Select Additional Description icon and Try to enter more than 60 characters/digits for all Description fields.
8. Verify that all Collateral Description fields are accepted only 60 characters/digits length.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies04
Test Objective : Verify new fields in field logging for a Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and click on View icon. Navigate to Field Change History window from View Collateral window.
4. Verify that all fields are displayed as expected in Field Change History window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies05
Test Objective : Verify new collateral fields for a Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral record for a Customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies06
Test Objective : Verify new Real Estate collateral fields/field defaults using a futured dated maturity date and (LA) state code.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Real Estate Collateral for a Customer by entering Maturity Date as future date, State Code as LA(LOUSIANA) and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies07
Test Objective : Verify maturity date and state code (LA) fields are required fields. Verify 'Hard Stops' when left blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Must Be Greater Than Processing Date) when Maturity Date is entered less than the System Processing date while creating the Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies08
Test Objective : Verify Real Estate Collateral records when the maturity date is blank and specific state code (LA) is used.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Is Required) when Maturity Date entered as blank while creating the Real Estate Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies09
Test Objective : Verify Real Estate Collateral records when the maturity date is blank and specific state code (OH) is used.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Is Required) when Maturity Date entered as blank and State Code as 'OHIO' while creating the Real Estate Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies10
Test Objective : Verify the Vehicle title Collateral records for the future dated maturity date and a specific state code (AZ). Verify 'Hard Stops' when left blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Vehicle Title Collateral for a Customer by entering Maturity Date as future date, State Code as 'Arizona' and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies11
Test Objective : Verify the Vehicle title Collateral records when the maturity date isn't populated and a specific state code (CO). Verify 'Hard Stops' when left blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Is Required) when Maturity Date entered as blank while creating the Vehicle Title Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies12
Test Objective : Verify the Vehicle Title Collateral records using a back dated maturity sate isn't populated and a specific State code (KY).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Must Be Greater Than Processing Date) when Maturity Date entered as Back date (Less than urrent System date) while creating the Vehicle Title Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies13
Test Objective : Verify the Vehicle title Collateral records using a backdated maturity date isn't populated and a specific State code (NY). Verify 'Hard Stops' when left blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Vehicle Title Collateral by entering Maturity Date as blank, State Code as 'NEW YORK' and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies14
Test Objective : Verify the exception box defaults to checked when using a future dated maturity date and a collateral type starts with 'C'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral for a Customer by entering Maturity Date as future date, Colletral Type starts with 'C' and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies15
Test Objective : Verify Collateral exceptions to confirm checkbox defaults to checked when Collateral Type selected begins with 'E' maturity date is backdated.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Must Be Greater Than Processing Date) when Maturity Date entered as back date and Collateral Type starts with 'E' while creating the Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies16
Test Objective : Verify checkbox defaults to checked when Collateral Type selected begins with 'C or E' and the maturity date is blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Maturity Date Is Required) when Maturity Date entered as blank and Collateral Type starts with 'E' while creating the Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies17
Test Objective : Verify checkbox defaults to unchecked when Collateral Type selected does not begin with 'C' or 'E' and a blank maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral for a Customer by entering Maturity Date as blank, Collateral Type as other than 'C and E' and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies18
Test Objective : Verify the error message when maturity date is back dated, Possession Type is left as blank and the Collateral Type selected begins with 'M'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected error message (Error-Possession Code Is Required) when Possession Code entered as blank while creating the Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies19
Test Objective : Verify the Collateral record is saved when maturity date is future dated, Possession type is selected and the Collateral Type Selected begins with 'M'
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create new Collateral for a Customer by entering Maturity Date as greater than Processing date, Collateral Type starts with 'M' and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies21
Test Objective : Verify the Collateral record is saved when the maturity date is blank, Possession Type is blank and the Collateral Type does not begin with 'M'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that system throws an expected exception (Error-Maturity Date Is Required) and saves when Maturity Date entered as blank, Possession Type entered as blank and Collateral Type does not start with 'M' while creating the Collateral for a Customer.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies22
Test Objective : Verify the ability to update an exisitng collateral record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Modify the Collateral information and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies23
Test Objective : Verify that Collateral ID is available as a search option.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search the Collateral record by usng Collateral ID as a search option in Loan Servicing Queue window. Verify that search returns the record/s that are related to search option (Collateral ID).
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies24
Test Objective : Verify non-editable fields are using the Reference Number.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Collateral window for a Customer and open the existing Collateral record.
4. Note down the Reference number field value.
5. Try to update Reference number field value by entering new data.
6. Verify that Reference number field is not editable and not accepted new value.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies25
Test Objective : Verify released and unreleased views in Collateral window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Collateral window for a Customer. Verify that Expand, Released images/icons are displayed and functioning as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL32CollateralDataElementDependencies26
Test Objective : Verify multiple release functionality in Collateral window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral record for an existing Customer by entering all mandatory field values.
4. Create another Collateral record for a Customer by entering all mandatory field values.
5. Navigate to the existing Collateral window for a Customer. Verify that Display all records image/icon is displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator01
Test Objective : Verify the ability to create a New Loan with a maturity date 99/99/99 and Demandable checkbox.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle for a facility and navigate to new Loan window.
4. Select Regulatory icon. Verify that FRB is flow down from Facility and displayed as expected.
5. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Select Regulatory icon. Verify that Demandable checkbox is displayed as expected with selected.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator02
Test Objective : Verify the ability to create a new Loan with maturity date not equal to 99/99/99 and demand checkbox not populated and Create Loan with Split Balance Accrual schedule.(This script is updated as per Loan Regression Test case no
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Select Regulatory icon. Verify that FRB is flow down from Facility and displayed as expected.
5. Select Regulatory icon. Verify that Demandable checkbox is displayed as expected with unchecked.
6. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
7. adding accrual schedule with Schedule ID INT2
8. Select the Rate Setting Complete checkbox.
9. Enter all mandatory field values in Cash Item window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator03
Test Objective : Verify the Demandable flag will auto-populate when loan's maturity date is changed to 99/99/99.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for an existing Loan.
4. Select the existing Accrual Schedule record. Select View icon. Note down Next Effective Date value.
5. Navigate to edit Loan window and update Loan Maturity Date as 99/99/99.
6. Save the Loan details and approve the two touch record.
7. Navigate to view Loan window for a Loan. Select Resgulatory icon.
8. Verify that Demandable checkbox is populated as expected with selected.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator04
Test Objective : Verify the Demandable flag will automatically uncheck when loan's maturity date is changed to other than 99/99/99.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Navigate to edit Loan window and update Maturity Date value other than 99/99/99. Save the details. Approve two touch record.
6. Navigate to view Loan window. Select Regulatory icon.
7. Verify that Demandable checkbox is displayed as expected with unchecked.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator05
Test Objective : Verify the Demandable flag for an existing loan is not editable/changable.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan record. Select Regulatory icon.
4. Verify that Demandable checkbox is unchecked.
5. Verify that Demandable checkbox is not editable.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator06
Test Objective : Verify the field logging is captured for Maturity Date and Demandable Flag changes.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window for an existing Loan. Navigate to Field Change History window.
4. Verify that Demandable checkbox status changes are captured in Field Logging history.
5. Verify that Loan Maturity Date changes are captured in Field Logging history.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL36UpdateDemandIndicator07
Test Objective : Verify new fields/field values for the Demandable Indicator Flag (Loan Level) in Data Base.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query to get Loan data from Database.
3. The data retrieved from DB as - 


#########################################################################################################
Test Case Name : CL371098Indicator01
Test Objective : To test the current core 1098 Eligible Flag where newly added logic, based on certain criteria, auto-updates the flag during the EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to View Customer window for an existing Customer and select Classification icon.
4. Verify that Customer Type value is displayed as Individual.
5. Navigate to Edit Loan window and select Regulatory icon.
6. Verify That Loan FRB Classification field value is displayed as less than 055.
7. Uncheck the 1098 checkbox and Save the changes. Approve pending record.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator01_DP1
Test Objective : To test the current core 1098 Eligible Flag where newly added logic, based on certain criteria, auto-updates the flag during the EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to View Loan window and select Regulatory icon.
4. Verify that 1098 checkbox is checked.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator02
Test Objective : To test the added logic of the current core 1098 Eligible flag and to verify it will not auto-update if certain criteria are not met prior to the EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Customer window for an existing Customer and select Classification icon. Modify Customer type as Corporation.
4. Navigate to Edit Loan window for an existing Loan and select Regulatory icon.
5. Verify that FRB Code value is displayed as more than 055.
6. Select the 1098 Checkbox and save the changes. Approve the two-touch record.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator02_DP1
Test Objective : To test the added logic of the current core 1098 Eligible flag and to verify it will not auto-update if certain criteria are not met prior to the EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to View Loan window for an existing Loan and select Regulatory icon.
4. Verify that 1098 Check box is unchecked.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator03
Test Objective : To test the added logic of the current core 1098 Eligible flag and to verify it will not auto-update if certain criteria are not met prior to the EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Customer window for an existing Customer and select Classification icon. Update Classification information and save the changes.
4. Navigate to Edit Loan window for an existing Loan and select Regulatory icon.
5. Verify that FRB Code value is displayed as less than 055.
6. Uncheck 1098 checkbox and save the changes.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator03_DP1
Test Objective : To test the added logic of the current core 1098 Eligible flag and to verify it will not auto-update if certain criteria are not met prior to the EOD batch process.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to View Loan window for an existing Loan and select Regulatory icon.
4. Verify that 1098 checkbox is checked.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator04
Test Objective : To test the added logic to the core 1098 Eligible Flag when creating the a New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Loan window. Enter all Loan details for the Tabs: New Loan Info, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Select Regulatory tab.
5. Verify that FRB Code value is flow down from Facility and auto populated in Loan as expected with less than 055.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL371098Indicator04_DP1
Test Objective : To test the added logic to the core 1098 Eligible Flag when creating the a New Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to View Loan window and select Regulatory icon.
4. Verify that 1098 checkbox is checked.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface02
Test Objective : Verify the ability to create a new loan before 6pm EST Fed cut off time.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Select Fed-Wire as Payment Instruction in Cash Offset details window.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface03
Test Objective : Verify the ability to create a new loan after the 6pm EST cut off time.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
3. Enter Loan Accrual Schedule information.
4. Select Fed-wire as cash offset in Cash offset details window and save the changes.
5. Verify that system throws an error message - 'Bundle cann't be approved as the wire cutoff time has been exceeded'.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface04
Test Objective : Verify the ability to create a Rollover Renewal of a loan record after 6pm EST.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Bundle and navigate to new Rollover/Renewal window for a Loan.
3. Enter all mandatory field values in Rollover Renewal information window.
4. Enter Cash Item information.
5. Enter all mandatory field values in Rollover Rate Setting Borrower information tab.
6. Navigate to Rollover Rate window and enter all mandaory fields for Rate information. Save the changes.
7. Verify that system throws an error message - 'Bundle cann't be approved as the wire cutoff time has been exceeded'.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface05
Test Objective : Verify the ability to create a loan disbursement transaction after 6pm EST cut off time.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials 
2. Create a new Bundle and navigate to new Transaction window.
3. Select the Loan and enter the transaction code as 3120.
4. Enter the transaction details on new Transaction window. Save the changes.
5. Verify that system throws an error message - 'Bundle cann't be approved as the wire cutoff time has been exceeded'.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface07
Test Objective : Verify the ability to create a new loan after 5pm EST cut off time.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
3. Enter Loan Accrual Schedule information.
4. Select Fed-Wire as cash offset in Cash Offset information window. Save the changes.
5. Verify that system throws an error message - 'Bundle cann't be approved as the wire cutoff time has been exceeded'.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface09
Test Objective : Verify the ability to create a new loan after the 7pm EST cut off time(REQ 1.0 2.1).
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
3. Enter Loan Accrual Schedule details.
4. Select Fed-Wire as cash offset in Cash Offset details window.
5. Verify that system throws an error message - 'Bundle cann't be approved as the wire cutoff time has been exceeded'.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL43SetFedCutoffTimeForWireInterface10
Test Objective : Verify the ability to create a future dated loan with effective date as next business day.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Select Fed-Wire as Payment Instruction in Cash Offset details window.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown01
Test Objective : Verify RRC Code label in Facility Miscellaneous screen.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Miscellaneous tab.
4. Verify that RRC Code label is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown02
Test Objective : Verify the Facility RRC field value flow down to the FRB field on the loan level and create loan with Tierred Accrual schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. adding accrual schedule with Schedule ID INT2
5. Select the Rate Setting Complete checkbox.
6. Verify that Loan FRB value is flowdown from Facility RRC value and displayed as expected.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown03
Test Objective : Verify manually updated RRC Code on the facility level remains same after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window for an existing Facility. Select Miscellaneous tab.
4. Update the RRC Code value and save the changes. Approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown03_DP1
Test Objective : Verify manually updated RRC Code on the facility level remains same after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Miscellaneous tab.
4. Verify that updated RRC Code is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown04
Test Objective : Verify manually updated FRB code that is different from the RRC code, reverts to original RRC value (on facility level) after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan. Select Regulatory icon.
4. Update the FRB Classification code and save the changes. Approve the two touch record.
5. Navigate to view Facility window for an existing Facility. Select Miscellaneous tab.
6. Verify that FRB Classification Code and RRC Code values are not same before EOD.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown04_DP1
Test Objective : Verify manually updated FRB code that is different from the RRC code, reverts to original RRC value (on facility level) after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window. Select Regulatory tab.
4. Verify that updated FRB Code is reverted back and matched with RRC Code displayed at Facility level.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown05
Test Objective : Verify RRC Codes updated on facilities and all loans under it (active or inactive) are updated to the same values after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window for an existing Facility. Select Miscellaneous tab.
4. Update the RRC code value in Facility Miscellaneous tab and save the changes. Approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown05_DP1
Test Objective : Verify RRC Codes updated on facilities and all loans under it (active or inactive) are updated to the same values after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window for a active Loan. Select Regulatory tab.
4. Verify that Loan FRB code value flow down from Facility RRC Code value and displayed as expected with Facility RRC code value.
5. Navigate to edit Loan window for a closed Loan. Select Regulatory tab.
6. Verify that Loan FRB code value is not flow down from Facility RRC code value and displayed as expected with different than Facility RRC code value.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown08
Test Objective : Verify the ability to update the RRC Code on an expired facility and verify FRB code on loan level does not change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window for an expired Facility. Select Miscellaneous tab.
4. Update the RRC Code value in Facility Miscellaneous tab and save the changes. Approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown08_DP1
Test Objective : Verify the ability to update the RRC Code on an expired facility and verify FRB code on loan level does not change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Miscellaneous tab.
4. Note down the RRC Code value.
5. Navigate to view Loan window for an existing Loan. Select Regulatory tab.
6. Verify that Loan FRB Code value is not flow down from Facility and different from Facility RRC Code as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown09
Test Objective : Verify all changes are captured in field logging history for loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window for an existing Loan. Select Regulatory tab.
4. Update the FRB Classification value and save the changes. Approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown09_DP1
Test Objective : Verify all changes are captured in field logging history for loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window and then navigate to Field Change History window.
4. Verify that Field logging history is captured all changes made for Loan FRB Code value and displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown10
Test Objective : Verify all changes are captured in field logging history for facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window for an existing Facility. Select Miscellaneous tab.
4. Update the RRC Code value and save it. Approve the two touch record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL44RRCTOFRBClassCodeFlowdown10_DP1
Test Objective : Verify all changes are captured in field logging history for facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window and then navigate to Fields Change History window.
4. Verify that Field logging history is captured all changes made for Facility RRC Code value and displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff01A
Test Objective : Verify 4 new site specific fields at the loan level Income to Charged-off MTD (JCINCM),Income to Charged-off YTD (JCINCY), Income to Principal MTD (JCITPM) and Income to Principal YTD (JCITPY).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window for an existing Loan. Select Summary tab and then Charge Off History tab.
4. Verify that 4 new site specific fields and their values are displayed as expected at the Loan level: Income to Charged-off MTD (JCINCM), Income to Charged-off YTD (JCINCY), Income to Principal MTD (JCITPM) and Income to Principal YTD (JCITPY).
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff03A
Test Objective : Verify the ability to charge off a loan for the complete principal balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Navigate to GL Account Summary window and note down data.
5. Create a new Bundle and navigate to Accounting Method Change window for a Loan. Enter all mandatory field values in Accounting Method Change window.
6. Save and Submit the bundle, login with Approver credentials and post the bundle
7. Right click on Loan and select Create New Bundle option. Provide Bundle details and click Create Bundle button in Create Bundle window. Select Create -> Transaction in Bundle Manager Window.
8. Create Transaction with 3400 transaction code
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Navigate to view Loan window.
11. Verify that Gross Charge-off/Income Bucket and Net Charge-off values are displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff03A_DP1
Test Objective : Verify the ability to charge off a loan for the complete principal balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window. Select the Summary icon and click on the Charge Off History tab.
4. Verify that Principal charge off ITD value is displayed as expected.
5. Navigate to GL Account Summary window for a Loan.
6. Verify that Loan amount is displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff04A
Test Objective : Verify the ability to charge off a loan for the partial principal balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Navigate to GL Account Summary window and note down data.
5. Create a new Bundle and navigate to Accounting Method Change window. Enter all mandatory field values in Accounting Method Change window.
6. Save and Submit the bundle, login with Approver credentials and post the bundle
7. Right click on Loan and select Create New Bundle option. Provide Bundle details and click Create Bundle button in Create Bundle window. Select Create -> Transaction in Bundle Manager Window.
8. Create Transaction with 3400 transaction code
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Navigate to view Loan window.
11. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff04A_DP1
Test Objective : Verify the ability to charge off a loan for the partial principal balance.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal charge off ITD value is displayed as expected.
6. Navigate to GL Account Summary window for a Loan.
7. Verify that Loan amount is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff05A
Test Objective : Verify the ability to charge off a loan for the complete principal balance EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Navigate to GL Account Summary window and note down data.
5. Create a new Bundle and navigate to Accounting Method Change window. Enter all mandatory field values in Accounting Method Change window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff05A_DP1
Test Objective : Verify the ability to charge off a loan for the complete principal balance EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Right click on Loan and select Create New Bundle option. Provide Bundle details and click Create Bundle button in Create Bundle window. Select Create -> Transaction in Bundle Manager Window.
4. Create Transaction with 3400 transaction code
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to view Loan window.
7. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff05A_DP2
Test Objective : Verify the ability to charge off a loan for the complete principal balance EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window. Select the Summary icon and click on the Charge Off History tab.
4. Verify that Principal charge off ITD value is displayed as expected.
5. Navigate to GL Account Summary window for a Loan.
6. Verify that Loan amount is displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff06A
Test Objective : Verify the ability to charge off a loan for partial principal balance EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Verify that Gross Charge-off, Net Charge-off and Gross Recoveries values are displayed as expected.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected on the Summary window.
7. Create a new Bundle and navigate to Accounting Method Change window. Enter all mandatory field values in Accounting Method Change window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff06A_DP1
Test Objective : Verify the ability to charge off a loan for partial principal balance EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Right click on Loan and select Create New Bundle option. Provide Bundle details and click Create Bundle button in Create Bundle window. Select Create -> Transaction in Bundle Manager Window.
4. Create Transaction with 3400 transaction code
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to view Loan window.
7. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff06A_DP2
Test Objective : Verify the ability to charge off a loan for partial principal balance EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal charge off MTD, QTD, YTD and ITD values are displayed as expected for Loan.
6. Navigate to GL Account Summary window.
7. Verify that Transaction amount is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff07A
Test Objective : Verify the ability to make a principal payment to a fully charged off loan using 9100 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Verify that Gross Charge-off, Net Charge-off and Current GL Balance values are displayed as expected.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the Loan and enter the transaction code as 9100.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Run SQL query and get the Balance Category Account Payoff amount from Database.
10. Navigate to view Loan window.
11. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff07A_DP1
Test Objective : Verify the ability to make a principal payment to a fully charged off loan using 9100 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off and Gross Recoveries values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff08A
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 9100 transaction - 1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to view Loan window.
6. Verify that Gross Charge-off, Net Charge-off and Current GL Balance values are displayed as expected.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the Loan and enter the transaction code as 9100.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Run SQL query and get the Balance Category Account Payoff amount from Database.
12. Navigate to view Loan window.
13. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff08A_DP1
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 9100 transaction - 1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff09A
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 9100 transaction - 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to view Loan window.
6. Verify that Gross Charge-off, Net Charge-off and Current GL Balance values are displayed as expected.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the Loan and enter the transaction code as 9100.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Run SQL query and get the Balance Category Account Payoff amount from Database.
12. Navigate to view Loan window.
13. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff09A_DP1
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 9100 transaction - 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff10A
Test Objective : Verify the ability to make a principal payment to a fully charged off loan using 3100 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the Loan and enter the transaction code as 3100.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Verify that Gross Charge-off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
12. Run SQL query and get the Balance Category Account Payoff amount from Database.
13. Navigate to view Loan window.
14. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff10A_DP1
Test Objective : Verify the ability to make a principal payment to a fully charged off loan using 3100 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff11A
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 3100 transaction - 1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to view Loan window.
6. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
7. Select the Summary icon and click on the Charge Off History tab.
8. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 3100.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Run SQL query and get the Balance Category Account Payoff amount from Database.
14. Navigate to view Loan window.
15. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff11A_DP1
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 3100 transaction - 1.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff12A
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 3100 transaction - 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to view Loan window.
6. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
7. Select the Summary icon and click on the Charge Off History tab.
8. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 3100.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Run SQL query and get the Balance Category Account Payoff amount from Database.
14. Navigate to view Loan window.
15. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff12A_DP1
Test Objective : Verify the ability to make a principal payment to a partially charged off loan using 3100 transaction - 2.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff13A
Test Objective : Verify the ability to reverse a principal payment on a fully charged off loan using 3110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the Loan and enter the transaction code as 3110.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Navigate to view Loan window.
12. Verify that Gross Charge-off, Principal Balance, Account payoff, Gross recoveries and Net Charge-off values are displayed as expected.
13. Run SQL query and get the Balance Category Account Payoff amount from Database.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff13A_DP1
Test Objective : Verify the ability to reverse a principal payment on a fully charged off loan using 3110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff14A
Test Objective : Verify the ability to reverse a principal payment on a fully charged off loan using 9110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the Loan and enter the transaction code as 9110.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Navigate to view Loan window.
12. Verify that Gross Charge-off, Principal Balance, Account payoff, Gross recoveries and Net Charge-off values are displayed as expected.
13. Run SQL query and get the Balance Category Account Payoff amount from Database.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff14A_DP1
Test Objective : Verify the ability to reverse a principal payment on a fully charged off loan using 9110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff15A
Test Objective : Verify the ability to reverse a principal payment on a partially charged off loan using 3110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to view Loan window.
6. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
7. Select the Summary icon and click on the Charge Off History tab.
8. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 3110.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Navigate to view Loan window.
14. Verify that Gross Charge-off, Net Charge-off, Principal Balance, Account payoff, Current GL Balance and Gross recoveries values are displayed as expected.
15. Run SQL query and get the Balance Category Account Payoff amount from Database.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff15A_DP1
Test Objective : Verify the ability to reverse a principal payment on a partially charged off loan using 3110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff16A
Test Objective : Verify the ability to reverse a principal payment on a partially charged off loan using 9110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to view Loan window.
6. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
7. Select the Summary icon and click on the Charge Off History tab.
8. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 9110.
11. Enter the transaction details on new Transaction window.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Navigate to view Loan window.
14. Verify that Gross Charge-off, Net Charge-off, Principal Balance, Account payoff, Current GL Balance and Gross recoveries values are displayed as expected.
15. Run SQL query and get the Balance Category Account Payoff amount from Database.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff16A_DP1
Test Objective : Verify the ability to reverse a principal payment on a partially charged off loan using 9110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff17A
Test Objective : Verify the ability to make an interest payment to a fully charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the Balance Category Account Payoff amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
6. Select the Summary icon and click on the Charge Off History tab.
7. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
8. Create a new Bundle and navigate to new Transaction window.
9. Select the Loan and enter the transaction code as 3200.
10. Enter the transaction details on new Transaction window.
11. Save and Submit the bundle. Login with approver credentials and post the bundle.
12. Verify that Gross Charge-off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
13. Navigate to view Loan window.
14. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff17A_DP1
Test Objective : Verify the ability to make an interest payment to a fully charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff18A
Test Objective : Verify the ability to make an interest payment to a partially charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the Balance Category Account Payoff amount from Database.
3. Run SQL query and get the charge-off amount from Database.
4. Run SQL query and get the current GL Balance from Database.
5. Login into ACBS Servicing application with valid user credentials.
6. Navigate to view Loan window.
7. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
8. Select the Summary icon and click on the Charge Off History tab.
9. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
10. Create a new Bundle and navigate to new Transaction window.
11. Select the Loan and enter the transaction code as 3200.
12. Enter the transaction details on new Transaction window.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to view Loan window.
15. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff18A_DP1
Test Objective : Verify the ability to make an interest payment to a partially charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff19A
Test Objective : To change the cost center in an Existing Loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Run SQL query and get the current GL Balance from Database.
4. Login into ACBS Servicing application with valid user credentials.
5. Navigate to Edit Loan window for an existing loan and update Cost Center.
6. Navigate to view Loan window.
7. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
8. Select the Summary icon and click on the Charge Off History tab.
9. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff19A_DP1
Test Objective : Verify the ability to reverse a principal payment on a partially charged off loan using 9110 transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the old cost center from Database.
3. Run the SQL Query to validate Principal balance gets re-classified to the new cost center
4. SQL query execution completed! The value from the Database is: 
5. Validate that after changing the cost center value should be greater than zero 
6. Login into ACBS Servicing application with valid user credentials.
7. Navigate to view Loan window.
8. Verify that Gross Charge-off, Net Charge-off and Current GL Balance values are displayed as expected.
9. Select the Summary icon and click on the Charge Off History tab.
10. Verify that Principal Charge-off values are displayed as expected.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff22A
Test Objective : Verify the ability to make multiple principal payments to a fully charged off loan by processing a TC 9100 (Principal Recovery) transaction(s).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Verify that Gross Charge-off, Net Charge-off and Current GL Balance values are displayed as expected.
5. Create a new Bundle and navigate to new Transaction window.
6. Select the Loan and enter the transaction code as 9100.
7. Enter the transaction details on new Transaction window.
8. Create another Transaction from the same Transaction window. Create a Transaction with 9100 transaction code by entering all mandatory field values.
9. Create another Transaction from the same Transaction window. Create a Transaction with 9100 transaction code by entering all mandatory field values.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Run SQL query and get the Balance Category Account Payoff amount from Database.
12. Navigate to view Loan window.
13. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff22A_DP1
Test Objective : Verify the ability to make mulitple principal payments to a fully charged off loan by processing a TC 9100 (Principal Recovery) transaction(s).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff23A
Test Objective : Verify the ability to make an interest payment to a Non Performing loan with no Charge-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the Balance Category Account Payoff amount from Database.
3. Run SQL query and get the charge-off amount from Database.
4. Run SQL query and get the current GL Balance from Database.
5. Login into ACBS Servicing application with valid user credentials.
6. Navigate to view Loan window.
7. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
8. Select the Summary icon and click on the Charge Off History tab.
9. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
10. Create a new Bundle and navigate to new Transaction window.
11. Select the Loan and enter the transaction code as 3200.
12. Enter the transaction details on new Transaction window.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to view Loan window.
15. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff23A_DP1
Test Objective : Verify the ability to make an interest payment to a Non Performing loan with no Charge-off.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff24A
Test Objective : Verify the ability to process a TC 3210 (Reverse Interest Payment) transaction to a fully charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the Balance Category Account Payoff amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
6. Select the Summary icon and click on the Charge Off History tab.
7. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
8. Create a new Bundle and navigate to new Transaction window.
9. Select the Loan and enter the transaction code as 3210.
10. Enter the transaction details on new Transaction window.
11. Save and Submit the bundle. Login with approver credentials and post the bundle.
12. Verify that Gross Charge-off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
13. Navigate to view Loan window.
14. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff24A_DP1
Test Objective : Verify the ability to process a TC 3210 (Reverse Interest Payment) transaction to a fully charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Loan window.
4. Select the Summary icon and click on the Charge Off History tab.
5. Verify that Principal Charge-off values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff25A
Test Objective : Verify the ability to process a TC 3210 (Reverse Interest Payment) transaction to a partially charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the Balance Category Account Payoff amount from Database.
3. Run SQL query and get the charge-off amount from Database.
4. Run SQL query and get the current GL Balance from Database.
5. Login into ACBS Servicing application with valid user credentials.
6. Navigate to view Loan window.
7. Verify that Gross Charge-off and Net Charge-off values are displayed as expected.
8. Select the Summary icon and click on the Charge Off History tab.
9. Verify that Principal Charge-off MTD, Principal Charge-off QTD, Principal Charge-off YTD and Principal Charge-off ITD values are displayed as expected.
10. Create a new Bundle and navigate to new Transaction window.
11. Select the Loan and enter the transaction code as 3210.
12. Enter the transaction details on new Transaction window.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to view Loan window.
15. Verify that Gross Charge off, Principal Balance, Account payoff, Gross recoveries and Net Charge off values are displayed as expected.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL45ChargeOff25A_DP1
Test Objective : Verify the ability to process a TC 3210 (Reverse Interest Payment) transaction to a partially charged off loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the charge-off amount from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to view Loan window.
5. Select the Summary icon and click on the Charge Off History tab.
6. Verify that Principal Charge-off values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL56UCNValidation01
Test Objective : Verify that newly added validations to the core Alternate Identifier field currently being used to house the UCN number (Universal Customer Number) that is currently in practice.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the edit Customer Basic information tab for an existing customer and update UCN Number as '.' then save the changes.
4. Verify that system throws an expected error message - 'Error-UCN Number Has An Invalid Length. 12 Characters Required.'.
5. Enter valid UCN Number with 12 characters length and save the changes.
6. Verify that Customer record has been saved successfully.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL56UCNValidation02
Test Objective : Verify the UCN Number field is displayed on the Customer Master Record for the Customer.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Search the Customer by using UCN No: 
3. Create a new Customer by entering all mandatory field values with using above UCN No: 
4. Verify that newly created Customer is stored in Customer Master file in database.
5. The retrieved data from the Database is - 
6. Navigate to Edit - Customer window for newly created Customer. Update UCN Number with 10 characters length and save the changes.
7. Verify that system throws an error message - 'Error-UCN Number Has An Invalid Length. 12 Characters Required.'
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL56UCNValidation03
Test Objective : Verify that data entered in the UCN Number field is unique to each customer record.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to new Customer window.
3. Enter all mandatory field values in Customer Basic information tab and enter 10 characters UCN Number.
4. Enter all mandatory field values in Customer Risk information tab.
5. Enter all mandatory field values in Customer Classification information tab.
6. Enter all mandatory field values in Customer Additional information tab.
7. Enter all mandatory field values in Customer Address information tab.
8. Click on the quick save button.
9. Verify that system throws an expected error message - 'Error-UCN Number Has An Invalid Length. 12 Characters Required.'
10. Navigate to Customer Basic information tab and enter valid 12 characters UCN Number. Save the changes.
11. Verify that Customer record has been added successfully.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL57FacilityIDValidationOnlineCheck01
Test Objective : To test newly added validations to the Standard Reference Id field where the Type is JPM FAC ID, and to ensure a unique value is entered when the field is edited, or a value is manually entered.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate Basic information tab for an existing Facility and update the Standard Reference ID with blank value. Save the details.
4. Verify that system throws an error message - 'Error-Standard Reference ID Type Cannot Be Blank.'
5. Modify Standard Reference ID with 9 characters and save the record. Verify that record has been updated successfully.
6. Navigate Basic information tab for an existing Facility and update the Standard Reference ID with nine zeros. Save the details.
7. Verify that record has been updated successfully.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL57FacilityIDValidationOnlineCheck02
Test Objective : To test the uniqueness of the Standard Reference ID # when entering data into the Standard Reference ID field on the Facility Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a 'Self Originated' Facility for an existing Customer by entering all mandatory field values (Facility Currency: USD, Facility Booking Class: NEW C/A, Facility Origination: SELF-ORIGINATED, Facility Structure: DIRECT CREDIT, Purpose: MULTIPURPOSES, Facility Amount: 1,000,00.00).
4. Navigate to edit facility window for newly created facility and enter reference id that is used/entered while creation of new facility. Save the details.
5. Verify that system throws an error message - 'Error-JPM FAC ID Is Not Unique.'
6. Modify Facility ID with 6 characters and save the record.
7. Verify that system throws an error message - 'Error-JPM FAC ID Has An Invalid Length. 9 Characters Required.'
8. Modify Facility ID with 9 characters and save the record. Verify that record has been updated successfully without throwing any error.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens01
Test Objective : Verify the ability to create a new Facility to validate the Facility Additional Details/Miscellaneous fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a 'Self Originated' Facility for the Customer by entering all mandatory field values.
4. Navigate to edit Facility window for a Facility and update Additional details. Save the details.
5. Verify that Satisfied Posting Date and Satisfied Effective Date values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens02
Test Objective : Verify the ability to modify an existing facility and validate new field Key Values/Descriptions in the drop down menus.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window and update Facility Additional Details. Save the changes.
4. Modify Facility Miscellaneous details and save it.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens02_DP1
Test Objective : Verify the ability to modify an existing facility and validate new field Key Values/Descriptions in the drop down menus.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Additional Details window for an existing Facility.
4. Verify that Satisfied Posting Date and Satisfied Effective Date values are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens03
Test Objective : Verify the Field Logging changes for Facility Additional Details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window and update Miscellaneous details. Save the changes.
4. Navigate to Field Change History window. Verify that all field changes are captured in the Field Logging History.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens04
Test Objective : Verify the ability to modify an existing facility and loan to reflect 'PrePayment Penalty Applies'. Verify the Prepayment Pentalty warning message is received when processing Princ Payment/Payoff event prior to maturity date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Additional Details window for an existing Facility.
4. Verify that Satisfied Posting Date and Satisfied Effective Date values are displayed as expected.
5. Navigate to edit Facility window and update the Drawing details. Save the changes.
6. Navigate to edit Loan window and update Risk information. Save the changes.
7. Navigate to Loan Miscellaneous window for an existing Loan.
8. Verify that Satisfied Posting Date and Satisfied Effective Date values are displayed as expected.
9. Create a new Bundle and navigate to new Transaction window.
10. Select the Loan and enter the transaction code as 3100.
11. Enter the transaction details on new Transaction window. Save the details.
12. Verify that system throws a warning message as - 'The Loan is being Paid in Full Prior to the Legal Maturity. A Borrower Prepayment Penalty may need to be Charge'.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens05
Test Objective : Verify the ability to create a new loan to verify new site specific fields and their Key Values/Descriptions in Loan Misc screen.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Customer window and get the Customer Name.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to Loan Miscellaneous window for an existing Loan.
7. Verify that properties of Interest Rate Sensitivity, Tax Status and Liquidity Premium values are displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens06
Test Objective : Verify the ability to modify a loan to populate new values.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Miscellaneous details window for an existing Loan.
4. Modify the Interest Rate Sensitivity, Tax Status and Liquidity premium values. Save the changes.
5. Verify that properties of Interest Rate Sensitivity, Tax Status and Liquidity premium values are displayed as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens07
Test Objective : Verify the loan level Field Logging changes in Field Change History.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window and update the Loan Miscellaneous Information. Save the details.
4. Navigate to view Loan window.
5. Navigate to Field Change History window. Verify that all field changes are captured in Field Logging History.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens08
Test Objective : Verify the ability to process a Rollover/Renewal for a loan record to validate new field Key Values/Descriptions in the drop down menus.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous tab for an existing Loan. Note down the Interest Rate Sensitivity value.
4. Create a new Bundle and navigate to new Rollover/Renewal window by selecting the Loan.
5. Enter all the mandatory field values in Rollover/Renewal information.
6. Select the Rate Settings tab and enter Rate setting Borrower's information.
7. Navigate to Rollover Rate window. Enter all the mandatory field values.
8. Select the Rate setting complete checkbox.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Navigate to view Loan window and Select Miscellaneous tab. Note down the Interest Rate Sensitivity value.
11. Verify that Interest Rate Sensitivity field value is displayed as expected.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens09
Test Objective : Verify the non-performing income fields are displayed for a Loan in the the Summary Information Charge off tab.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to View Loan window. Select Summary tab and then Charge Off History tab.
4. Verify that non-performing fields are displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens10
Test Objective : Verify the ability to create a Pricing Option Template for an existing Facility to verify new site specific fields on the Misc view tab.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Pricing Option for a Facility by entering all the mandatory field values.
4. Navigate to existing Pricing Option window for a Facility.
5. Verify that Interest Rate Sensitivity and Tax Status dropdown field labels are displayed as expected.
6. Verify that Interest Rate Sensitivity and Tax Status field values are displayed as expected.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens11
Test Objective : Verify the new site specific fields on the Misc screen for an existing Pricing Option.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing Option window for a Facility.
4. Verify that Interest Rate Sensitivity and Tax Status dropdown field labels are displayed as expected.
5. Verify that Interest Rate Sensitivity and Tax Status field values are displayed as expected. Save the details.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens12
Test Objective : Verify new fields/field values for the Facility Additional Details and Misc screens (facility and Loan Level) in Data Base.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Additional Details window for an existing Facility and verify newly added fields.
4. Run sql query to verify Facility Additional field values in the database.
5. The data retrieved from the Database as - 
6. Navigate to Loan Miscellaneous details window for an existing Loan and verify newly added fields.
7. Run the sql query to verify Loan Miscelleneous data in the database.
8. The data retrieved from the Database as - 
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL60MiscScreens13
Test Objective : Verify the ability to update Law Firm Code in facility additional details and verify the Attorney short name During 2-touch approval and field log history in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window and update Facility Additional Details. Save the changes.
4. Navigate to Field Change History window. Verify that all field changes are captured in the Field Logging History.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic01
Test Objective : Verify the ability to view fields and field values for Unbilled or partially Unbilled Facility Invoices.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window for an existing Facility. Verify that all fields and field values are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic02
Test Objective : Verify the ability to view fields and field values for Unbilled or partially Unbilled Loan Invoices.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window for an existing Loan. Verify that all fields and fields values are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic03
Test Objective : Verify the ability to update Due Date using the Unbill function for a Facility Fee (Upfront) and verify the fields are meet the requirements as per BRD on Facility Fee Invoice details form.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window for an existing Facility and verify that the Additional Information section has no data related to Unbill.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic04
Test Objective : Verify the ability to update Fixed (Periodic) Fee Amount and Next Due Date by using the Unbill function for an existing Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window for an existing Facility and verify that the Additional Information section has no data related to Unbill.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic05
Test Objective : Verify the ability to create invoice for a Facility Accruing Fee to validate Fee rate change using the Unbill function. In addition, update the new Facility Fee Invoice details that allows the user to edit and save fee invoice details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Facility.
4. Select the Facility and enter the Transaction code as 2790.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction.
7. Select and Unbill the invoice for a Facility. Update the Fee billing information with the date of the invoice that was unbilled.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic05_DP1
Test Objective : Verify the ability to create invoice for a Facility Accruing Fee to validate Fee rate change using the Unbill function. In addition, update the new Facility Fee Invoice details that allows the user to edit and save fee invoice details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window for an existing Facility and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic06
Test Objective : Verify the ability to create an invoice for the Facility to reflect a commitment line increase by increasing the limit amount using the Unbill function. In addition, verify the user can edit and save the new Facility Fee Invoice details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2300.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Select and Unbill the invoice for a Facility. Update the fee billing information with the date of the invoice that was unbilled.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic06_DP1
Test Objective : Verify the ability to create an invoice for the Facility to reflect a commitment line increase by increasing the limit amount using the Unbill function. In addition, verify the user can edit and save the new Facility Fee Invoice details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window for an existing Facility and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic07
Test Objective : Verify the ability to create an invoice for the Facility to reflect a commitment line decrease by decreasing the limit amount using the Unbill function. In addition, verify the user can edit and save the new Facility Fee Invoice details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2320.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Unbill the invoice for a Facility and update the fee billing information with the date of the invoice that was unbilled.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic07_DP1
Test Objective : Verify the ability to create an invoice for the Facility to reflect a commitment line decrease by decreasing the limit amount using the Unbill function. In addition, verify the user can edit and save the new Facility Fee Invoice details.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window for an existing Facility and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic08
Test Objective : Verify the ability to create a Loan Invoice to correct an inaccurate bill for a Loan tied incorrectly to Facility balances.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Facility for an existing Customer by entering all mandatory field values.
4. Add a Section/Sublimit record to the Facility by entering all field values. (From the Account Explorer, right-click a Facility record and select Create New, Facility Structure, Section/Sublimit. The New Section/Sublimit form appears. Complete the required fields (Limit Type , Limit Description and Limit Amount) and click Quick Save icon. Confirm that record is saved successfully).
5. Navigate to existing Sections/Sublimits window for a Facility by selecting (View| Existing| Facility Structure| Sections/Sublimits) menu option from the top menu bar.
6. Create an Accruing Fee record for a Facility.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic08_DP1
Test Objective : Verify the ability to create a Loan Invoice to correct an inaccurate bill for a Loan tied incorrectly to Facility balances.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create 1 month back dated Loan for an existing Facility by entering all mandatory field values. Enter all Loan details for Tabs - (New Loan Tab Info, Servicing Tab Info, Risk Tab Info, Regulatory Tab Info, Repayment Schedule and Additional Field).
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Unbill the invoice for a Facility and update the fee billing information with the date of the invoice that was unbilled.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic09
Test Objective : Verify the ability to create an invoice for a Loan to correct an inaccurate Flat Fee bill by using the Unbill process and correcting the Due Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3800.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Unbill the invoice for a Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic09_DP1
Test Objective : Verify the ability to create an invoice for a Loan to correct an inaccurate Flat Fee bill by using the Unbill process and correcting the Due Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic10
Test Objective : Verify the ability to create an invoice for a Loan to correct an inaccurate Base Rate due to incorrect Rounding Adjustment that is not set to Base Rate Only.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the Transaction code as 3691.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Unbill the invoice for a Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic10_DP1
Test Objective : Verify the ability to create an invoice for a Loan to correct an inaccurate Base Rate due to incorrect Rounding Adjustment that is not set to Base Rate Only.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic11
Test Objective : Verify the ability to create an invoice for a Loan to correct a bill where the Principal and Interest payments were applied to the wrong Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the Transaction code as 3110.
5. Enter the Transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Create another Transaction by selecting new Transaction option.
8. Select the Loan and enter the Transaction code as 3210.
9. Enter the Transaction details on new Transaction window.
10. Enter Cash Offset details.
11. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
12. Unbill the invoice for a Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic11_DP1
Test Objective : Verify the ability to create an invoice for a Loan to correct a bill where the Principal and Interest payments were applied to the wrong Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Create a new Bundle and navigate to new Transaction window for Loan.
5. Select the Loan and enter the transaction code as 3100.
6. Enter the transaction details on new Transaction window.
7. Enter Cash Offset details.
8. Create another Transaction by selecting new Transaction option.
9. Select the Loan and enter the Transaction code as 3200.
10. Enter the Transaction details on new Transaction window.
11. Enter Cash Offset details.
12. Save and Submit the bundle. Login with Approver credentials and post the Transaction bundle.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic12
Test Objective : Negative Test
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Loan window. Enter Loan details for all Tabs - New Loan Info, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash item information.
5. Save and Submit the bundle. Login with approver credentials and post the Loan.
6. Create a new Bundle and navigate to new Transaction window for newly created Loan.
7. Select the Loan and enter the Transaction code as 3610.
8. Enter the Transaction details on new Transaction window.
9. Save and Submit the bundle. Login with approver credentials and post the Transaction.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic12_DP1
Test Objective : Negative Test
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Unbill the invoice for Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
4. Verify that system throws an expected error message - 'Next Due Date Cannot Precede' is displayed in View Exceptions window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic13
Test Objective : Verify the ability to create an invoice to test the Unbill functionality for a Loan with an incorrect Base and Spread Rate and also to change the Billing Frequency for the Accrual Schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the Transaction code as 3610.
5. Enter the Transaction details on new Transaction window.
6. Create another Transaction by using new Transaction option.
7. Select the Loan and enter the transaction code as 3630.
8. Enter the transaction details on new Transaction window.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Unbill the invoice for a Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic13_DP1
Test Objective : Verify the ability to create an invoice to test the Unbill functionality for a Loan with an incorrect Base and Spread Rate and also to change the Billing Frequency for the Accrual Schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL67BillUnbillLogic14
Test Objective : Verify the ability to validate Unbill indicator field for a Facility Invoice and Loan Addendum records in Database.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query to get the Facility ID and Unbill Indicator from the Database.
3. Retrieved data from Database is - 
4. Verify that Facility ID and Unbill indicator values are matched with Database values.
5. Run the SQL query to get the Loan ID and Unbill indicator from Database.
6. Retrieved data from Database is - 
7. Verify that Loan ID and Unbill indicator values are matched with Database values.


#########################################################################################################
Test Case Name : CL71DuplicateAddress01
Test Objective : Verify the new Billing Address 2 field is displayed under the Billing Info View on the Facility Fee-Accruing schedule and can be updated with an address that differs from the core Billing Address field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and get the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to existing Fee-Accruing window. Open an existing record and update Billing address information. Save the details.
6. Navigate to Field Change History window and verify that latest address changes are captured in Field Logging History.
7. Navigate to existing Fee-Accruing window.
8. Verify that Facility Invoice is generated successfully.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress02
Test Objective : Verify the new Billing Address 2 field is displayed under the Billing Info View on the Facility Fee-Fixed schedule and can be updated with an address that differs from the core Billing Address field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Fee-Fixed window. Open an existing record and update Billing Address information. Save the details.
6. Navigate to Field Change History window and verify that address changes are captured in Field Change History.
7. Navigate to existing Fixed-Fee window.
8. Verify that Facility Invoice is generated successfully.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress03
Test Objective : Verify the ability to create a new Fee-Accruing schedule for Facility to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Fee-Accruing window. Open an existing record and update Billing Address information. Save the details.
6. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress03_DP1
Test Objective : Verify the ability to create a new Fee-Accruing schedule for Facility to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Navigate to existing Accruing-Fee window.
4. Verify that Facility Invoice is generated successfully.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress04
Test Objective : Verify the ability to create a new Fee-Fixed schedule for Facility to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Fee-Fixed window. Open an existing record and update Billing Address information. Save the details.
6. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress04_DP1
Test Objective : Verify the ability to create a new Fee-Fixed schedule for Facility to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Navigate to existing Fixed-Fee window.
4. Verify that Facility Invoice is generated successfully.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress05
Test Objective : Verify the new Billing Address 2 field is displayed under the Billing Info View for the Loan Repayment Primary schedule and can be updated with an address that differs from the core Billing Address field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Repayment Primary window. Open an existing record and update Billing Address information. Save the changes.
6. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
7. Navigate to the existing Repayment Primary window.
8. Verify that Loan Invoice is generated successfully.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress06
Test Objective : Verify the ability to create a Repayment Secondary schedule for Loan to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Repayment Secondary window. Open an existing record and update Billing Address information. Save the details.
6. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress06_DP1
Test Objective : Verify the ability to create a Repayment Secondary schedule for Loan to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Navigate to the existing Repayment Secondary window.
4. Verify that Loan Invoice is generated successfully.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress07
Test Objective : Verify the ability to create a new Repayment Primary schedule for an existing loan to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Login into ACBS Servicing application with approver credentials and fetch the user name.
2. Logout from Servicing application.
3. Login into ACBS Servicing application with valid Servicing user credentials.
4. Create a bundle to create a new loan
5. Enter all the Loan Details: New Loan Info, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field
6. Save and Submit the bundle. Login with approver credentials and post the bundle
7. Navigate to the existing Repayment Primary window. Open an existing record and update the Billing Address information. Save the details.
8. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress08
Test Objective : Verify the new Billing Address 2 field is displayed under the Billing Info View on the Repayment Secondary schedule and can be updated with an address that differs from the core Billing Address field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Repayment Secondary window. Open an existing record and update Billing Address information. Save the details.
6. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress09
Test Objective : Verify the new Billing Address 2 field is displayed under the Pricing Option templates (existing) and can be updated with an address that differs from the core Billing Address field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Navigate to the existing Pricing Option window. Open an existing record and update Billing Address information. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress10
Test Objective : Verify the ability to create a new Pricing Option Template to verify the new Billing Address 2 field is displayed under the Billing Info View and can be updated with an address other than the Primary Billing Address.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid servicing user credentials.
3. Navigate to the existing Pricing Option window. Open an existing record and update the Billing Address information. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL71DuplicateAddress11
Test Objective : Verify the ability to create an Additional Obligor Sub-Limit with a fee to verify the new Billing Address 2 field is displayed and can be updated with an address that differs from the core Billing Address field.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with approver credentials and fetch the user name.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with valid servicing user credentials.
5. Navigate to the existing Sections/Sublimits window. Open an existing record and update the Billing Address information. Save the details.
6. Navigate to Field Change History window and verify that address changes are captured in the Field Change History.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster01
Test Objective : Create new Customer Test - attempt to enter a ECI value less than 10 numeric characters.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to new Customer window.
3. Enter all mandatory field values in Customer Basic information tab with ECIID as less than 10 numeric digits.
4. Enter all mandatory field values in Risk information tab.
5. Enter all mandatory field values in Classification information tab.
6. Enter all mandatory field values in Additional information tab.
7. Enter all mandatory field values in Address information tab.
8. Click on the quick save button.
9. Verify that system throws an error message as 'Error-ECI Reference ID Length Not Valid. Must Be Minimum 10 And Maximum 10 Characters displays when ECI Number is not of 10 digit'.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster02
Test Objective : Validate the ECI field exists & has been correctly displayed on the Customer level (Basic screen).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to Customer Basic information tab for an existing Customer.
4. Verify that ECI Number field is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster03
Test Objective : Verify that Reference ID field is populated with the same value which was updated for the ECI number at the time of customer creation.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search an existing Customer by using ECIID as Reference ID. Verify that 10 digit ECI Number is displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster04
Test Objective : Create New Customer Test - attempt to enter a ECI value greater than 10 numeric characters.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to new Customer window.
3. Enter all mandatory field values in Customer Basic information tab with ECIID as more than 10 numeric digits.
4. Enter all mandatory field values in Risk information tab.
5. Enter all mandatory field values in Classification information tab.
6. Enter all mandatory field values in Additional information tab.
7. Enter all mandatory field values in Address information tab.
8. Click on the quick save button.
9. Verify that system throws an error message as 'ECI Reference ID Length Not Valid. Must Be Minimum 10 And Maximum 10 Characters'.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster05
Test Objective : Verify that all changes being made to the ECI field are tracked and available under field logging within the Reference ID detail section.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search an existing Customer by using ECIID and navigate to View Customer window.
4. Verify that ECI Number field has the same value that was used in Customer search (Details -> ReferenceIDs).
5. Update ECIID with new ECI ID value (Details -> ReferenceIDs). Save the details.
6. Navigate to view Customer window.
7. Navigate to view Reference ID Window.
8. Verify that Field Logging value is displayed as expected in Field Change History window.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster06
Test Objective : Verify the ability to modify an existing numeric ECI (Enter a unique 10 numeric character value).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search an existing Customer and navigate to view Customer window.
4. Update the ECI ID with 10 unique numeric digits (Details -> ReferenceIDs) and save it.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster07
Test Objective : Verify the ability to create a new ECI (Enter a unique 10 numeric character value).
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a Customer by entering all mandatory field values with ECI ID as 10 digit numeric value.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster08
Test Objective : Verify the ability to modify an existing ECI (Alphanumeric 10 characters in ECI test).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to view Customer window for an existing Customer.
4. Update the ECI ID with a 10 characters alphanumeric value (Details -> ReferenceIDs). Save the changes.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster09
Test Objective : Verify the ability to create a new ECI (Alphanumeric 10 characters in ECI test).
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a Customer by entering all mandatory field values with ECI ID as 10 digit Alphanumeric.
3. Logout from Servicing application.
4. Login into ACBS Servicing application with Approver credentials.
5. Search and navigate to view Customer window for an existing Customer.
6. Update the ECI ID with 10 digit Alphanumeric value (Details -> ReferenceIDs). Save the changes.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster10
Test Objective : Verify the ability to modify an existing ECI (Leave ECI blank test).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to view Customer window for an existing Customer.
4. Verify Alert On ECI Number popup is displayed
5. Verify that Reference IDs list appears under selected details with no pending Two Touch items.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster11
Test Objective : Verify the ability to create a new ECI (Leave ECI blank test).
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to new Customer window.
3. Enter all mandatory field values in Customer Basic information tab with ECI ID as blank value.
4. Enter all mandatory field values in Risk information tab.
5. Enter all mandatory field values in Classification information tab.
6. Enter all mandatory field values in Additional information tab.
7. Enter all mandatory field values in Address information tab.
8. Click on the quick save button.
9. Verify that system throws an error message as 'Error-ECI Number Cannot Be Blank.'
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster12
Test Objective : Verify that attempt to delete an existing ECI.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search an existing Customer by using ECI ID as Reference ID and open.
4. Verify that ECI ID is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster13
Test Objective : Verify the ability to mdify ECI Number via existing customer record - Attempt to enter less than 10 characters.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to view Customer window for an existing Customer.
4. Update ECI ID with less than 10 characters (Details -> ReferenceIDs). Save the details.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster14
Test Objective : Verify the ability to modify ECI Number via an existing customer record - attempt to enter greater than 10 characters.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to view Customer window for an existing Customer.
4. Update ECIID with more than 10 characters (Details -> ReferenceIDs). Save the details.
5. Search and navigate to edit Customer Basic information window. Verify that ECI ID accepted only 10 characters and displayed as expected with first 10 characters.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster15
Test Objective : Verify the ability to create a new ECI (Duplicate ECI Test).
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a Customer by entering all mandatory field values.
3. Search and navigate to view Customer window for newly created Customer.
4. Verify that expected error received as - Error-Each ECI Reference ID Value Must Be Unique To A Customer
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster16
Test Objective : Verify the ability to modify an existing ECI (Duplicate ECI Test).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to view Customer window for an existing Customer.
4. Update ECIID with duplicate value (Details -> ReferenceIDs). Save the changes.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL72ECIFieldOnCustomerMaster17
Test Objective : Verify the updated ECI Id field value under the TBD Addendum File for the Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search and navigate to Customer Basic information window for an existing Customer. Note down ECI ID.
4. Run SQL query and get the ECIID for a Customer from Database.
5. Verify that retrieved ECIID from DB is matched with Note down ECIID from Servicing application. The data retrieved and displayed in DB as - 
6. Search and navigate to view Customer window and update the ECI ID with more than 10 characters (Details -> ReferenceIDs). Save the details.
7. Verify that updated ECI ID is reflected in Database. The updated ECIID is stored and displayed in DB as - 
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL74AddressRecordinAllCaps01
Test Objective : Verify that capital letters are displayed in the address fields during new customer creation.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Customer by entering all mandatory field values.
3. Enter all the mandatory field values in Customer Basic information tab.
4. Enter all the mandatory field values in Risk information tab.
5. Enter all the mandatory field values in Classification information tab.
6. Enter all the mandatory field values in Additional information tab.
7. Enter all the mandatory field values in Address information tab.
8. Click on the quick Save button.
9. Verify that Customer record has been added successfully.
10. Verify that Customer Name1 auto populates and required fields like Street name 1, Street name 2, Street name 4, Postal code, City values are capitalized as expected.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL74AddressRecordinAllCaps02
Test Objective : Verify letters are displayed in all caps when creating a new 'Address Type' on an existing customer record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Customer Basic Information tab for an existing Customer.
4. Get the Customer Name from the Customer window.
5. Navigate to new Address window for a Customer.
6. Enter all the mandatory field values in Address Basic information.
7. Click on quick save button and save the Address information details.
8. Verify that Customer Name1 auto populates and required fields like Street Name 1, Street Name 2, Street Name 4, Postal code, City values are capitalized.
9. Verify that newly added Customer Address is displayed in pending two touch window.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL74AddressRecordinAllCaps03
Test Objective : Verify the capital letters are displayed in the address fields during new customer creation.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Customer Address information tab for an existing Customer and update the existing Address by entering all mandatory field values.
4. Enter all mandatory field values on Address Basic information window.
5. Verify that Customer Name1 auto populates and required fields like Street name 1, Street name 2, Street name 4, Postal code, City values are capitalized as expected.
6. Verify that newly updated Customer Address is displayed in pending two touch window.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL74AddressRecordinAllCaps04
Test Objective : Verify the field logging is enabled and capturing fields changes.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Customer Address window for an existing Customer.
4. Verify that Field Logging value (Country) is displayed as expected in Field Change History window.
5. Verify that Field Logging value (City) is displayed as expected in Field Change History window.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL74AddressRecordinAllCaps05
Test Objective : Verify that Customer Addresses is being populated with All Caps in database.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Customer Address window for an existing Customer.
4. Select the existing Address record and open in View mode. Note down Address data.
5. Run SQL query and retrieve customer address information for an existing customer.
6. Verify that existing Customer Address values from Servicing application are matched with retrieved DB values and displayed as expected in Database as - 
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO01
Test Objective : Verify the ability to process a Principal Payment Reversal transaction using Cash Offset L1 (Manual Lockbox).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Enter the Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the transaction bundle.
8. Create another new bundle and navigate to new Transaction window for a Loan.
9. Select the Loan and enter the transaction code as 3110.
10. Enter the transaction details on new Transaction window.
11. Open the Cash Item Editor window and verify that the Payment Type is not present in Payment Type dropdown that was used in previous transaction.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO02
Test Objective : Verify the ability to Process a Fee Payment using Cash Offset L1 (Manual Lockbox).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and get the Due Amount for Accruing Fee record.
4. Create a new bundle and navigate to new Transaction window for a Facility.
5. Select the Facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Enter the Cash Offset details.
8. Save and Submit the bundle. Login with approver credentials and post the transaction bundle.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO03
Test Objective : Verify the ability to Process a Loan Disbursement using Cash Offset 02 (Fed Wire).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction window.
6. Enter the Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO04
Test Objective : Verify the ability to Process a Principal Payment using Cash Offset 02 (Fed Wire).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Open the Cash Item Editor window and select Standing Instructions radio button. Verify that Payment Type (FED WIRE) is not exist in Specific Payment Type dropdown.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO05
Test Objective : Verify the ability to Process an Interest Payment using Cash Offset 01 (DDA).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3200.
5. Get the Billed and Unpaid Amount values from the bottom of transaction window.
6. Enter the transaction details on new Transaction window.
7. Enter the Cash Offset details.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO06
Test Objective : Verify the ability to Process an Interest Payment using Cash Offset 03 (ACH).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3200.
5. Get the Billed and Unpaid Amount values from the bottom of transaction window.
6. Enter the transaction details on new Transaction window.
7. Open the Cash Item Editor window and select Standing Instructions radio button. Verify that the Payment Type (ACH TRANSFER) is not exist in the Specific Payment Type dropdown.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO07
Test Objective : Negative test to ensure TL, LB & 03 are not available for selection. Process an Interest payment with 3200 using Cash Offset TL (teller), then LB (Lockbox) & 03 (ACH).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3200.
5. Get the Billed and Unpaid Amount values from the bottom of transaction window.
6. Enter the transaction details on new Transaction window.
7. Open the Cash Item Editor window and select Standing Instructions radio button. Verify That the Payment Type (ACH TRANSFER) is not exist in the Specific Payment Type dropdown.
8. Select Cash Offset radio button. Verify that the Payment Type (TL - TELLER) is not exist in the Specific Payment Type dropdown.
9. Verify that the Payment Type (LB - LOCKBOX) is not exist in the Specific Payment Type dropdown.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO08
Test Objective : Negative test to ensure TL, LB & 03 are not available for selection. Process Fee payment with 2700 using Cash Offset TL (teller), then LB (Lockbox) & 03 (ACH).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and get the Due Amount for the existing Fee record.
4. Create a new bundle and navigate to new Transaction window for a Facility.
5. Select the facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Open the Cash Item Editor window and select Standing Instructions radio button. Verify that the Payment Type (ACH TRANSFER) is not exist in the Specific Payment Type dropdown.
8. Select Cash Offset radio button. Verify that the Payment Type (TL - TELLER) is not exist in the Specific Payment Type dropdown.
9. Verify that the Payment Type (LB - LOCKBOX) is not exist in the Specific Payment Type dropdown.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO09
Test Objective : Verify the ability to Process a Loan Disbursement using Cash Offset L1 (Manual Lockbox).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3120.
5. Enter the transaction details on new Transaction window.
6. Open the Cash Item Editor window and select Cash Offset radio button. Verify that the Payment Type (LOCKBOX MANUAL POST) is not exist in the Specific Payment Type dropdown.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO10
Test Objective : Negative test, to ensure TL, LB & 03 are not available for selection. Process an Interest payment with 3200 using Cash Offset TL (teller), then LB (Lockbox) & 03 (ACH).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3200.
5. Get the Billed and Unpaid Amount values from the bottom of transaction window.
6. Enter the transaction details on new Transaction window.
7. Open the Cash Item Editor window and select Standing Instructions radio button. Verify that the Payment Type (ACH TRANSFER) is not exist in the Specific Payment Type dropdown.
8. Select Cash Offset radio button. Verify that the Payment Type (TELLER) is not exist in the Specific Payment Type dropdown.
9. Verify that the Payment Type (LOCKBOX) is not exist in the Specific Payment Type dropdown.
10. Verify that the Payment Types ('LIQ - USD', 'LOCKBOX MANUAL POST' and 'OTHER OFF NON FINANC') are exists in the Specific Payment Type dropdown.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL76CASHO11
Test Objective : Filtering offset available for selection by GL Unit, Currency & Portfolio. Process facility fee payment with 2700 with offset of 03 (ACH), TL (Teller) & LB (Lockbox).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and get the Due Amount of an existing Fee record.
4. Create a new bundle and navigate to new Transaction window for a Facility.
5. Select the facility and enter the transaction code as 2700.
6. Enter the transaction details on new Transaction window.
7. Open the Cash Item Editor window and select Standing Instructions radio button. Verify that the Payment Type (ACH TRANSFER) is not exist in the Specific Payment Type dropdown.
8. Verify that the Payment Type (DDA) is exist in the Specific Payment Type dropdown.
9. Select Cash Offset radio button. Verify that the Payment Type (TELLER) is not exist in the Specific Payment Type dropdown.
10. Verify that the Payment Type (LOCKBOX) is not exist in the Payment Type dropdown.
11. Verify that the Payment Types ('LIQ - USD', 'LOCKBOX MANUAL POST' and 'OTHER OFF NON FINANC') are exists in the Specific Payment Type dropdown.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID01
Test Objective : Verify that the Restrict Customer To This Portfolio (C U Portfolio Restrict Code J$RBCI) field is correctly labelled and placed back to the customer Classification Information tab.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Customer Classification Information tab.
4. Verify that the 'Restrict Customer To This Portfolio' (C U Portfolio Restrict Code J$RBCI) field is correctly labelled and placed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID02
Test Objective : Verify that the 'Restrict Customer To This Portfolio' (C U Portfolio Restrict Code J$RBCI) field is correctly labelled and placed back to the Customer Classification tab in the HTML view.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Customer Classification Information tab. Navigate to HTML view.
4. Verify that the 'Restrict Customer To This Portfolio' (C U Portfolio Restrict Code J$RBCI) field is displayed as expected in HTML view.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID03
Test Objective : Verify that the Portfolio (J$MTCC) field is on the Basic Information tab moved from previous User Code 3 field Classification Information tab.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Customer Basic Information tab.
4. Verify that the Portfolio field (J$MTCC) is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID04
Test Objective : Verify that the Portfolio field (J$MTCC) is reflected in the Customer Basic tab in the HTML view properly labeled Portfolio (previously named User Code 3).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Customer Basic Information tab. Navigate to HTML view.
4. Verify that Portfolio field (J$MTCC) is listed as expected in HTML view.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID05
Test Objective : Verify that when creating a new customer record, the Portfolio field (J$MTCC) value has to be selected before the GL Unit is selected.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Customer window.
4. Verify that GL Unit is dependant on Portfolio and GL Unit value is not populated when Portfolio value is <NONE>.
5. Select Portfolio value other than <NONE>.
6. Verify that GL Unit value is populated automatically as per Portfolio when user selects Portfolio value other than <NONE>.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID08
Test Objective : Verify the ability to search for a customer record that they are not authorized to (TWB - ACCESS TO ACM security designation).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search for a customer record that is not authorized to (TWB - ACCESS TO ACM security designation). Verify that System generates warning message.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID09
Test Objective : Verify that the 'Restrict Customer To This Portfolio' (C U Portfolio Restrict Code J$RBCI) field is correctly labeled and placed back to the Customer Classification tab in the HTML view.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Customer Classification Information tab. Navigate to HTML View.
4. Verify that 'Restrict Customer To This Portfolio' (C U Portfolio Restrict Code J$RBCI) field is listed in HTML view window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortfolioID10
Test Objective : Verify the Code 3, Portfolio fields are relabeled and moved to their designated screens on the Customer Level BI screen. Verify the Portfolio field is relabeed 'Restrict Customer To This Portfolio' on the Classification screen.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Customer window.
4. Verify that Code 3, Portfolio fields are relabeled and moved to their designated screens on the Customer.
5. Enter the Portfolio value other than <NONE>. Verify that GL Unit is non-editable and auto populated as per Portfolio.
6. Enter all the mandatory field values in Customer Basic Information tab. Save the details.
7. Navigate to Risk Information Tab and enter all the mandatory field values in Risk Information tab.
8. Navigate to Customer Classification Information Tab. Verify that Portfolio field is relabeled 'Restrict Customer To This Portfolio' on the Classification window. Enter Classification information and select Industry details.
9. Navigate to Customer Additional Information Tab and enter Customer Additional information.
10. Navigate to Customer Address Information Tab and enter Customer Address information.
11. Save the Customer details.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL78CustomerPortFolioID12
Test Objective : Verify Customer Basic and Classification Information in database.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Customer Basic information tab and get the Customer Basic Information (PORTFOLIO, GLUNIT, COST CENTER, SERVICING SECTION, SERVICING UNIT).
4. Navigate to existing Customer Classification information tab and get the 'RestrictCustomerToThisPortfolio' value.
5. Logout from Servicing application.
6. Verify that Customer Information is displayed as expected in the database.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules01
Test Objective : Verify the ability to change Payment Instruction ID for an existing Accruing Fee with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fee-Accruing window for an existing Facility and update the Collection Method with DDA. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules02
Test Objective : Verify the ability to create a new Accruing Fee with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility with Payment Instruction as DDA and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules03
Test Objective : Verify the ability to change Payment Instruction ID for an existing Accruing Fee with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fee-Accruing window for an existing Facility and update the Collection Method with ACH. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules04
Test Objective : Verify the ability to create a new Accruing Fee with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility with Payment Instruction as ACH and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules05
Test Objective : Verify the ability to change Payment Instruction ID for an existing Fixed Fee with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fixed-Fee window for an existing Facility and update the Collection Method with DDA. Save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules06
Test Objective : Verify the ability to create a new Fixed Fee with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Fixed-Fee record for an existing Facility with Collection Method as DDA and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules07
Test Objective : Verify the ability to change Payment Instruction ID for an existing fixed Fee with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fixed-Fee window for an existing Facility and update the Collection Method with ACH. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules08
Test Objective : Verify the ability to create a new Fixed Fee with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Fixed-Fee record for an existing Facility with Collection Method as ACH and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules09
Test Objective : Verify the ability to change Payment Instruction ID for an existing Pricing Option with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Pricing Option window for an existing Facility and update the Collection Method with DDA by entering all other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules10
Test Objective : Verify the ability to create a new Pricing Option with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Pricing Option for an existing Facility with Collection Method as DDA and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules11
Test Objective : Verify the ability to change Payment Instruction ID for an existing Pricing Option with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Pricing Option window for an existing Facility and update the Collection Method with ACH and by entering all other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules12
Test Objective : Verify the ability to create a new Pricing Option with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Pricing Option for an existing Facility with Collection Method as ACH and by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules13
Test Objective : Verify the ability to create a new Loan with Primary Repayment Schedule by using DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash Item information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules14
Test Objective : Verify the ability to create a new Loan with Primary Repayment Schedule by using ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash item information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules15
Test Objective : Verify the ability to create a new Loan with Primary and Secondary Repayment Schedule by using DDA as the Payment Instruction ID. And also validate DDA PI is changed to Customer to Remit after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash item information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to existing Repayment Secondary window for a Loan and open the existing record. Update the Collection Method with DDA and save the details.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules15_DP1
Test Objective : Validate DDA Collection Method JBILL update feature.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and open the existing record.
4. Verify that Collection Method is changed from DDA to Customer Remit after EOD
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules16
Test Objective : Verify the ability to create a new Loan with Secondary Repayment Schedule by using ACH as the Payment Instruction ID.And also validate ACH PI is changed to Customer to Remit after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash item information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to existing Repayment Secondary window for a Loan and open the existing record. Update the Collection Method with ACH and save the details.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules16_DP1
Test Objective : Verify the ability to create a new Loan with Secondary Repayment Schedule by using ACH as the Payment Instruction ID.And also validate ACH PI is changed to Customer to Remit after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and open the existing record.
4. Verify that Collection Method is changed from ACH to Customer Remit after EOD
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules17
Test Objective : Verify the ability to change existing Facility Pricing Option Secondary Billing Template with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Secondary Billing Template window for an existing Facility and update the Collection Method with DDA. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules18
Test Objective : Verify the ability to create a new Facility Pricing Option Secondary Billing Template with DDA as the payment instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Secondary Billing Template for an existing Facility Pricing Option with Collection Method as DDA and by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules19
Test Objective : Verify the ability to change the existing Facility Pricing Option Secondary Billing Template with ACH as the payment instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Secondary Billing Template window for an existing Facility and update the Collection Method with ACH. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules20
Test Objective : Verify the ability to create a new Facility Pricing Option Secondary Billing Template with ACH as the payment instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Secondary Billing Template for an existing Facility Pricing Option with Collection Method as ACH and by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules21
Test Objective : Verify the ability to change an existing Loan Primary Repayment Schedule with DDA as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Repayment Primary window for an existing Loan and update the Collection Method with DDA. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules22
Test Objective : Verify the ability to change an existing Loan Primary Repayment Schedule with ACH as Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Repayment Primary window for an existing Loan and update the Collection Method with ACH. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules23
Test Objective : Verify the ability to change an existing Loan Secondary Repayment Schedule with ACH as the Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Repayment Secondary window for an existing Loan and update the Collection Method with ACH. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules24
Test Objective : Verify the ability to change an existing Loan Secondary Repayment Schedule with DDA as the Payment Instruction ID.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Repayment Secondary window for an existing Loan and update the Collection Method with DDA. Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules25
Test Objective : Validate Facility Accruing Fee Billing info tab.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Fee-Accruing window for an existing Facility and update the Collection Method. Save the details.
4. Select Billing tab and update the Collection Method with different value then save the details. Verify that fields - Payment Instruction ID and Account Number are displayed as expected.
5. Update the Collection Method with invalid value and save the details. Verify that system throws an expected error message.
6. Update the Collection Method with valid value and save the details. Verify that record is updated successfully.
7. Navigate to Field Change History window. Verify that latest changes are captured in Field logging history.
8. Navigate to new Payment Instruction window for a Customer.
9. Create a Payment Instruction record with DDA as Cash Offset and by entering the required information but do not get it approved in two-touch mode.
10. Navigate to existing Fee-Accruing window for a Facility and open the existing record.
11. Select Billing tab and verify that newly approved Payment Instruction ID is appeared in the dropdown.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules26
Test Objective : Validate Payment Instructions and Templates.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a DDA Payment Instruction for an existing Customer by entering all mandatory field values.
4. Create a ACH Payment Instruction for an existing Customer by entering all mandatory field values.
5. Navigate to new Payment Instruction window for a Customer. Enter all mandatory infomation with DDA as Cash Offset, save the details and do not get it approved.
6. Navigate to new Payment Instruction window for a Customer. Enter all mandatory information with ACH as Cash Offset, save the details and do not get it approved.
7. Navigate to new Pricing Option window for an existing Facility.
8. Enter Pricing Option Basic information.
9. Enter Pricing Option Regulatory information.
10. Enter Pricing Option Repayment Schedule information.
11. Enter the Pricing Option Billing information and save the record.
12. Navigate to new Repayment Secondary window for a Billing Template.
13. Enter the Repayment Secondary Basic information.
14. Enter the Repayment Secondary Billing information. Save the details.
15. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
16. Update Primary and Secondary Repayment Schedule information and save the record.
17. Save and Submit the bundle. Login with approver credentials and post the bundle.
18. Navigate to existing Payment Instructions window for a Customer and open the existing record.
19. Enter/update the Payment Instruction Basic information and save the record.
20. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field. Then verify the error message
21. Update Primary and Secondary Repayment Schedule information and save the record.
22. Save the bundle. Verify that system throws an expected error message as - 'Error-Payment Instruction Id Is Invalid'.
23. Create a DDA Payment Instruction record for an existing Customer by entering all the mandatory field values.
24. Navigate to New Pricing Option window for an existing Facility.
25. Enter the Pricing Option Basic information.
26. Enter the Pricing Option Regulatory information.
27. Enter the Pricing Option Repayment Schedule information.
28. Enter the Pricing Option Billing information and save the record.
29. Navigate to the Repayment Secondary window for a Billing Template.
30. Enter the Pricing Option Secondary Billing Template Basic information.
31. Enter the Pricing Option Secondary Billing Template Billing information and save the record.
32. Navigate to the existing Payment Instruction window for a Customer and delete the existing Payment Instruction record.
33. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
34. Update Primary Repayment Schedule information and save the record.
35. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules33
Test Objective : Verify the Field Logging History for Collection Method changes.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Repayment Primary window for an existing Loan and update the Collection Method. Save the details.
4. Navigate to Field Change History window. Verify that latest changes of Collection Method field values are captured in field logging history.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules37
Test Objective : Validate DDA Collection Method JBILL update feature.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash item information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to the existing Repayment Secondary window for a Loan and open the existing record.
7. Verify that Collection Method field value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules37_DP1
Test Objective : Validate DDA Collection Method JBILL update feature.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and open the existing record.
4. Verify that Collection Method is updated and displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules38
Test Objective : Validate ACH Collection Method JBILL update feature.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Enter Cash item information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Navigate to existing Repayment Secondary window for a Loan and open the existing record.
7. Verify that Collection Method field value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules38_DP1
Test Objective : Validate ACH Collection Method JBILL update feature.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and open the existing record.
4. Verify that Collection Method field value is displayed as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules46
Test Objective : Validate the warning message for a transaction that requires a cash offset (including new loan bundle transactions) and if the default cash offset is not updated when the transaction is saved.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Select 'Save and Submit' option to submit the bundle. Verify that system throws an expected warning message - 'Do You Want To Proceed With The Default Cash Offset'.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules47
Test Objective : Verify Accruing fee will show up an exception when enter 0% rate in Two-Touch mode in Servicing application.request is to present a soft warning of 0.00% fee rate input.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the fields. Save and verify the soft warning as 'Please enter a valid rate in Accrual rate field'.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL79PIonRepaySchedules48
Test Objective : Verify the ability to check if Negative rate can be allowed in Accruing fee in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the fields. Save and verify the error as 'Rate must not be less than zero'.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL8ManualEntry01
Test Objective : Verify the Customer Master record Cost Center display plus Cost Center search functionality and impacts to other fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Search an existing Customer by using invalid Sort name. Verify that Customer record is not exist for used Sort name.
4. Navigate to new Customer window and enter the customer information for all tabs. Enter invalid GL unit and save the record.
5. Verify that system throws an error message as 'Invalid GL Unit'.
6. Enter the Primary, Secondary Officer and GL Unit field values in the Customer Basic information without Cost Center. Save the details.
7. Verify that system throws an error message as 'Error-Cost Center Cannot Be Blank'.
8. Verify that Cost Center field is displayed as expected.
9. Navigate to Cost center search window. Verify that Cost Center fields are displayed as expected.
10. Verify that Cost Center field value is not populated when an invalid search string is used as search data.
11. Verify that Cost Center is populated when a valid search string is used as search data.
12. Enter the Cost Center in the Customer Basic information. Save the details.
13. Modify the Customer Basic information without Servicing Unit. Save the details.
14. Verify that system throws an error message as 'Error-Servicing Unit Cannot Be Blank'.
15. Enter the Servicing Unit in the Customer Basic information. Save the details.
16. Verify that system throws an error message as 'Error-Servicing Section Cannot Be Blank'.
17. Enter the valid Servicing Section field value in the Customer Basic information. Save the details.
18. Navigate to the edit Customer window and change the GL Unit field value. Verify that Cost Center, Servicing Unit and Servicing Section values are blanked out.
19. Enter the Cost Center field value. Verify that Servicing Unit and Servicing Section values are still blanked out.
20. Enter the Servicing Unit value. Verify that Servicing Section value is still blanked out.
21. Enter the Servicing Section field value in the Customer Basic information. Save the details.
22. Navigate to edit Customer window and delete the Cost Center value from the Cost Center field. Verify that the Servicing Unit and Servicing Section values are blanked out.
23. Save the details. Verify that system throws an error message as 'Error-Cost Center Cannot Be Blank'.
24. Enter the Cost Center field value in the Customer Basic information.
25. Verify that Servicing Unit and Servicing Section fields are still blanked out.
26. Save the record. Verify that system throws an error message as 'Servicing Unit Cannot Be Blank'.
27. Enter the Servicing Unit field value in the Customer Basic information.
28. Verify that Servicing Section is still blanked out.
29. Save the record. Verify that system throws an error message as 'Error-Servicing Section Cannot Be Blank'.
30. Enter the valid Servicing Section field value in the Customer Basic information. Save the details.
31. Navigate to view Customer window.
32. Navigate to Field Logging window. Verify that changes are appeared as expected.
33. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL8ManualEntry02
Test Objective : Verify that Facility Master record Cost Center display plus Cost Center search functionality and impacts to other fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create and approve new Facility for an existing customer by entering all mandatory field values.
4. Navigate to the edit Facility window for newly created facility.
5. Verify that the Cost Center field is displayed as expected.
6. Verify that Cost Center value defaults to the GL Unit field.
7. Verify that Cost Center field value is not populated when an invalid search string is used as search data.
8. Verify that Cost Center is populated when a valid search string is used as search data.
9. Modify the Cost Center in the Servicing information tab.
10. Remove the value from Servicing Unit dropdown field.
11. Verify that the Servicing Unit and Servicing Section fields are blanked out.
12. Save the record. Verify that system throws an error message as 'Servicing Unit Cannot Be Blank'.
13. Enter the Servicing Unit field value in the Servicing tab. Save the details.
14. Verify that system throws an error message as 'Servicing Section Cannot Be Blank'.
15. Enter the Servicing Section field value and save the record.
16. Navigate to view Facility window.
17. Navigate to the Field Logging window.
18. Verify that all changes made in the Facility level are captured in Field Logging History.
19. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL8ManualEntry03
Test Objective : Verify the ability to test the Pricing Option Cost Center field and its functionality.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Pricing Option window for a Facility. Select Servicing Tab.
4. Verify that GL Unit, Cost Center, Servicing Unit and Servicing Section fields are displayed as expected.
5. Verify that Facility Pricing Option field values are not editable.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL8ManualEntry04
Test Objective : Verify that Loan Master record Cost Center display plus Cost Center search functionality and impacts to other fields.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Select the Rate Setting Complete checkbox in Accrual Schedule Borrower's information.
5. Select New Loan Tab. Enter Cash Item information.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Navigate to edit Loan window. Select Servicing Tab.
8. Verify that Cost Center field is displayed as expected.
9. Verify that Cost Center description and codes defaulted from the GL Unit value previously entered.
10. Verify that Cost Center is not populated when an invalid search string is used as search data.
11. Verify that Cost Center is populated when a valid search string is used as search data.
12. Search and update the Cost Center field value.
13. Verify that the Servicing Unit and Servicing Section fields are blanked out after changing the Cost Center field value.
14. Save the Loan record. Verify that system throws an error message as 'Servicing Unit Cannot Be Blank'.
15. Enter the Servicing Unit field value and save the record.
16. Verify that system an error message received as 'Servicing Section Cannot Be Blank'.
17. Enter the Servicing Section field value and save the record. Verify that record has been updated successfully.
18. Navigate to View Loan window and navigate to Field Logging window.
19. Verify that all changes made in the Loan level are captured in Field Logging History.
20. Logout from Servicing application.


TestCase Name : DataGenerator
1. Log into ACBS Servicing application with valid user credentials.
2. Create a Facility for an existing Customer by entering all mandatory field values.
3. Create a Fixed Fee record for an existing Facility by entering all mandatory field values.
4. Create a Accruing Fee record for an existing Facility by entering all mandatory field values.
5. Create a new Loan for an existing Facility with the help of new bundle and by entering all mandatory field values.
6. Select the Rate Setting Complete checkbox.
7. Navigate to new Loan tab to enter cash item information.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Logout from Servicing application.
10. Create a new Loan for an existing Facility with the help of new bundle and by entering all mandatory field values.
11. Select the Rate Setting Complete checkbox and navigate to new Loan tab to enter cash item information.
12. Create second loan with the help of same bundle and by entering all mandatory field values.
13. Select the Rate Setting Complete checkbox and navigate to new Loan tab to enter cash item information.
14. Save and Submit the bundle. Login with approver credentials and post the bundle.
15. Logout from Servicing application.
16. Login into ACBS Servicing application with valid user credentials.
17. Create a new Loan for an existing Facility with the help of new bundle and by entering all mandatory field values.
18. Save and Submit the bundle. Login with approver credentials and post the bundle.
19. Logout from Servicing application.
20. Login into ACBS Servicing application with valid user credentials.
21. Create a Facility for an existing Customer by entering all mandatory field values.
22. Logout from Servicing application.
23. Login into ACBS Servicing application with valid user credentials.
24. Create a new Loan for an existing Facility with the help of new bundle and by entering all mandatory field values.
25. Save and Submit the bundle. Login with approver credentials and post the bundle.
26. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC01
Test Objective : Verify the ability to create a new loan on DNT Portfolio.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC02
Test Objective : Verify the ability to create a new loan on DNT Portfolio.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC03
Test Objective : Verify the ability to create a new loan on DNT Portfolio.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC04
Test Objective : Verify the ability to create a new loan on DNT Portfolio.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC05
Test Objective : Verify the ability to create a new loan on DNT Portfolio.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC06
Test Objective : Verify the ability to create a new loan on DNT Portfolio.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTCreateNewLoanTC07
Test Objective : Verify the ability to create a new loan on DNT Portfolio with different RRC other than 697/710.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create an Accruing-Fee record for an existing Facility by entering all the mandatory field values.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Select Fed-Wire as Payment Instruction in Cash Offset details window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTLoanIntPayment
Test Objective : Verify the ability to make  intrest payment
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3200.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTLoanMiscFee
Test Objective : Verify the ability to create a miscellaneous fee
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3800.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTLoanNonPerfPartialChargeOff
Test Objective : Verify the ability to make non performing loan and partial charge off
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new bundle and navigate to Accounting method change window for a Loan. Enter all the mandatory fields in Accounting method change window.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Right click on Loan and select Create New Bundle option. Provide Bundle details and click Create Bundle button in Create Bundle window. Select Create -> Transaction in Bundle Manager Window.
6. Create Transaction with 3400 transaction code
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTLoanPrinAndIntPayment
Test Objective : Verify the ability to make partial principal payment and intrest payment
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 3100.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Create a new Bundle and navigate to new Transaction window.
8. Select the Loan and enter the transaction code as 3200.
9. Enter the transaction details on new Transaction window.
10. Enter Cash Offset details.
11. Save and Submit the bundle. Login with approver credentials and post the bundle.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : DNTLoanProcessRecovery
Test Objective : Verify the ability to make process recovery for a partially charged off loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 9100.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT01RealEstateN22
Test Objective : Create Real Estate Collateral Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Real Estate Collateral by entering Maturity Date as blank and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT02VehicleTitleN80
Test Objective : Create Vehicle Title Collateral Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Vehicle Title Collateral by entering Maturity Date as 1 year from current system date and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT03MarketableSecurityM03
Test Objective : Create Marketable Security Collateral Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Vehicle Title Collateral by entering Maturity Date as 1 year from current system date and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT04MarketableSecurityNegativeM03
Test Objective : Customer Marketable Security Collateral Negative.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Vehicle Title Collateral by entering Maturity Date as 1 year from current system date and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT05ModifyCollateral
Test Objective : Modify Collateral Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Modify the Collateral information and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT06VerifyCollateralReleaseUnreleasedViews
Test Objective : Verify release unreleased views in exisiting collateral window.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify + and - buttons are available to change view to and from all collateral (released & unreleased) from the default which displays unreleased
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT07CreateCustomerCollateral
Test Objective : Create a Customer collateral record and validate reference number is unique and starts with A.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral record for a Customer by entering all field values.
4. Reference Number - Verify field contains unique Collateral ID starting with A
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT08DelinkingCollateral
Test Objective : Delink Collateral records from facility via Collateral Document Tracker.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to unlink Collateral to Facility from Collateral Document Pooling window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT09LinkDocumentToCollateralDuringEOD
Test Objective : Collateral Document Tracker - Link a Document to a Collateral Record during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Collateral Document Tracker - Link a Document to Collateral record dring EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT10LinkingCollateralLoan
Test Objective : Linking Collateral Loan Records
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT11VerifyMultipleReleaseFunctionality
Test Objective : Verify by clicking the R icon (Release Records) the ability to release Collateral records at the same time.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Exisitng Collateral window.
4. Verify by clicking the R icon (Release Records) the ability to release them at the same time.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT12CreateCustomerCollateralExcetionRec
Test Objective : Create Marketable Security Collateral Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Vehicle Title Collateral by entering Maturity Date as 1 year from current system date and other mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT13LinkingCollateralRecordsExternalCustomer
Test Objective : Linking Collateral to external customer, Facility and Loan Records.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to link Collateral to Facility/Loan/Customer from Collateral Document Pooling window.
4. Go to Existing Collateral and validate X indicator next to maturity date is visible
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT14ReleaseCollateralRecordCustomer
Test Objective : Release Collateral Records Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Update Date Release field and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT15ReactivateCustomer
Test Objective : Collateral Record Reactivate Customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Update Date Release field and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT16LinkDocToCollateral
Test Objective : Verify the ability to Link a Document to a collateral Record
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT17LinkingCollateralRecordDuringEOD
Test Objective : Verify the ability EOD exception window
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Collateral Document Tracker - Link a Document to Collateral record dring EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT18VerifyDelinkingCollateral
Test Objective : Verify Delink Collateral records from facility via Collateral Document Tracker.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to unlink Collateral to Facility from Collateral Document Pooling window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT19ModifyCollateralTypeW
Test Objective : Modify Collateral(W) Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Modify the Collateral information and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT20ModifyCollateralTypeZ
Test Objective : Modify Collateral(Z) Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Modify the Collateral information and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT21CreateLoanCollateralTypeW
Test Objective : Create Loan Collateral Record of Type W
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral by entering field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT22CreateLoanCollateralTypeX
Test Objective : Create Loan Collateral Record of Type X
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral by entering field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT23CreateLoanCollateralTypeY
Test Objective : Create Loan Collateral Record of Type Y
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral by entering field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT24LinkCollateralFacilityRecordsDuringEOD
Test Objective : Collateral Document Tracker - Linking Collateral Facility Records during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Collateral Document Tracker - Link a Document to Collateral record dring EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT25ModifyCollateralTypeY
Test Objective : Modify Collateral Record(Y).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Modify the Collateral information and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT26ModifyCollateralTypeX
Test Objective : Modify Collateral(X) Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Collateral window for a Customer. Select an existing Collateral record and open. Modify the Collateral information and Save the changes.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT27LinkingCollateralToFacility
Test Objective : Link a Collateral Record to Facility
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT28LinkCollateralLoanRecordsDuringEOD
Test Objective : Collateral Document Tracker - Linking Collateral Facility Records during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Collateral Document Tracker - Link a Document to Collateral record dring EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT29LinkingCollateral
Test Objective : Linking Collateral Loan Records
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Collateral/Document Tracker window to link Collateral from Collateral Document Pooling window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT30CreateLoanCollateralTypeZ
Test Objective : Create Loan Collateral Record of Type W
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral by entering field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CT31CreateCustomerDocExceptionRecord
Test Objective : Create a Customer Doc Exception Record.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Collateral record for a Customer by entering all field values.
4. Reference Number - Verify field contains unique Collateral ID starting with A
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU01CreateNewCustomerViaATS
Test Objective : Verify the Creation of a new Customer via ATS Pull
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the edit Customer Basic information tab for an existing customer and fetch the Customer UCN.
4. Update the Customer UCN number to 
5. Verify that Customer record has been saved successfully.
6. Search and navigate to view Customer window for an existing Customer.
7. Update the ECI ID with 10 digit Alphanumeric value (Details -> ReferenceIDs). Save the changes.
8. Logout from Servicing application.
9. Login into ACBS Servicing application with valid user credentials.
10. Run SQL query and fetch the Customer data to be updated for ATS pulled Customer
11. Using ATS Pull enter the customer information for all tabs.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL18CustPaymentInstructions09
Test Objective : Verify the Currency Code defaults to USD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the Facid for Facility 
3. Login into ACBS Servicing application with valid user credentials.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU03FreeFormNote
Test Objective : Create Free From Note for Customer
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : ModifyFreeFromNote
Test Objective : Modify a Existing Free From Note.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Seaching customer with the customer id and modifing the free form note.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU05ModifyCustomerRecord
Test Objective : Verify the modification of a Customer and update IndustryClassification
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Edit Customer window for an existing Customer and select Classification icon.
4. Click on the quick Save button.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU14CreateNewCustomerForN2
Test Objective : Verify the Creation of a new Customer for N2
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Open a existing Customer and change the portfolio value.
4. Navigate to view Customer window.
5. Navigate to Field Logging window. Verify that changes are appeared as expected.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU07CustFlowdownNewValueBinocular
Test Objective : Verify Verify Customer flowdown new value update by clicking binocular for selection
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU08CustFlowdownNewValueDropDown
Test Objective : Verify Verify Customer flowdown new value update by clicking dropdown for selection
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU09CustFlowdownNewValueFolder
Test Objective : Verify Verify Customer flowdown new value update by clicking folder for selection
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU10CreateAddress
Test Objective : Creating New Adress for existing customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter the details in New adress window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU11ModifyCustReferenceRepayment
Test Objective : Modifying Reference Repayment for a customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the description for reference repayment schedule
3. Run SQL query and fetch the Facid for Facility 
4. Login into ACBS Servicing application with valid user credentials.
5. Modifying the existing Customer Reference Repayment
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU12NewDocomentForanExistingCustomer
Test Objective : Creating a docoment for an Existing customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU13ModifyDocument
Test Objective : Modify Document for an existing customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the type for Docoment
3. Login into ACBS Servicing application with valid user credentials.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU14CreateNewCustomerForN2
Test Objective : Verify the Creation of a new Customer for N2
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Customer by entering all mandatory field values.
3. Navigate to new Customer window and enter the customer information for all tabs. Enter invalid GL unit and save the record.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU15ModifyDocumentCreateException
Test Objective : Modify Document for an existing customer to create exception.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the type for Docoment
3. Login into ACBS Servicing application with valid user credentials.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU16ModifyDocumentDeleteException
Test Objective : Modify Document for an existing customer to delete exception.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the type for Docoment
3. Login into ACBS Servicing application with valid user credentials.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU17GLOverallBalanceSummaries
Test Objective : Creating New Adress for existing customer.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Existing GL Overall Balance Summaries window.
4. Enter GL Unit and GL Account field values then click on Apply button.
5. Right click on an existing record and select View icon.
6. Verify History Summary list shows the daily activity of posting 120 days prior to current date, that have impacted this GL Account / GL Unit combination.
7. Verify Customer/Obligor list is displayed in GL Loan Summary tab.
8. Verify Loan Summary list shows list of Obligor#/ Reference/ CA Number that have impacted this GL Account/ GL Unit combination.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU18CreateCustomerDuringEOD
Test Objective : Verify the ability EOD exception window
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Customer during EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CU19CustomerFreeFormNoteDuringEOD
Test Objective : Verify the ability EOD exception window
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Free From Note for the customer during EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA01CreateDelayedDrawTermFacility
Test Objective : Verify the ability to create a new delayed draw term facility under a customer
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Create a new Pricing Rule for an existing Facility.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA02CreateGuidenceLineFacility
Test Objective : Verify the ability to create a new guidence line facility under a customer
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA03CreateCreditLetterFacility
Test Objective : Verify the ability to create a new Letter of Credit facility under a customer
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA04CreatNewFacilityN2
Test Objective : Verify the ability to create a facility for N2 portfolio
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA05CreatePricingRuleOnExistingFacility
Test Objective : Verify the ability to create a pricing rule for an existing facility
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Pricing Rule for an existing Facility.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA06CreateNewFacilityViaATSPull
Test Objective : Verify the ability to create a new facility under a customer via ATS Pull
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the edit Facility Basic information tab for an existing facility and fetch the JPM FacID.
4. The JPM FacID:
5. Navigate to the edit Facility Basic information tab for an existing facility and update the JPM FacID.
6. Logout from Servicing application.
7. Login into ACBS Servicing application with valid user credentials.
8. Create a new Facility for the customer by entering all mandatory field values.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA07CreateTrueRatePricingOptionTemplate
Test Objective : Verify the ability to create a true rate pricing option template
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing Options window. Select New.
4. Enter Pricing Option Basic information.
5. Enter Pricing Option Regulatory information.
6. Enter Pricing Option Repayment Schedule information.
7. Enter the Pricing Option Billing information and save the record.
8. Click on the quick Save button to save the Pricing Option details.
9. Navigate to new Accrual Schedule window from Pricing Option.
10. Update the Accrual class ID and Change Timing fields.
11. Enter the Accrual Schedule basic information and save the record.
12. Navigate to existing Pricing Options window. Select the existing record and Open.


#########################################################################################################
Test Case Name : FA08FacilityCommitmentAmountDecrease
Test Objective : Facility Commitment Amount Decrease
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2320.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA09CreateFacilityFixedFee
Test Objective : Verify the ability to create a Facility Fixed-Fee
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Fixed-Fee record for an existing Facility with Collection Method as ACH and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA10FacilityCommitmentAmountIncrease
Test Objective : Facility Commitment Amount Increase
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2300.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA11MaturityDateExtention
Test Objective : Verify the ability to Extention the maturity date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Facility window.
4. Update the expiration date as number of days until maturity is greater than 60 days and save the record.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA12CreateVSRPricingOptionTemplateForDailyRateChanging
Test Objective : Verify the ability to create a vsr pricing option template
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing Options window. Select New.
4. Enter Pricing Option Basic information.
5. Enter Pricing Option Regulatory information.
6. Enter Pricing Option Repayment Schedule information.
7. Enter the Pricing Option Billing information.
8. Enter Pricing Option Misc information.
9. Click on the quick Save button to save the Pricing Option details.
10. Navigate to new Accrual Schedule window from Pricing Option.
11. Update the Accrual class ID and Change Timing fields.
12. Enter the Accrual Schedule basic information and save the record.
13. Navigate to existing Pricing Options window. Select the existing record and Open.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA13FacilityFeePaymentDNLoans
Test Objective : Verify the ability to make facility fee payment for DN Loans
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2300.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA14CreateFacilityAccruingFee
Test Objective : Verify the ability to create a facility accruing fee
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Fixed-Fee record for an existing Facility with Collection Method as ACH and by entering all the mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA15FacilityFieldLogging
Test Objective : Verify the field logging test at facility level
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window and then navigate to Fields Change History window.
4. Verify that all fields are displayed as expected in Field Change History window.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA16ModifyExistingPricingRuleOnFacility
Test Objective : Verify the ability to modify existing pricing rule for a facility
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing Rule window for a Facility and open the existing Pricing Rule record. Modify the Facility Pricing Rule information and Save the details.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA17FacilitySectionRecord
Test Objective : Verify the ability to add facility section record
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Add a Section/Sublimit record to the Facility by entering all field values. (From the Account Explorer, right-click a Facility record and select Create New, Facility Structure, Section/Sublimit. The New Section/Sublimit form appears. Complete the required fields (Limit Type , Limit Description and Limit Amount) and click Quick Save icon. Confirm that record is saved successfully).
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA18FacilitySublimitRecordAdditionalObligor
Test Objective : Verify the ability to add facility additional obligor
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Add a Section/Sublimit record to the Facility by entering all field values. (From the Account Explorer, right-click a Facility record and select Create New, Facility Structure, Section/Sublimit. The New Section/Sublimit form appears. Complete the required fields (Limit Type , Limit Description and Limit Amount) and click Quick Save icon. Confirm that record is saved successfully).
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA19FacilityPricingOption
Test Objective : Verify the ability to create a new facility option
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing Options window. Select New.
4. Enter Pricing Option Basic information.
5. Enter Pricing Option Risk information.
6. Enter Pricing Option Regulatory information.
7. Enter Pricing Option Repayment Schedule information.
8. Enter the Pricing Option Billing information and save the record.
9. Click on the quick Save button to save the Pricing Option details.
10. Navigate to new Accrual Schedule window from Pricing Option.
11. Update the Accrual class ID and Change Timing fields.
12. Enter the Accrual Schedule basic information and save the record.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA20FacilitySectionAmountDecrease
Test Objective : Facility Section Amount Decrease
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2320.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA21FacilitySublimitAmountDecrease
Test Objective : Facility Sublimit Amount Decrease
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2320.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA22FacilitySublimitProdGroup
Test Objective : Facility Sublimit Prod Group
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Add a Section/Sublimit record to the Facility by entering all field values. (From the Account Explorer, right-click a Facility record and select Create New, Facility Structure, Section/Sublimit. The New Section/Sublimit form appears. Complete the required fields (Limit Type , Limit Description and Limit Amount) and click Quick Save icon. Confirm that record is saved successfully).
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA23FacilitySublimitRecordCancel
Test Objective : Facility Sublimit Record Cancel
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2340.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA24FacilityFeeBasisCodeChange
Test Objective : Create a Transaction for Facility Fee Basis Code Change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2800.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityDefaultPaymentInstructions
Test Objective : Creating Facility Default Payment Instructions.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Default Payment Instructions to Deal Facility with Currency USD. Create New | Facility Structure | Payment Instructions - Default.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityDefaultPaymentInstructions
Test Objective : Creating Facility Default Payment Instructions.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Default Payment Instructions to Deal Facility with Currency USD. Create New | Facility Structure | Payment Instructions - Default.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA27FacilityFeeChangeCalculationCode
Test Objective : Create a Transaction for Facility Fee Change Calculation Code.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2780.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA28FacilityFeeStatusChange
Test Objective : Create a Transaction for Facility Fee Status Change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2860.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA29FacilityPayoffQuote
Test Objective : Create Facility Payoff Quote.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Bring facility <FacilityID> into session and navigate to Payoff Event Window (Right Click on Facility record and select context menu Special Actions || Process New || Payoff Event). Under Payoff Event Accounts, select the Loan Record <LN1>. Select Payoff Event type as ACCOUNT PAYOFF. Enter the date 2 days greater than the Current Effective Date from the Index Rate Table specified in the Accrual Schedule plus the Lag Days specified on the Accrual Schedule and click on calculate button.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA30FacilityFeeBillForward
Test Objective : Create a Transaction for Facility Fee Bill Forward.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2840.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA31FacilityReverseFee
Test Objective : Create a Transaction for Facility Fee Bill Forward.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2710.
5. Enter the transaction details on new Transaction window.
6. Enter all mandatory field values in Cash Item information.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA32FacilityFreeFormNote
Test Objective : Create a Facility Free From Note
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : ModifyFreeFromNote
Test Objective : Modify a Existing Free From Note.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Seaching customer with the customer id and modifing the free form note.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityFeeRateChange
Test Objective : Create a Transaction for Facility Fee Rate Change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2790.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityFeeWaiver
Test Objective : Create a Transaction for Facility Fee Waiver.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code as 2720.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA23FacilitySublimitRecordCancel
Test Objective : Facility Sublimit Record Cancel
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2340.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA37FacilityCreateDuringEOD
Test Objective : Verify the ability EOD exception window
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer during EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA38FacilityTiredBalanceAccruingFee
Test Objective : Create Tired Balance Accuring Fee.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Add multiple fee-accuring record and approve the records in Two-Touch window
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilitySplitBalanceAccruingFee
Test Objective : Create Split Balance Accuring Fee.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Add multiple fee-accuring record and approve the records in Two-Touch window
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityModifyFacilityAccruingFee
Test Objective : Modify Facility Accruing Fee.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Accruing-Fee window for an existing facility and approve the request in Two-Touch window.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA41FacilityPayoff
Test Objective : Create Facility Transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2340.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA42FacilityUnbillRebillInvoice
Test Objective : Create Facility Unbill Invoice.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Facility Invoices window and unbill the oldest invoice.
4. Navigate to edit Accruing-Fee window for an existing facility and update the Billing Info.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA43FacilityRemoveBillingAdd2AccrualSch
Test Objective : Remove address record for Billing Address 2 on Accruing Fee schedule
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Fee-Accruing window for a Facility and open the existing record.
4. Select Billing tab and remove billing address 2
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA44FacilityRemoveBillingAdd2FeeFxd
Test Objective : Remove address record for Billing Address 2 on Fixed Fee schedule
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Fixed Fee window for a Facility and open the existing record.
4. Select Billing tab and remove billing address 2
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA45FacilityNPCngOnDt000000
Test Objective : Verify error message NP Override status change to ON with end date 00 00 00
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Navigate to Transaction  window for an existing Loan. 
6. Select the Facility and enter the transaction code as 4100.
7. Enter the transaction details on new Transaction window.
8. Remove Override End Date and verify the Error Message
9. Verify the Exception message is displayed as expected when the date set to 0.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA44FacilityFeePaymentDuringEOD
Test Objective : Verify the ability EOD exception window
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Facility Fee payment during EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA47FacilityNPCngOffDt000000
Test Objective : Verify NP Override status change to off with end date 00 00 00
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Create New Bundle
6. Navigate to Transaction  window for an existing Facility.
7. Select the Facility and enter the transaction code as 4100.
8. Enter the transaction details on new Transaction window.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Login into ACBS Servicing application with valid user credentials.
11. Navigate to view Facility window.
12. Verify that overridden Non-Performing section has been added newly with expected default field values.
13. Run SQL query and fetch the NP Overrides Updates Label Value
14. Navigate to Facility History window for an existing facility.
15. Navigate to Field Change History window. Verify that all field changes are captured in the Field Logging History.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA48FacilityNPCngOnDtFuture6Months
Test Objective : Verify error message NP Override status change to ON with end date 6 Months Future
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Create New Bundle
6. Navigate to Transaction  window for an existing Facility.
7. Select the Facility and enter the transaction code as 4100.
8. Enter the transaction details on new Transaction window.
9. Enter date greater than parameter default (90 days) after current system date and verify the Error Message
10. Verify the Exception message is displayed as expected when date greater than parameter default (90 days).
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA49FacilityNPChangeDateTo1WeekPrior
Test Objective : Verify error message NP Override Date Change A week Prior to Current Date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Create New Bundle
6. Navigate to Transaction  window for an existing facility.
7. Select the Facility and enter the transaction code as 4100.
8. Enter the transaction details on new Transaction window.
9. Enter the date prior to current system date in Override End Date and verify the Error Message
10. Verify the Exception message is displayed as expected when the date set to prior to current system date.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA50FacilityNPChangeOnWithValidDate
Test Objective : Verify NP Override status can be change to ON with valid end date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Create New Bundle
6. Navigate to Transaction  window for an existing Facility.
7. Select the Facility and enter the transaction code as 4100.
8. Enter the transaction details on new Transaction window.
9. Enter date 2 months from Current System date
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Login into ACBS Servicing application with valid user credentials.
12. Navigate to view Facility window.
13. Verify that overridden Non-Performing section has been added newly with expected default field values.
14. Navigate to Facility History window for an existing facility.
15. Navigate to Field Change History window. Verify that all field changes are captured in the Field Logging History.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA51FacilityNPCngOnDt999999
Test Objective : Verify error message NP Override status change to ON with end date 99 99 99
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Navigate to Transaction  window for an existing Facility.
6. Select the Facility and enter the transaction code as 4100.
7. Enter the transaction details on new Transaction window.
8. Enter invalid  Override End Date and verify the Error Message
9. Verify the Exception message is displayed as expected when the date set to 99/99/99.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA52FacilityNPCngOnSysDt
Test Objective : Verify error message NP Override status change to ON with end date as system date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Navigate to Transaction  window for an existing Loan. 
6. Select the Facility and enter the transaction code as 4100.
7. Enter the transaction details on new Transaction window.
8. Enter current system date as Override End Date and verify the Error Message
9. Verify the Exception message is displayed as expected when the date set to current system date.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA53FacilityNPChangeOffStatusCorrection
Test Objective : Verify error message NP Override status change to off with end date 00 00 00
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Create New Bundle
6. Navigate to Transaction  window for an existing Facility.
7. Select the Facility and enter the transaction code as 4150.
8. Enter the transaction details on new Transaction window.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Login into ACBS Servicing application with valid user credentials.
11. Navigate to view Facility window.
12. Verify that overridden Non-Performing section has been added newly with expected default field values.
13. Run SQL query and fetch the NP Overrides Updates Label Value
14. Navigate to Facility History window for an existing facility.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA54NPoverrideDateExtend
Test Objective : Verify the Ability to extend the date NP Override status
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Risk Information tab.
4. Verify that Non-Performing Overriden field values are displayed as expected with the default values.
5. Run SQL query and fetch the NP Overrides Updates Label Value
6. Create New Bundle
7. Navigate to Transaction  window for an existing Facility.
8. Select the Facility and enter the transaction code as 4100.
9. Enter the transaction details on new Transaction window.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Login into ACBS Servicing application with valid user credentials.
12. Navigate to view Facility window.
13. Verify that overridden Non-Performing section has been added newly with expected default field values.
14. Run SQL query and fetch the NP Overrides Updates Label Value
15. Navigate to Field Change History window. Verify that all field changes are captured in the Field Logging History.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA55FacilityRestructure
Test Objective : Create Facility Restructure.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the Pledge Pool, Ineligible Flag code values from database for a facility.
3. Login into ACBS Servicing application with valid user credentials.
4. Bring facility <FacilityID> into session and navigate to Payoff Event Window (Right Click on Facility record and select context menu Special Actions || Process New || Payoff Event). Under Payoff Event Accounts, select the Loan Record <LN1>. Select Payoff Event type as ACCOUNT PAYOFF. Enter the date 2 days greater than the Current Effective Date from the Index Rate Table specified in the Accrual Schedule plus the Lag Days specified on the Accrual Schedule and click on calculate button.
5. Select the loan and enter the transaction code as 3100.
6. Enter the transaction details on new Transaction window.
7. Enter Cash Offset details.
8. Select the Save and Create Another menu in new Transaction window.
9. Select the loan and enter the transaction code as 2700.
10. Enter the transaction details on new Transaction window.
11. Enter Cash Offset details.
12. Select the Save and Create Another menu in new Transaction window.
13. Select the loan and enter the transaction code as 3250.
14. Enter the transaction details on new Transaction window.
15. Enter Cash Offset details.
16. Select the Save and Create Another menu in new Transaction window.
17. Select the facility and enter the transaction code as 2300.
18. Enter the transaction details on new Transaction window.
19. Select the Save and Create Another menu in new Transaction window.
20. Enter all mandatory field values in Cash Item window.
21. Save and Submit the bundle. Login with approver credentials and post the bundle.
22. Create a new Bundle and navigate to new Transaction window.
23. Select the new loan and enter the transaction code as 3240.
24. Enter the transaction details on new Transaction window.
25. Enter Cash Offset details.
26. Save and Submit the bundle. Login with approver credentials and post the bundle.
27. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA56FacilitySatisfiedDateUpdate
Test Objective : Facility Satisfied Date Update
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2320.
5. Enter the transaction details on new Transaction window.
6. Run SQL query and fetch the available facility Amount
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA56FacilitySatisfiedDateUpdate_DP1
Test Objective : Facility Commitment Amount Decrease
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that Satisfied Posting Date and Satisfied Effective Date values are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA55FacilitypricingRuleDelet
Test Objective : Verify the Ability to Delet a Facility Pricing Rule
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Pricing rule window. Select Pricing Rule record and delet.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA58CreateNonUSDFacility
Test Objective : Verify the ability to create a non-usd facility
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FA59CreateFacilityWithInvestors
Test Objective : Verify the ability to create a facility with Investors.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the facility currency
3. Login into ACBS Servicing application with valid user credentials.
4. Create a new Facility for the customer by entering all mandatory field values.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityOverrideFlag
Test Objective : Create Facility Override Flag.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Transaction  window for an existing Loan. 
4. Select the Facility and enter the transaction code as 4100.
5. Enter the transaction details on new Transaction window.
6. Remove Override End Date and verify the Error Message
7. Verify the Exception message is displayed as expected when the date set to 0.
8. Enter invalid  Override End Date and verify the Error Message
9. Verify the Exception message is displayed as expected when the date set to 99/99/99.
10. Enter current system date as Override End Date and verify the Error Message
11. Verify the Exception message is displayed as expected when the date set to current system date.
12. Enter the date prior to current system date in Override End Date and verify the Error Message
13. Verify the Exception message is displayed as expected when the date set to prior to current system date.
14. Enter date greater than parameter default (90 days) after current system date and verify the Error Message
15. Verify the Exception message is displayed as expected when date greater than parameter default (90 days).
16. Enter current system date + 2 days as OverrideEndDate and Save the transaction
17. Save and Submit the bundle. Login with approver credentials and post the bundle.
18. Login into ACBS Servicing application with valid user credentials.
19. Navigate to view Facility window.
20. Verify that overridden Non-Performing section has been added newly with expected default field values.
21. Logout from Servicing application.


#########################################################################################################
Test Case Name : FacilityPricingGrid
Test Objective : Create Facility Pricing Grid.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Pricing Grid - Header or Other Agreed Term to the Facility - FCT1 by entering all field values. (From the Favorites or Account Explorer, right-click a Facility record and select Create New, Facility Structure, Pricing Grid. The New – Pricing Grid form appears. Complete the required fields (Grid Id, Description and Status) and click Quick Save icon. Confirm that record is saved successfully.)
4. Create Pricing levels to the Facility - FCT1 by entering all field values. (Select New Image. The New-Grid Pricing Level form appears. The New – Pricing Grid form appears. Complete the required fields (Pricing Level, Short Description and Narrative Description) and click Quick Save icon. Confirm that record is saved successfully.)
5. Create Pricing Categories to the Facility - FCT1 by entering all field values. (Select New Image. The New-Grid Pricing Item form appears. Complete the required fields (Pricing Category, Description and Change Timing Code) and click Quick Save icon. Confirm that record is saved successfully.)
6. Modify the Pricing Rate Values in Edit-Pricing Grid Window. Click Quick Save icon. Confirm that Rates Have Been Saved successfully.
7. Create a Pricing Link by selecting one Pricing Category with Facility Accrual Fee and Facility Pricing Option Accrual schedule <Category-1> (Actions | Pricing Links).
8. Create a Grid Pricing Level change to GPL-2 transaction bundle (Right click on facility record and select Special Actions | Process New | Grid Pricing Level Change). Enter values for all mandatory fields in New Grid Pricing Level Change (Effective Date: Current Date). Click Quick Save icon. Verify the existence of the 2 transactions In Transactions Tab. Verify the Pricing Link indicates the Pricing Category in All Linkage Tab.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN01ChangeFreqQrtlyToMnthly
Test Objective : On an existing loan with change timing on Anniversary change the index frequency from quarterly to monthly.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for an existing Loan.
4. Select the existing Accrual Schedule record. Click on Open icon.
5. Update the Rate Index and Index Frequency in the Accrual Schedule window.
6. Update the Next Effective Date in the Accrual Schedule window.
7. Click on the quick save button.
8. Verify that newly updated Accrual Schedule is displayed in pending two touch window.
9. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN02ChangeFreqMnthlyToQrtly
Test Objective : On an existing loan with change timing on Anniversary change the index frequency from monthly to quarterly.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for an existing Loan.
4. Select the existing Accrual Schedule record. Click on Open icon.
5. Update the Rate Index and Index Frequency in the Accrual Schedule window.
6. Update the Next Effective Date in the Accrual Schedule window.
7. Click on the quick save button.
8. Verify that newly updated Accrual Schedule is displayed in pending two touch window.
9. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN03InvalidRRCCode
Test Objective : Verify updated RRC COde from iCRD back to original RRC value at the Facility level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Miscellaneous tab.
4. Update Facility Miscellaneous details and save it.
5. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN03InvalidRRCCode_DP1
Test Objective : Verify updated RRC Code from iCRD back to original RRC value at the Facility level.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to view Facility window for an existing Facility. Select Miscellaneous tab and get RRCCodeDropdown value.
4. Verify after EOD RRC Code value back to original RRC value at Facility level.
5. Navigate to View Loan window for an existing Loan and select Regulatory icon.
6. Verify after EOD RRC Code value back to original RRC value at Loan level.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN04BilledFeeWaiver
Test Objective : Verify Loan billed fee waiver.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3360.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN05NewFreeFormNote
Test Objective : Create Free From Note for Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to New - Notes and Document Attachments window and enter mandatory fields.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN06LoanConversionToPrime
Test Objective : Verify the ability to convert a loan to prime
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Navigate to Cashoffset window and enter Cash Offset details.
5. Create another Transaction by using new Transaction option.
6. Select the loan and enter the transaction code as 3140.
7. Enter the transaction details on new Transaction window.
8. Enter Cash Offset details.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN07AdjustChargeTransaction
Test Objective : Verify Loan Accrual Schedule Adjust charge transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3240.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN08CopyActiveAccrSchlAndCancelExist
Test Objective : Verify Copy an existing active accrual schedule and have system cancel the existing one.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for the Loan. Select and open the existing record.
4. Fetch the values for the fields: Year Basis, Rate Calculation Method, Spread Rate, Rate Index, Index Frequency, Calendar, Next Effective date and Next due Business Day adjustment.
5. Navigate to the existing Accrual Schedule window and select new icon.
6. Verify that Schedule ID and Effective Dates are blank on the new Accrual Schedule window.
7. Verify that Rate Calculation Method, Year Basis, Spread Rate, Index Rate, Rate index, Index frequency, Change timing, Calendar, Rate Set lead days, Next effective date and Next due Business Day Adjustment field values are displayed as expected.
8. Create an Accrual Schedule record by entering all mandatory field values in Basic information and modifier tabs. Save the details.
9. Navigate to Bundle viewer and verify that there is a new Bundle Pending Approval for cancellation of the existing Accrual Schedule.
10. Verify that Bundle contains Transaction data as 'CHG ACCRL SCHE STATUS = CANCELLED'.
11. Approve and Post the Bundle.
12. Navigate to the existing Accrual Schedules window. Select and open the existing record.
13. Verify that existing Accrual Schedule status is cancelled as expected.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN09CreateLoanRolloverWithIncrease
Test Objective : Create Loan Rollover With Increase.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Rollover/Renewal window by selecting the Loan.
4. Enter all the mandatory field values in Rollover/Renewal information.
5. Select the Rate Settings tab and enter Rate setting Borrower's information.
6. Navigate to Rollover Rate window. Enter all the mandatory field values.
7. Select the Rate setting complete checkbox.
8. Fetch the last Bill Date
9. Select the Rate Settings tab and enter Rate setting Borrower's information.
10. Save and Submit the bundle. Login with approver credentials and post the bundle.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN10LoanModifyFreeFormNote
Test Objective : Modify an existing Free From Note for Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Searching Loan with the Loan id and modifing the free form note.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN11FlatFeeExistingLoan
Test Objective : On an existing loan pay flat fee
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the loan and enter the transaction code as 3820.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN12ChangeExistMaturityDate999999
Test Objective : Verify Loan change existing maturity date from 999999 to specific date and modify miscellaneous screen.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to edit Loan window and update maturity date to a date in the future(one year from current system date).
4. Save the Loan details and verify loan changes will be submitted for two touch approval.
5. Verify that Demandable checkbox is displayed as expected with unchecked.
6. Enter Loan Miscellaneous Information details.
7. Click on the quick save button.
8. Verify that newly updated Loan is displayed in pending two touch window.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN13InterestBillWaiverTrans
Test Objective : Verify Loan Interest Bill Waiver Transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3280.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN14SpreadRateChange
Test Objective : Verify Loan Spread Rate Change.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3630.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN15MatchFundingNewLoanN2
Test Objective : Utilize facility with blank PIP Value and blank PP Value. Enter advance transaction (3120) for amount to cause facility to be overdrawn. Create a bundle to enter transactions on the loan. After batch PIF should be OVD and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Loan window.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Enter New Loan tab information.
6. Select Servicing Tab. Enter Servicing tab information.
7. Select Risk Tab. Enter Risk tab information.
8. Select Regulatory Tab. Enter Regulatory tab information.
9. Select Accrual Schedule icon from left navigation pane. Enter Accrual Schedule Borrower's information.
10. Navigate to new Accrual Schedule window.
11. Verify the Match Funding checkbox is checked.
12. Update the New Loan Number field.
13. Enter Accrual Schedule Basic information. Save the details.
14. Select Repayment Schedule icon from left navigation pane. Enter the Repayment Schedule Borrower's information.
15. Navigate to new Repayment Schedule window. Enter the Repayment Schedule Basic information.
16. Select Billing Tab. Enter the Loan Repayment Schedule Billing information. Save the details.
17. Navigate to Cashoffset window and enter Cash Offset details.
18. Verify Eligible For Assignment checkbox defaults to check marked.
19. Enter Match Funding Request information.
20. Save and Submit the bundle. Login with Approver credential and post the bundle.
21. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN16IncreaseOnMaturityDate
Test Objective : Utilize facility with blank PIP Value and blank PP Value. Enter advance transaction (3120) for amount to cause facility to be overdrawn. Create a bundle to enter transactions on the loan. After batch PIF should be OVD and PP still blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3120.
5. Enter the transaction details on new Transaction screen.
6. Enter Cash offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN17MatchFundingManualRepricing
Test Objective : Match Funding- Manual Repricing - Existing Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Rollover/Renewal window by selecting the Loan.
4. Enter all the mandatory field values in Rollover/Renewal information.
5. Select the Rate Settings tab and enter Rate setting Borrower's information.
6. Navigate to Rollover Rate window. Enter all the mandatory field values.
7. Select the Rate setting complete checkbox.
8. Select the Rate Settings tab and enter Rate setting Borrower's information.
9. Save and Submit the bundle. Login with Approver credential and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN18LoanBasisCodeTrans
Test Objective : Perform a Loan Basis Code transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3690.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN19AccrualScheduleAdjustChargeTrans
Test Objective : Verify Loan Accrual Schedule Adjust charge transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3240.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN20CoversionToPrime
Test Objective : Verify the ability for loan convertion to prime
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the non-prime loan from Database.
3. Login into ACBS Servicing application with valid user credentials.
4. Create a new Bundle and navigate to new Transaction window.
5. Select the Loan and enter the transaction code as 3140.
6. Enter the transaction details on new Transaction window.
7. Create another Transaction from the same Transaction window. Create a Transaction with 9100 transaction code by entering all mandatory field values.
8. Enter Cash Offset details.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN21LoanDisbursementReversalTrans
Test Objective : Perform a Loan Disbursement Reversal transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3130.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN22LoanFeePymtTrans
Test Objective : Perform a Loan Fee Payment transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3820.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN23LoanIntrstRebateTrans
Test Objective : Perform a Loan Interest Rebate transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3207.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN24LoanIntrstRebateRevrslTrans
Test Objective : Perform a Loan Interest Rebate Reversal transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3209.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN25NewLoanFixedRateWithBallonPayment
Test Objective : Verify the ability to create a loan with balloon payment
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Navigate to Cashoffset window and enter Cash Offset details.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN26CreatePrimeLoan
Test Objective : Verify the ability to convert a Prime Loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Navigate to Cashoffset window and enter Cash Offset details.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN27newLoanPrinciplePlusInterestBasic365Actual
Test Objective : Verify the ability to Create a loan where in Repayment schudle Billing Type is D - Prin Amt Plus Int Basic 365 Actual
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN28newLoanPrinciplePlusInterest
Test Objective : Verify the ability to Create a loan where in Repayment schudle Billing Type is D - Prin Amt Plus Int
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Verify that True Rate checkbox is checked.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN29NewLoanSecondRepayReset1st
Test Objective : Verify the ability to 2nd Repay reset 1st
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Enter Secondary Repayment Schedule details.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN30LoanInterestWaiver
Test Objective : Verify the ability to waived an Interest of a loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code as 3220.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN31ReverseLoanFeePymtlTrans
Test Objective : Perform a Reverse Loan Fee Payment transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3825.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN32LoanPrnBillWaiverTrans
Test Objective : Perform a Loan Principal Bill Waiver transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3190.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN33PrinPayReverse1Trans
Test Objective : Perform a Principal Payment Reverse transaction on an existing loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3110.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN34MatchFundingPartialPrinPayTrans
Test Objective : Perform a match funding partial principal pay before loan maturity
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3100.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN34MatchFundingPartialPrinPayTrans
Test Objective : Perform a match funding partial principal pay before loan maturity
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window. Verify that 3700 rounding changes are reflected as expected.
4. Navigate to existing Accrual Schedule window for a Loan and open an existing Accrual Schedule record.
5. Verify that Match Funding checkbox is initially unchecked.
6. Verify that New Loan Number field is displayed with blank as expected.
7. Verify that Cost of Fund Rate value is reset to zero.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN35LoanPayoffQuote
Test Objective : Verify the ability to validate Loan Payoff information data values with respect to payoff dates in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Payoff Information window. (From the Account Explorer or Favorites view highlight the desired Customer, Facility, Loan. Right click the Loan and select Special Actions > Loan Payoff). The Loan Payoff Information form appears.
4. Capturing the Payoff info before updating the date
5. Provide Payoff Date To Use - Enter 1 week from current system date
6. Accrue To Date matches the Payoff Date To Use entered
7. Capturing the Payoff info after updating the date
8. Account Payoff field amount is updated. The Interest and Fee amounts are updated and display in the body of the screen.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN36LoanDefaultPaymentInstructions
Test Objective : Creating Loan Default Payment Instructions.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Default Payment Instructions to Deal Loan with Currency USD. Create New | Loan Servicing| Payment Instructions - Default.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN37LoanDefaultPaymentInstructions2
Test Objective : Creating Loan Default Payment Instructions from maintain existing.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create Default Payment Instructions to Deal Loan with Currency USD. Maintain Existing | Loan Servicing| Payment Instructions - Default.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN38ModifyLoanPrimaryRepayment
Test Objective : Modify Loan primary Repayment Schedule.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Primary window and open existing record.
4. Enter the Repayment Primary Schedule information.
5. Change Bill address2 to <NONE> and save the details.
6. Verify two touch is pending approval by clicking on Two Touch from view menu on left.
7. Approve Primary Repayment Schedule record.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN39NewLoanWithNegativeFloor
Test Objective : Verify the ability to create a new Loan with negative floor and next effective date in accrual schedule as invalid business day and negative minimum base rate in accrual modifiers then verify that next effective date changes to valid business day after approval.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
8. Verify Next effective date and Next Set Date changed to next valid business day
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN40NewLoanWithLag
Test Objective : New loan with simple with Lag. Run EOD and review statements portrait.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Navigate to Cashoffset window and enter Cash Offset details.
6. Save and Submit the bundle. Login with Approver credential and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN41BillTypeJWithTrueRateY
Test Objective : Billing Type value of 'J' Bill all balance(aka Maturity bill) cannot be setup with the True Rate checkbox of 'Y'.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Repayment Secondary window for a Loan and open the existing record.
4. Verify True Rate checkbox is not populated.
5. Enter Secondary Repayment Billing Information.
6. Click on Quick Save button to save the record.
7. Confirm that success message displayed in status bar as - Record Has Been Deleted.
8. Approve the Secondary Repayment Schedule record.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN42DeleteLoanSecondaryRepaymentSchedule
Test Objective : Verify the ability to delete Loan Secondary Repayment schedule preferably J-Bill Bill type.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Existing Secondary Repayment window.
4. Delete the Existing Secondary Repayment schedule by Right Click and Delete. Click OK to Confirm.
5. Navigate to Existing Secondary Repayment window.
6. Verify Repayment Secondary record has been deleted.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN43DeleteAndCreateLoanSecondaryRepayment
Test Objective : Verify the ability to Delete Secondary Repayment Schedule and Create New.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Existing Secondary Repayment window.
4. Delete Secondary Repayment Schedule with Bill Type - J-Bill All Balances
5. Create Secondary Repayment Schedule with Bill Type - J-Bill All Balances
6. Approve both Create and Delete Secondary Repayment Schedule requests
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN44PayoffAnExistingLoan
Test Objective : Payoff an existing loan Lender type (900) to verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200 and 3820) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN44PayoffAnExistingLoan_DP1
Test Objective : Payoff an existing loan Lender type (900) to verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Navigate to Miscellaneous details window for an existing Loan.
3. Verify that Satisfied Posting and Effective Dates are displayed as expected.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN45UpdateChangeTimingOnExistingLoan
Test Objective : Manual update Change Timing on an existing Loan from A to a value of T where the True Rate checkbox is not checked.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan window and update Rate MAturity date.
4. Navigate to existing Accrual Schedule window for a Loan and open an existing Accrual Schedule record. Update Accrual Schedule Basic information window.
5. Verify that Change Timing, Index Frequency, Calendar, Next Effective DAte and Next Due Business Day Adjustment values are updated in Accrual Schedule window.
6. Verify that True Rate checkbox is checked in Primary Repayment Schedule window.
7. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN46RolloverOnDemandLoanWithCurrentEffecitveDate
Test Objective : Process a rollover on a Demand Loan with Current system date as the effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Rollover/Renewal window by selecting the Loan.
4. Enter all the mandatory field values in Rollover/Renewal information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN47RolloverOnDemandLoanWithBackdatedEffecitveDate
Test Objective : Process a rollover on a Demand Loan with backdated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Rollover/Renewal window by selecting the Loan.
4. Enter all the mandatory field values in Rollover/Renewal information.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN48NewLoanWithTrueRateIndexSetting
Test Objective : Verify the ability to Create a loan with True Rate Index Setting.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Update the Next Effective Date as invalid date in the Accrual Schedule window.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Verify that True Rate checkbox is checked.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN49NewLoanWithPositiveFloor
Test Objective : Verify the ability to create a new Loan with positive minimum base rate in accrual modifiers.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN50NewSOFRCompoundingRateOvernightLoan
Test Objective : Verify the ability to create new SOFR Compounding Rate Overnight Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN51NewSOFRCompoundingBalanceOvernightLoan
Test Objective : Verify the ability to create new SOFR Compounding Balance Overnight Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN52MatchFundingTransaction3700BatchGenerate
Test Objective : Verify the ability to create a new Loan with positive minimum base rate in accrual modifiers.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Enter New Loan tab information.
6. Select Servicing Tab. Enter Servicing tab information.
7. Select Regulatory Tab. Enter Regulatory tab information.
8. Select Miscellaneous Tab. Enter Miscellaneous tab information.
9. Select Accrual Schedule icon from left navigation pane. Enter Accrual Schedule Borrower's information.
10. Navigate to new Accrual Schedule window.
11. Enter Accrual Schedule Basic information.
12. Verify the Match Funding checkbox is checked.
13. Update the New Loan Number field. Save the details.
14. Select Repayment Schedule icon from left navigation pane. Enter the Repayment Schedule Borrower's information.
15. Navigate to new Repayment Schedule window. Enter the Repayment Schedule Basic information.
16. Select Billing Tab. Enter the Loan Repayment Schedule Billing information. Save the details.
17. Navigate to Cashoffset window and enter Cash Offset details.
18. Verify Eligible For Assignment checkbox defaults to check marked.
19. Select the Rate Setting Complete checkbox.
20. Save and Submit the bundle. Login with approver credentials and post the bundle.
21. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN52MatchFundingTransaction3700BatchGenerate_DP1
Test Objective : Verify that Match Funding details(check box, NL number and Cost of Funds Rate ) are reset(not present) after EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan History window for an existing loan.
4. Verify that 3700 transaction displays releasing COF
5. Verify Accounting method displays non-performing and close Loan History window
6. Navigate to existing Accrual Schedule window for a Loan. Open the existing Accrual Schedule record.
7. Verify Match Funding Check box is not checked and NL numbers, Cost Of Funds Rate are empty
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN53UnbillAndRebillALoanInvoice
Test Objective : Unbill and Rebill a Loan invoice.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the due date of third last invoice
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to Loan Invoices window
5. Unbill the invoice for Loan
6. Create a new Bundle and navigate to new Transaction window for a Loan.
7. Select the Loan and enter the Transaction code as 3691.
8. Enter the transaction details on new Transaction window.
9. Select 'Save and Create Another' menu item in New Transaction window.
10. Enter Transaction code as 3692. Select/enter other details and navigate to new Transaction window.
11. Select 'Save and Create Another' menu item in New Transaction window.
12. Enter Transaction code as 3693. Select/enter other details and navigate to new Transaction window.
13. Save and Submit the bundle. Login with approver credentials and post the bundle.
14. Navigate to existing Primary Repayment Schedule Window and open the existing record.
15. Enter the Repayment Primary Schedule information.
16. Approve the repayment schedule
17. Navigate to existing Primary Repayment Schedule Window and perform bill now.
18. Navigate to Loan Invoices window and verify that invoice has been generated.
19. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN54PrincipalRepaymentScheduleResetToQuarterly
Test Objective : Principal Repayment Schedule was setup as monthly, reset to quarterly.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the due date of third last invoice
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to Loan Invoices window
5. Unbill the invoice for Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
6. Approve the repayment schedule
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN54PrincipalRepaymentScheduleResetToQuarterly_DP1
Test Objective : Principal Repayment Schedule was setup as monthly, reset to quarterly.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN55newLoanPrincipleInclInterest
Test Objective : Verify the ability to Create a loan where in Repayment schudle Billing Type is F - PMT AMOUNT INCL INT with maximum accrual amount
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN56newLoanPrincipleInclInterestBasic360
Test Objective : Verify the ability to Create a loan where in Repayment schudle Billing Type is F - PMT AMOUNT INCL INT and Int Basic 360/30
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Verify that True Rate checkbox is unchecked.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN57newLoanPrinciplePlusInterestWithRepaySchudle
Test Objective : Verify the ability to Create a loan where in Repayment schudle Billing Type is D - Prin Amt Plus Int and selecting the Radio button for Repayment List
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query and fetch the description for reference repayment schedule
4. Run SQL query and fetch the Facid for Facility 
5. Modifying the existing Customer Reference Repayment
6. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN58NewVariableRateLoan
Test Objective : Verify the ability to Create a New Variable Rate Loan
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Run SQL query and fetch the description for reference repayment schedule
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN59NewLoanWithPrepaymentPenalty
Test Objective : Verify the ability to Create a loan with Prepayment Penalty
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Save and Submit the bundle. Login with approver credentials and post the bundle.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN60NewLoanPrinAndIntDifferentScheudle
Test Objective : Verify the ability to Create a loan with Prin And Int Different Schedules.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Fields.
4. Enter Secondary Repayment Schedule details.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN61MinimumBaseRateChngTrans
Test Objective : Perform a minimum base rate change transaction on an existing loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3665.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN62LoanUnbillRebillTrans
Test Objective : Perform a loan unbill rebill transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Select the Loan and enter the Transaction code as 3610.
4. Enter the Transaction details on new Transaction window.
5. Select the Save and Create Another menu in new Transaction window.
6. Select the Loan Account in Transaction Account Selector window and search Transaction code 3610 and click Select button.
7. Enter Cash Offset details.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Unbill the invoice for a Loan and update the Primary Repayment Schedule information with the date of the invoice that was unbilled.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN62LoanUnbillRebillTrans
Test Objective : Perform a loan unbill rebill transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN63AutomatedBilledWaiver
Test Objective : Perform a automated billed waiver of maturity invoices after pay-off transaction
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Select the Loan and enter the Transaction code as 3100.
4. Enter the Transaction details on new Transaction window.
5. Enter Cash Offset details.
6. Select the Save and Create Another menu in new Transaction window.
7. Select the Loan Account in Transaction Account Selector window and search Transaction code 3200 and click Select button.
8. Enter Cash Offset details.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN63AutomatedBilledWaiver
Test Objective : Perform a automated billed waiver of maturity invoices after pay-off transaction
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoices are generated after EOD.
4. Navigate to Loan History window. Verify changes are reflected as expected.
5. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN64LoanCloseOutEffDateErrorValidation
Test Objective : Posting of Loan Close Out transaction- do not continue transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window.
4. Select the Loan and enter the transaction code as 9990.
5. Enter the transaction details on new Transaction window.
6. Click on Save and Submit button.
7. Logout from Servicing application.
8. Login into Servicing application with valid approver credentials.
9. Navigate to Bundle window.
10. Right click on bundle and select Approve and Post Bundle.
11. Right click on bundle and select Cancel bundle.
12. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN65UpdateChangeTimingFromTToA
Test Objective : Manual update Change Timing on an existing Loan from T to a value of A where the True Rate checkbox is already checked.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to existing Accrual Schedule window for a Loan and open an existing Accrual Schedule record. Update Accrual Schedule Basic information window.
4. Verify that True Rate checkbox is not checked in Primary Repayment Schedule window.
5. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN66NewLoanDuringEOD
Test Objective : Create a new Loan during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Loan window.
4. Logout from the Servicing application.


#########################################################################################################
Test Case Name : LN67SplitMonthEndInvoiceRFRCompRateS
Test Objective : Split Month End Invoice RFR Compound Rate S.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN67SplitMonthEndInvoiceRFRCompRateS
Test Objective : Split Month End Invoice RFR Compound Rate S.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN68SplitMonthEndInvoiceRFRSimpleLagS
Test Objective : Split Month End Invoice RFR Simple LAG S.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN68SplitMonthEndInvoiceRFRSimpleLagS_DP1
Test Objective : Split Month End Invoice RFR Simple LAG S.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN69LoanFlatFeeChrg
Test Objective : Perform a flat fee charge transaction on existing loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 3800.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN70LoanPayoff
Test Objective : Perform a loan pay-off transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Select the Loan and enter the Transaction code as 3100.
4. Enter the Transaction details on new Transaction window.
5. Enter Cash Offset details.
6. Select the Save and Create Another menu in new Transaction window.
7. Select the Loan Account in Transaction Account Selector window and search Transaction code 3200 and click Select button.
8. Enter Cash Offset details.
9. Save and Submit the bundle. Login with approver credentials and post the bundle.
10. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN71LoanCloseOutAccStatusError
Test Objective : Perform a Loan closeout transaction on a normal loan to validate accounting status error message
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Select the Loan and enter the transaction code as 9990.
5. Enter the transaction details on new Transaction window.
6. Click on the quick save button.
7. Verify that system throws an error message as 'Error-Loan Close-Out Transaction Cannot Be Processed On This loan Due To Incorrect Accounting Status Code'.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN72LoanDisbursementDuringEOD
Test Objective : Perform a Loan disbursement transaction during EOD.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN73CreateNewAccrualScheduleCancelNotCopy
Test Objective : Create a new Accrual Schedule on an existing loan(Cancel - Not Copy).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for the Loan.
4. Create a New accrual schedule by Cancelling Copy Existing Accrual schedule
5. Log in to Approver user and Approve the created accrual schedule with two-touch
6. Navigate to Bundle viewer and Verify Transaction bundle for cancellation is not created by clicking on Bundle from Views menu on the left
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN74CopyanexistingactiveAccrualSchedule
Test Objective : Copy an existing active Accrual Schedule from a multi schedule loan and have the system cancel the existing one.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for the Loan.
4. Create a New accrual schedule by Copying Existing Accrual schedule
5. Enter an ID that matches the active or one of the cancelled accrual schedule ID and save.
6. Validate Error Message received - Error-Accrual Schedule Already Exists
7. Update the ID as next valid number after the current active accrual schedule ID
8. Log in to Approver user and Approve the created accrual schedule with two-touch
9. Navigate to Bundle viewer and Verify Transaction bundle for cancellation is created by clicking on Bundle from Views menu on the left
10. Verify that Bundle contains Transaction data as 'CHG ACCRL SCHE STATUS = CANCELLED'.
11. Approve and Post the Bundle.
12. Navigate to the existing Accrual Schedules window. Select and open the existing record.
13. Verify that existing Accrual Schedule status is cancelled as expected.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN75OffsetToOffsetMultipleTransactions
Test Objective : Creation of Offset to offset multiple transactions.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create 2 Transactions by entering all mandatory field values such that Transaction amounts not matching.
4. verify the net difference amount displayed.
5. Update second Transaction amount so that it matches the first transaction amount value
6. Click on submit for approval.
7. Verify status changed to pending approval.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN76CustomerAddressUsageReportDispPostedBundles
Test Objective : Verify Customer Address Usage Report displaying posted bundles.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Save and Submit the bundle for approval.
7. Navigate to the new Loan Window.
8. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
9. Select the Rate Setting Complete checkbox.
10. Save and Submit the bundle for approval.
11. Navigate to existing Customer Address window for an existing Customer.
12. Verify customer Usage Report displaying pending future dated and pending new loan bundle
13. Logout from Servicing application.
14. Login into Servicing application with valid approver credentials.
15. Navigate to Bundle window.
16. Right click on bundle and select Approve and Post Bundle.
17. Logout from Servicing application.
18. Login into ACBS Servicing application with valid user credentials.
19. Navigate to existing Customer Address window for an existing Customer.
20. Verify customer Usage Report displaying pending posting future dated and pending new loan bundle
21. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN77SplitMonthEndInvoiceRFRCompRateP
Test Objective : Split Month End Invoice RFR Compound Rate P.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN77SplitMonthEndInvoiceRFRCompRateP_DP1
Test Objective : Split Month End Invoice RFR Compound Rate P.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN78CreateLoanWithMultipleAccruals
Test Objective : Verify the ability to create a Match Funding Loan with multiple accruals for a Customer in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with multiple accruals with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Submit the bundle for approval
5. Verify this Transaction is pending approval by clicking on Bundle from Views menu on the left.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN78CreateLoanWithMultipleAccruals_DP1
Test Objective : Verify the ability to create a Match Funding Loan with multiple accruals for a Customer in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedules window for a Loan.
4. Select the existing Accrual Schedule record and open it.
5. Verify that Cost of Fund Rate value is equals to Base Rate.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN79LoanDisbursementOnZeroBalShell
Test Objective : Backdated Principal Payment after Loan Disbursement on zero balance shell.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3120.
5. Enter the transaction details on new Transaction screen.
6. Enter Cash offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Navigate to new Transaction window for a Loan.
9. Select the loan and enter the transaction code 3120.
10. Enter the transaction details on new Transaction screen.
11. Enter Cash offset details.
12. Click on the quick save button.
13. Verify that system throws an error message as Payment Amount Can Not Exceed Principal Amount For Transaction.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN80PayoffPrincipalInterestLoanfeepaymentFacilityfeepayment
Test Objective : Payoff an existing loan_3100, Interest Payment_3200, Loan Fee payment_3820 and Facility Fee Payment_2700 and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200, 3820 and 2700) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN80PayoffPrincipalInterestLoanfeepaymentFacilityfeepayment
Test Objective : Payoff an existing loan_3100, Interest Payment_3200, Loan Fee payment_3820 and Facility Fee Payment_2700 and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected in Facility window.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN81PayoffPrincipalInterestLoanfeepaymentFacilityfeepaymentDecreasefacilityamount
Test Objective : Payoff an existing loan_3100, Interest Payment_3200, Loan Fee payment_3820 and Facility Fee Payment_2700 Decrese facility amount 2320 and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the facility amount
3. Login into ACBS Servicing application with valid user credentials.
4. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200, 3820 and 2700) for a Loan.
5. Create a new Bundle and navigate to new Transaction window for a Facility.
6. Select the Facility and enter the transaction code as 2320.
7. Enter the transaction details on new Transaction window.
8. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN81PayoffPrincipalInterestLoanfeepaymentFacilityfeepaymentDecreasefacilityamount
Test Objective : Payoff an existing loan_3100, Interest Payment_3200, Loan Fee payment_3820 and Facility Fee Payment_2700 Decrese facility amount 2320 and verify satisfied dates appear after EOD runs.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Miscellaneous details window for an existing Loan.
4. Verify that Satisfied Posting and Effective Dates are displayed as expected.
5. Navigate to Additional details window for an existing Facility.
6. Verify that Satisfied Posting and Effective Dates are displayed as expected in Facility window.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN82LoanHistoryRoundedRates
Test Objective : Verify the rounded rates display for all in, base rate, and spread rate
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the effective Date.
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to Loan History Window.
5. Review history to verify that each rate change transaction has a second transaction for the rounded rate (even if the rate values are the same)
6. Run SQL query and fetch the Base amount
7. Run SQL query and fetch the Rounding Methods
8. Run SQL query and fetch the Rounding presions
9. Run SQL query and fetch the Accrual Schudle ID
10. Navigate to Rate Summary information tab and Verify that Current Rate value is displayed as expected.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN83LoanHistoryNonRoundedRates
Test Objective : Verify the rounded rates not displayed for all in, base rate, and spread rate
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and fetch the effective Date
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to Loan History Window.
5. Review history to verify that each rate change transaction dont have a second transaction for the rounded rate (even if the rate values are the same)
6. Run SQL query and fetch the base rate
7. Run SQL query and fetch the Accrual Schedule ID
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN84SplitMonthEndInvoiceRFRSimpleLagP
Test Objective : Split Month End Invoice RFR Simple LAG P.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN84SplitMonthEndInvoiceRFRSimpleLagP_DP1
Test Objective : Split Month End Invoice RFR Simple LAG P.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN85SplitMonthEndInvoiceRFRCompoundRateNAccrToLTDueDate
Test Objective : Split Month End Invoice RFR Compound Rate N Accr To LT Due Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN85SplitMonthEndInvoiceRFRCompoundRateNAccrToLTDueDate_DP1
Test Objective : Split Month End Invoice RFR Simple LAG P.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN86SplitMonthEndInvoiceRFRSimpleLagN
Test Objective : Split Month End Invoice RFR Simple LAG N.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN86SplitMonthEndInvoiceRFRSimpleLagN_DP1
Test Objective : Split Month End Invoice RFR Simple LAG N.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN87ModifyMinimumAccrualAmtTrans
Test Objective : Perform a transaction to modify existing minimum accrual amount
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3665.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN88ModifyMaximumAccrualAmtTrans
Test Objective : Perform a transaction to modify existing maximum accrual amount
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3666.
5. Enter the transaction details on new Transaction window.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN89LoanDisbursementReversalOnZeroBalShell
Test Objective : Backdated Loan Disbursement Reversal on zero balance shell.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Loan.
4. Select the loan and enter the transaction code 3120.
5. Enter the transaction details on new Transaction screen.
6. Enter Cash offset details.
7. Save and Submit the bundle. Login with Approver credential and post the bundle.
8. Navigate to new Transaction window for a Loan.
9. Select the loan and enter the transaction code 3130.
10. Enter the transaction details on new Transaction screen.
11. Enter Cash offset details.
12. Click on the quick save button.
13. Verify that system throws an error message as Payment Amount Can Not Exceed Principal Amount For Transaction.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN90CancelAndCreateAnAccrualSchedule
Test Objective : Cancel an existing active Accrual Schedule from a Loan schedule loan with multiple schudle exist
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the existing Accrual Schedule window for the Loan.
4. Create a New accrual schedule by Copying Existing Accrual schedule
5. Enter an ID that matches the active or one of the cancelled accrual schedule ID and save.
6. Validate Error Message received - Error-Accrual Schedule Already Exists
7. Update the ID as next valid number after the current active accrual schedule ID
8. Log in to Approver user and Approve the created accrual schedule with two-touch
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN91SplitMonthEndInvoiceRFRCompoundRateN
Test Objective : Split Month End Invoice RFR Compounded Rate N.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN91SplitMonthEndInvoiceRFRCompoundRateN_DP1
Test Objective : Split Month End Invoice RFR Compounded Rate N.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN92SplitMonthEndInvoiceRFRSimpleLagNAccrToLtDueDate
Test Objective : Split Month End Invoice RFR Simple LAG N Accr to LT Due Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to the new Loan Window.
4. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Cashoffset window and enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN92SplitMonthEndInvoiceRFRSimpleLagNAccrToLtDueDate_DP1
Test Objective : Split Month End Invoice RFR Simple LAG N Accr to LT Due Date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to Loan Invoices window and verify that invoice has been generated.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : LN93CreateNonUSDLoan
Test Objective : Verify the ability to create a new Non USD Loan.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Run SQL query and get the facility currency
3. Login into ACBS Servicing application with valid user credentials.
4. Navigate to the new Loan Window.
5. Enter all mandatory field values for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
6. Select the Rate Setting Complete checkbox.
7. Enter all mandatory field values in Cash Item window.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate22
Test Objective : Validate Regulation Z Indicator value at the facility(CAD Currency) level to C (Regulation Z Compliant) when loan is posted with loan amount equal to Initial draw amount.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount equal to initial draw amount(converted to CAD from USD) for CAD currency loan.
4. Verify that system doesn't throw the warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Login into ACBS Servicing application with valid user credentials.
7. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate23
Test Objective : Post and validate a CAD Currency Loan with loan amount less than initial draw amount and validate the warning message.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount less than initial draw amount for CAD currency loan.
4. Verify that system throws an expected warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.
7. Save and Submit the bundle. Login with approver credentials and post the bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate24
Test Objective : Post and validate a CAD currency loan with zero loan amount when Regulation Z indicator value as Y.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with zero loan amount for CAD currency loan.
4. Verify that system is not throwing an expected warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate25
Test Objective : Post and validate a CAD currency loan with zero loan amount when Regulation Z indicator value is Y and initial draw amount field is blank.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Enter New Loan tab information for a new loan with zero loan amount.
4. Click on Quick Save button to save the record.
5. Verify that system throws an expected Error message - 'Error-Initial Draw Amount Needed field on the facility cannot be 0 when Regulation Z Indicator is set to Y.'
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate26
Test Objective : Validate Regulation Z Indicator value at the facility(CAD Currency) level to C (Regulation Z Compliant) when loan is posted with loan amount equal to Initial draw amount with the Syndicate Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount equal to initial draw amount(converted to CAD from USD) for CAD currency loan for a syndicated facility.
4. Click on Quick Save button to save the record.
5. Verify that system throws the warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.
6. Click on Quick Save button to save the record.
7. Verify that system doesn't throw the warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.
8. Save and Submit the bundle. Login with approver credentials and post the bundle.
9. Login into ACBS Servicing application with valid user credentials.
10. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
11. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate27
Test Objective : Validate Regulation Z Indicator value at the facility(EUR Currency) level to C (Regulation Z Compliant) when loan is posted with loan amount less than Initial Draw amount.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount less than initial draw amount(converted to EUR from USD) for EUR currency loan.
4. Click on Quick Save button to save the record.
5. Verify that system throws the warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.
6. Save and Submit the bundle. Login with approver credentials and post the bundle.
7. Login into ACBS Servicing application with valid user credentials.
8. Create a new Bundle and navigate to new Transaction window.
9. Select the Loan and enter the transaction code as 3120.
10. Enter the transaction details on new Transaction window.
11. Verify that system throws the warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'. Save and Submit the Transaction.
12. Logout from Servicing application.
13. Login into ACBS Servicing application with Approver credentials.
14. Search and Post the Pending Approval Transaction Bundle.
15. Logout from Servicing application.
16. Login into ACBS Servicing application with valid user credentials.
17. Create a new Bundle and navigate to new Transaction window.
18. Select the Loan and enter the transaction code as 3120.
19. Enter the transaction details on new Transaction window.
20. Verify that system doesn't throw the warning message - 'Advance amount should not be below Initial Draw Amount Needed when Regulation Z Indicator is set to Y. Please see Supervisor'.Save and Submit the transaction.
21. Logout from Servicing application.
22. Login into ACBS Servicing application with Approver credentials.
23. Search and Post the Pending Approval Transaction Bundle.
24. Logout from Servicing application.
25. Login into ACBS Servicing application with valid user credentials.
26. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
27. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate28
Test Objective : Validate introducing new fx rates prior to approving loan doesn't impact posting loan successfully(Loan amount greater than Initial draw amount).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount greater than initial draw amount for CAD currency loan.
4. Introduce New FX Rates for CAD-USD with respect to current system date into fx rate maintenance table
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Login into ACBS Servicing application with valid user credentials.
7. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate29
Test Objective : Validate introducing new fx rates prior to approving loan doesn't impact posting loan successfully for Draft Transactions (Loan amount greater than Initial draw amount).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount greater than initial draw amount for CAD currency loan.
4. Verify that bundle status is pending input with drafts.
5. Introduce New FX Rates for CAD-USD with respect to current system date into fx rate maintenance table
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate29_DP1
Test Objective : Validate introducing new fx rates prior to approving loan doesn't impact posting loan successfully for Draft Transactions (Loan amount greater than Initial draw amount).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that bundle status is pending input with drafts.
4. Open the bundle and uncheck the Draft Loan checkbox.
5. Save and Submit the bundle. Login with approver credentials and post the bundle.
6. Login into ACBS Servicing application with valid user credentials.
7. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate30
Test Objective : Validate introducing new fx rates prior to approving loan doesn't impact posting loan successfully for Pending approval Transactions (Loan amount greater than Initial draw amount).
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Save a loan with loan amount greater than initial draw amount for CAD currency loan.
4. Save and Submit the bundle for approval.
5. Navigate to Bundle viewer and verify that there is a new Bundle Pending Approval.
6. Introduce New FX Rates for CAD-USD with respect to current system date into fx rate maintenance table
7. Logout from Servicing application.


#########################################################################################################
Test Case Name : CL21RegZUpdate30_DP1
Test Objective : Post and validate a CAD Currency Loan with loan amount greater than initial draw amount.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Verify that bundle is in pending approval.
4. Approve and post the bundle. Verify that the bundle is posted.
5. Logout from Servicing application.
6. Login into ACBS Servicing application with valid user credentials.
7. Navigate to edit Facility Additional Detail window and verify that updated Reg Z value is displayed as expected.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : CreateFXCCYNewLoanTransactionMT103
Test Objective : Verify the ability to payoff principal balance for a loan and the interest down to 0.02.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : CreateFXCCYNewLoanWithMT103POC
Test Objective : POC to create PI/New loans with future dated effective date
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with EURO currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Save and Submit the bundle for approval.
6. Save and Submit the bundle for approval.
7. Logout from Servicing application.
8. Login into Servicing application with valid approver credentials.
9. Navigate to Bundle window.
10. Right click on bundle and select Approve and Post Bundle.
11. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
12. Save and Submit the bundle. Login with approver credentials and post the bundle.
13. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
14. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY01CreateSWIFTM103
Test Objective : Verify the ability to create a SWIFT Payment instruction for a Customer in Servicing application.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with EURO currency and message type MT-103.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY02CreateNewLoanTransaction300
Test Objective : Verify the create FX CCY New Loan Transaction(300) with value date/swift advance days is >5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Select the Rate Setting Complete checkbox.
5. Navigate to Loan Repayment Schedule window.
6. Enter Loan Repayment Schedule Basic Information details.
7. Enter Loan Repayment Schedule Billing Information details and save the record.
8. Enter Cash offset information.
9. Save and Submit the bundle for approval.
10. Logout from Servicing application.
11. Login into Servicing application with valid approver credentials.
12. Navigate to Bundle window.
13. Right click on bundle and select Approve and Post Bundle.
14. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
15. Save and Submit the bundle. Login with Approver credential and post the bundle.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY03InterestPaymentTransaction3210
Test Objective : Verify the create FX New Interest Payment Transaction(3210) with value date/swift advance days is <=5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 3210.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY04InterestPaymentTransaction3210
Test Objective : Verify the create FX New Interest Payment Transaction(3210) with value date/swift advance days is >5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 3210.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY05ReverseFeePaymentTransaction3310
Test Objective : Verify the create FX New Interest Payment Transaction(3310) with value date/swift advance days is <=5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 3310.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY06LoanDisbursementTransaction3120
Test Objective : Verify the create FX Loan Disbursement Transaction(3120) with value date/swift advance days is <=5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code 3120.
5. Enter the transaction details on new Transaction screen.
6. Enter Cash offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY07CreateNewLoanTransaction300
Test Objective : Verify the create FX CCY New Loan Transaction(300) with value date/swift advance days is <=5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
4. Select the Rate Setting Complete checkbox.
5. Navigate to Loan Repayment Schedule window.
6. Enter Loan Repayment Schedule Basic Information details.
7. Enter Loan Repayment Schedule Billing Information details and save the record.
8. Enter Cash offset information.
9. Save and Submit the bundle for approval.
10. Logout from Servicing application.
11. Login into Servicing application with valid approver credentials.
12. Navigate to Bundle window.
13. Right click on bundle and select Approve and Post Bundle.
14. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
15. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY08ReversePrincipalPayment3110
Test Objective : Verify the create FX New Interest Payment Transaction(3110) with value date/swift advance days is <=5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 3110.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY09ReversePrincipalPayment3110
Test Objective : Verify the create FX New Interest Payment Transaction(3110) with value date/swift advance days is >5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 3110.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY10ReverseFeePaymentTransaction2710
Test Objective : Verify the create FX New Interest Payment Transaction(2710) with value date/swift advance days is <=5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2710.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY11ReverseFeePaymentTransaction3310AdvancedDayGreaterThan5Days
Test Objective : Verify the create FX New Interest Payment Transaction(3310) with value date/swift advance days is > 5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 3310.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY12LoanDisbursementTransaction3120AdvanceDayMoreThan5Days
Test Objective : Verify the create FX Loan Disbursement Transaction(3120) with value date/swift advance days is > 5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the loan and enter the transaction code 3120.
5. Enter the transaction details on new Transaction screen.
6. Enter Cash offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY13ReverseFeePaymentTransaction2710AdvancedDayGreaterThan5Days
Test Objective : Verify the create FX New Interest Payment Transaction(2710) with value date/swift advance days is > 5 days where swift message will be available same day to send MT103.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2710.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle for approval.
8. Logout from Servicing application.
9. Login into Servicing application with valid approver credentials.
10. Navigate to Bundle window.
11. Right click on bundle and select Approve and Post Bundle.
12. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
13. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY14CreateFacilityCAD
Test Objective : Verify the ability to create a new facility with Canadian Dollar currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY15LoanPayoffCAD
Test Objective : Perform a CAD loan pay-off transaction.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100, 3200 and 3820) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY16CreateFacilityAUD
Test Objective : Verify the create FX CCY create a new Facility for AUD Currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility with AUD currency for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY17LoanPayoffAUD
Test Objective : Verify the create FX CCY create a new Facility for AUD Currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Bundle and navigate to new Transaction window to post the multiple transactions (3100 and 3200) for a Loan.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY18FeePaymentCAD
Test Objective : Verify the ability to make facility fee payment for CAD Facility.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Navigate to new Transaction window for a Facility.
4. Select the Facility and enter the transaction code as 2700.
5. Enter the transaction details on new Transaction window.
6. Enter Cash Offset details.
7. Save and Submit the bundle. Login with approver credentials and post the Transaction bundle.
8. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY19CreateFacilityHKD
Test Objective : Verify the create FX CCY create a new Facility for HKD Currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility with HKD currency for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY20CreateFacilityJPY
Test Objective : Verify the create FX CCY create a new Facility for JPY Currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility with JPY currency for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY21CreateFacilityCHF
Test Objective : Verify the ability to create a new facility with CHF currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY22CreateFacilityDKK
Test Objective : Verify the ability to create a new facility with DKK currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY23CreateFacilityEUR
Test Objective : Verify the ability to create a new facility with EURO currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : FXCCY24CreateFacilityGBP
Test Objective : Verify the ability to create a new facility with GBP currency.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a new Facility for the customer by entering all mandatory field values.
4. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftAUD01
Test Objective : Create AUD Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with AUD currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftCAD02
Test Objective : Create CAD Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with CAD currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftCHF03
Test Objective : Create CHF Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with CHF currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftDKK04
Test Objective : Create DKK Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with DKK currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftEUR05
Test Objective : Create EUR Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with EUR currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftGBP06
Test Objective : Create GBP Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with GBP currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftHKD07
Test Objective : create PI/New loans with future dated effective date with HKD currency
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with HKD currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash Offset Information
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftJPY08
Test Objective : create PI/New loans with future dated effective date with HKD currency
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with HKD currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash Offset Information
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftMXN09
Test Objective : create PI/New loans with future dated effective date with HKD currency
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with HKD currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash Offset Information
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftNOK10
Test Objective : Create NOK Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with CHF currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftNZD11
Test Objective : Create NZD Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with CHF currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftSEK12
Test Objective : Create SEK Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with CHF currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : SwiftSGD13
Test Objective : Create SGD Swift PI and new loan with future dated effective date.
#########################################################################################################
1. Getting Test data from PreCondition_SourceData.csv file.
2. Login into ACBS Servicing application with valid user credentials.
3. Create a SWIFT Payment Instruction with CHF currency and message type MT-103.
4. Create a Loan for an existing Facility - Enter Loan details with the help of new bundle for Tabs: New Loan, Servicing Info, Risk Info, Regulatory Info, Repayment Schedule and Additional Field.
5. Select the Rate Setting Complete checkbox.
6. Navigate to Loan Repayment Schedule window.
7. Enter Loan Repayment Schedule Basic Information details.
8. Enter Loan Repayment Schedule Billing Information details and save the record.
9. Enter Cash offset information.
10. Save and Submit the bundle for approval.
11. Logout from Servicing application.
12. Login into Servicing application with valid approver credentials.
13. Navigate to Bundle window.
14. Right click on bundle and select Approve and Post Bundle.
15. Verify that bundle submitted but posting status is moved to 'PENDING POSTING'.
16. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_1
Test Objective : Verify the ability to create a Back dated Syndicate Facility for a Customer in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Back dated Syndicate Facility for a Customer by entering all field values for Tabs - New Facility Information, Basic Information, Servicing Information, Drawing Information, Risk Information, Risk Management Information, Miscellaneous Information and Reference Information.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_2
Test Objective : Verify the ability to add an Agent Share record for a Syndicated Facility in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create an Agent Share record to the Syndicated Facility by entering all field values. (Lender Information and Lender Share Information)
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_3
Test Objective : Verify the ability to add an Investor record for a Syndicated Facility Using the Add Specific Investor feature in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create an Investor to the Syndicated Facility - FCT2 using Customer - CIF3 as an Investor by entering all field values. (Lender Information and Lender Share Information)
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_4
Test Objective : Verify the ability to add an Investor that is copied from other Facility for a Syndicated Facility in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create an Investor that is copied from other Existing Syndicate Facility - FCT1 for a Syndicated Facility - FCT2 by entering all field values. (Lender Information and Lender Share Information)
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_5
Test Objective : Verify the ability to add Customer to Investors List in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Add an Existing Customer to Investors list in Servicing application. (Loan Servicing Queue window top menu| Actions| Other Options| Investor Groups| Investors tab)
3. Add another Customer to Investors list in Servicing application. (Loan Servicing Queue window top menu| Actions| Other Options| Investor Groups| Investors tab)
4. First Investor information:
5. Second Investor information:
6. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_6
Test Objective : Verify the ability to create a new Investor Group and add Investors to the Group in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Add an Investor Group and associate Investors in Servicing application. (Loan Servicing Queue window top menu| Actions| Other Options| Investor Groups)
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility2Setup_7
Test Objective : Verify the ability to add an Investor (Selected from Investor Group) for a Syndicated Facility in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Add an Investor (Selected from Investor Group) to the Syndicated Facility - FCT2 by entering all field values. (Lender Information and Lender Share Information)
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacility3Setup_1
Test Objective : Verify the ability to create a Syndicate Facility and add Investors to it in Servicing application. (This facility is being created to verify Facility/Loan Investors Summary Information).
#########################################################################################################
1. Create a new Multicurrency Syndicate Facility for the Existing Customer by entering all field values for Tabs - New Facility Information, Basic Information, Servicing Information, Drawing Information, Risk Information, Risk Management Information, Miscellaneous Information and Reference Information.
2. Create an Agent Share record individually to the Syndicated Facility - FCT1 by entering all field values. (Basic Information, Instructions Information and Additional Information)
3. Create multiple Investor records individually to the Syndicated Facility - FCT1 by entering all field values. (Basic Information, Instructions Information and Additional Information)


#########################################################################################################
Test Case Name : NewSyndicateFacilitySetup_1
Test Objective : Verify the ability to create Syndicate Facility for a Customer in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Create a new Syndicate Facility for a Customer by entering all field values for Tabs - New Facility Information, Basic Information, Servicing Information, Drawing Information, Risk Information, Risk Management Information, Miscellaneous Information and Reference Information.
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacilitySetup_2
Test Objective : Verify the ability to add an Agent Share record individually to Syndicated Facility in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Add an Agent Share record individually to the Syndicated Facility - FCT1 by entering all field values. (Basic Information, Instructions Information and Additional Information)
3. Logout from Servicing application.


#########################################################################################################
Test Case Name : NewSyndicateFacilitySetup_3
Test Objective : Verify the ability to add multiple Investors and Participants individually to Syndicated Facility in Servicing application.
#########################################################################################################
1. Login into ACBS Servicing application with valid user credentials.
2. Add multiple Investor records individually to the Syndicated Facility - FCT1 by entering all field values. (Basic Information, Instructions Information and Additional Information)
3. Create multiple Participant records individually to the Syndicated Facility - FCT1 by entering all field values. (Basic Information, Instructions Information and Additional Information)
4. Logout from Servicing application.


